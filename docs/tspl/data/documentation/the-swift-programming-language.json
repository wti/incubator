{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language"},"hierarchy":{"paths":[[]]},"topicSections":[{"identifiers":["doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AboutSwift","doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Compatibility","doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/GuidedTour"],"title":"Welcome to Swift"},{"title":"Language Guide","identifiers":["doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/TheBasics","doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/BasicOperators","doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/StringsAndCharacters","doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/CollectionTypes","doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/ControlFlow","doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Functions","doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Closures","doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Enumerations","doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/ClassesAndStructures","doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Properties","doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Methods","doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Subscripts","doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Inheritance","doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Initialization","doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Deinitialization","doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/OptionalChaining","doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/ErrorHandling","doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Concurrency","doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Macros","doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/TypeCasting","doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/NestedTypes","doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Extensions","doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Protocols","doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Generics","doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/OpaqueTypes","doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AutomaticReferenceCounting","doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/MemorySafety","doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AccessControl","doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AdvancedOperators"]},{"identifiers":["doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AboutTheLanguageReference","doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/LexicalStructure","doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Types","doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Expressions","doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Statements","doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations","doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Attributes","doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Patterns","doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/GenericParametersAndArguments","doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/SummaryOfTheGrammar"],"title":"Language Reference"},{"identifiers":["doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/RevisionHistory"],"title":"Revision History"}],"kind":"article","sections":[],"metadata":{"title":"The Swift Programming Language (5.9.2)"},"schemaVersion":{"major":0,"patch":0,"minor":3},"references":{"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/ClassesAndStructures":{"role":"article","url":"\/documentation\/the-swift-programming-language\/classesandstructures","abstract":[{"type":"text","text":"Model custom types that encapsulate data."}],"kind":"article","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/ClassesAndStructures","title":"Structures and Classes","type":"topic"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Attributes":{"kind":"article","role":"article","type":"topic","url":"\/documentation\/the-swift-programming-language\/attributes","title":"Attributes","abstract":[{"text":"Add information to declarations and types.","type":"text"}],"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Attributes"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/AutomaticReferenceCounting":{"abstract":[{"type":"text","text":"Model the lifetime of objects and their relationships."}],"url":"\/documentation\/the-swift-programming-language\/automaticreferencecounting","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AutomaticReferenceCounting","title":"Automatic Reference Counting","type":"topic","role":"article","kind":"article"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/AboutTheLanguageReference":{"url":"\/documentation\/the-swift-programming-language\/aboutthelanguagereference","title":"About the Language Reference","abstract":[{"type":"text","text":"Read the notation that the formal grammar uses."}],"kind":"article","role":"article","type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AboutTheLanguageReference"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/SummaryOfTheGrammar":{"url":"\/documentation\/the-swift-programming-language\/summaryofthegrammar","title":"Summary of the Grammar","abstract":[{"type":"text","text":"Read the whole formal grammar."}],"kind":"article","role":"article","type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/SummaryOfTheGrammar"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/NestedTypes":{"url":"\/documentation\/the-swift-programming-language\/nestedtypes","title":"Nested Types","abstract":[{"type":"text","text":"Define types inside the scope of another type."}],"kind":"article","role":"article","type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/NestedTypes"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Methods":{"url":"\/documentation\/the-swift-programming-language\/methods","kind":"article","abstract":[{"type":"text","text":"Define and call functions that are part of an instance or type."}],"title":"Methods","role":"article","type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Methods"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Patterns":{"role":"article","url":"\/documentation\/the-swift-programming-language\/patterns","abstract":[{"text":"Match and destructure values.","type":"text"}],"title":"Patterns","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Patterns","type":"topic","kind":"article"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Generics":{"title":"Generics","role":"article","abstract":[{"text":"Write code that works for multiple types and specify requirements for those types.","type":"text"}],"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Generics","url":"\/documentation\/the-swift-programming-language\/generics","kind":"article","type":"topic"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Properties":{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Properties","type":"topic","abstract":[{"type":"text","text":"Access stored and computed values that are part of an instance or type."}],"title":"Properties","url":"\/documentation\/the-swift-programming-language\/properties","kind":"article","role":"article"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Subscripts":{"abstract":[{"type":"text","text":"Access the elements of a collection."}],"url":"\/documentation\/the-swift-programming-language\/subscripts","kind":"article","title":"Subscripts","role":"article","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Subscripts","type":"topic"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Types":{"url":"\/documentation\/the-swift-programming-language\/types","title":"Types","abstract":[{"type":"text","text":"Use built-in named and compound types."}],"kind":"article","role":"article","type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Types"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/ControlFlow":{"url":"\/documentation\/the-swift-programming-language\/controlflow","abstract":[{"text":"Structure code with branches, loops, and early exits.","type":"text"}],"title":"Control Flow","type":"topic","role":"article","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/ControlFlow","kind":"article"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/GuidedTour":{"url":"\/documentation\/the-swift-programming-language\/guidedtour","title":"A Swift Tour","abstract":[{"type":"text","text":"Explore the features and syntax of Swift."}],"kind":"article","role":"article","type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/GuidedTour"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Closures":{"url":"\/documentation\/the-swift-programming-language\/closures","title":"Closures","abstract":[{"type":"text","text":"Group code that executes together, without creating a named function."}],"kind":"article","role":"article","type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Closures"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/LexicalStructure":{"url":"\/documentation\/the-swift-programming-language\/lexicalstructure","title":"Lexical Structure","abstract":[{"type":"text","text":"Use the lowest-level components of the syntax."}],"kind":"article","role":"article","type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/LexicalStructure"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/StringsAndCharacters":{"url":"\/documentation\/the-swift-programming-language\/stringsandcharacters","title":"Strings and Characters","abstract":[{"type":"text","text":"Store and manipulate text."}],"kind":"article","role":"article","type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/StringsAndCharacters"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/TypeCasting":{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/TypeCasting","role":"article","title":"Type Casting","kind":"article","type":"topic","url":"\/documentation\/the-swift-programming-language\/typecasting","abstract":[{"text":"Determine a value’s runtime type and give it more specific type information.","type":"text"}]},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/AboutSwift":{"url":"\/documentation\/the-swift-programming-language\/aboutswift","title":"About Swift","abstract":[{"type":"text","text":"Understand the high-level goals of the language."}],"kind":"article","role":"article","type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AboutSwift"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/CollectionTypes":{"type":"topic","kind":"article","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/CollectionTypes","role":"article","url":"\/documentation\/the-swift-programming-language\/collectiontypes","abstract":[{"type":"text","text":"Organize data using arrays, sets, and dictionaries."}],"title":"Collection Types"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/AdvancedOperators":{"url":"\/documentation\/the-swift-programming-language\/advancedoperators","title":"Advanced Operators","abstract":[{"type":"text","text":"Define custom operators, perform bitwise operations, and use builder syntax."}],"kind":"article","role":"article","type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AdvancedOperators"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Enumerations":{"url":"\/documentation\/the-swift-programming-language\/enumerations","type":"topic","title":"Enumerations","role":"article","abstract":[{"text":"Model custom types that define a list of possible values.","type":"text"}],"kind":"article","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Enumerations"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Compatibility":{"url":"\/documentation\/the-swift-programming-language\/compatibility","title":"Version Compatibility","abstract":[{"type":"text","text":"Learn what functionality is available in older language modes."}],"kind":"article","role":"article","type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Compatibility"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Expressions":{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Expressions","type":"topic","kind":"article","title":"Expressions","abstract":[{"type":"text","text":"Access, modify, and assign values."}],"role":"article","url":"\/documentation\/the-swift-programming-language\/expressions"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Initialization":{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Initialization","url":"\/documentation\/the-swift-programming-language\/initialization","title":"Initialization","kind":"article","type":"topic","role":"article","abstract":[{"text":"Set the initial values for a type’s stored properties and perform one-time setup.","type":"text"}]},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Macros":{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Macros","type":"topic","kind":"article","abstract":[{"type":"text","text":"Use macros to generate code at compile time."}],"title":"Macros","role":"article","url":"\/documentation\/the-swift-programming-language\/macros"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Inheritance":{"title":"Inheritance","url":"\/documentation\/the-swift-programming-language\/inheritance","type":"topic","role":"article","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Inheritance","abstract":[{"text":"Subclass to add or override functionality.","type":"text"}],"kind":"article"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Concurrency":{"abstract":[{"type":"text","text":"Perform asynchronous operations."}],"url":"\/documentation\/the-swift-programming-language\/concurrency","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Concurrency","title":"Concurrency","type":"topic","role":"article","kind":"article"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/RevisionHistory":{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/RevisionHistory","type":"topic","kind":"article","title":"Document Revision History","abstract":[{"type":"text","text":"Review the recent changes to this book."}],"role":"article","url":"\/documentation\/the-swift-programming-language\/revisionhistory"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Protocols":{"abstract":[{"type":"text","text":"Define requirements that conforming types must implement."}],"url":"\/documentation\/the-swift-programming-language\/protocols","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Protocols","title":"Protocols","type":"topic","role":"article","kind":"article"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/OpaqueTypes":{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/OpaqueTypes","type":"topic","kind":"article","abstract":[{"type":"text","text":"Hide implementation details about a value’s type."}],"title":"Opaque and Boxed Types","role":"article","url":"\/documentation\/the-swift-programming-language\/opaquetypes"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/ErrorHandling":{"role":"article","url":"\/documentation\/the-swift-programming-language\/errorhandling","abstract":[{"text":"Respond to and recover from errors.","type":"text"}],"title":"Error Handling","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/ErrorHandling","type":"topic","kind":"article"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/BasicOperators":{"abstract":[{"type":"text","text":"Perform operations like assignment, arithmetic, and comparison."}],"kind":"article","title":"Basic Operators","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/BasicOperators","type":"topic","role":"article","url":"\/documentation\/the-swift-programming-language\/basicoperators"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Statements":{"kind":"article","abstract":[{"type":"text","text":"Group expressions and control the flow of execution."}],"type":"topic","url":"\/documentation\/the-swift-programming-language\/statements","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Statements","role":"article","title":"Statements"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/GenericParametersAndArguments":{"kind":"article","abstract":[{"type":"text","text":"Generalize declarations to abstract away concrete types."}],"type":"topic","url":"\/documentation\/the-swift-programming-language\/genericparametersandarguments","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/GenericParametersAndArguments","role":"article","title":"Generic Parameters and Arguments"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/MemorySafety":{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/MemorySafety","role":"article","title":"Memory Safety","url":"\/documentation\/the-swift-programming-language\/memorysafety","kind":"article","type":"topic","abstract":[{"text":"Structure your code to avoid conflicts when accessing memory.","type":"text"}]},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/AccessControl":{"role":"article","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AccessControl","url":"\/documentation\/the-swift-programming-language\/accesscontrol","type":"topic","abstract":[{"text":"Manage the visibility of code by declaration, file, and module.","type":"text"}],"kind":"article","title":"Access Control"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/OptionalChaining":{"type":"topic","kind":"article","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/OptionalChaining","role":"article","url":"\/documentation\/the-swift-programming-language\/optionalchaining","abstract":[{"type":"text","text":"Access members of an optional value without unwrapping."}],"title":"Optional Chaining"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Declarations":{"kind":"article","abstract":[{"type":"text","text":"Introduce types, operators, variables, and other names and constructs."}],"type":"topic","url":"\/documentation\/the-swift-programming-language\/declarations","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations","role":"article","title":"Declarations"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/TheBasics":{"kind":"article","abstract":[{"type":"text","text":"Work with common kinds of data and write basic syntax."}],"type":"topic","url":"\/documentation\/the-swift-programming-language\/thebasics","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/TheBasics","role":"article","title":"The Basics"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Extensions":{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Extensions","role":"article","title":"Extensions","kind":"article","abstract":[{"type":"text","text":"Add functionality to an existing type."}],"type":"topic","url":"\/documentation\/the-swift-programming-language\/extensions"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Functions":{"kind":"article","type":"topic","url":"\/documentation\/the-swift-programming-language\/functions","title":"Functions","role":"article","abstract":[{"text":"Define and call functions, label their arguments, and use their return values.","type":"text"}],"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Functions"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Deinitialization":{"abstract":[{"type":"text","text":"Release resources that require custom cleanup."}],"url":"\/documentation\/the-swift-programming-language\/deinitialization","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Deinitialization","title":"Deinitialization","type":"topic","role":"article","kind":"article"}}}