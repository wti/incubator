{"sections":[],"abstract":[{"type":"text","text":"Review the recent changes to this book."}],"identifier":{"url":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/RevisionHistory","interfaceLanguage":"swift"},"schemaVersion":{"minor":3,"patch":0,"major":0},"hierarchy":{"paths":[["doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language"]]},"primaryContentSections":[{"kind":"content","content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"2023-12-11","type":"text"}]}]},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"Updated for Swift 5.9.2."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Added information about the ","type":"text"},{"type":"codeVoice","code":"borrowing"},{"type":"text","text":" and "},{"code":"consuming","type":"codeVoice"},{"text":" modifiers","type":"text"},{"text":" ","type":"text"},{"text":"to the ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#Parameter-Modifiers"},{"text":" section.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Added information in ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/TheBasics#Declaring-Constants-and-Variables"},{"type":"text","text":" "},{"type":"text","text":"about setting a constant’s value after its declaration."}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Added more information about tasks, task groups, and task cancellation"},{"type":"text","text":" "},{"type":"text","text":"to the "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Concurrency","type":"reference","isActive":true},{"type":"text","text":" chapter."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Added information in the ","type":"text"},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Macros","isActive":true},{"type":"text","text":" chapter"},{"type":"text","text":" "},{"text":"about implementing macros in an existing Swift package.","type":"text"}]}]},{"content":[{"inlineContent":[{"text":"Updated the ","type":"text"},{"isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Attributes#attached","type":"reference"},{"type":"text","text":" section,"},{"type":"text","text":" "},{"text":"now that extension macros have replaced conformance macros.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Added the "},{"isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Attributes#backDeployed","type":"reference"},{"type":"text","text":" section"},{"type":"text","text":" "},{"type":"text","text":"with information about back deployment."}]}]}],"type":"unorderedList"},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"2023-09-18","type":"text"}]}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"Updated for Swift 5.9.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Added information about "},{"code":"if","type":"codeVoice"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"switch"},{"type":"text","text":" expressions"},{"type":"text","text":" "},{"type":"text","text":"to the "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/ControlFlow","isActive":true,"type":"reference"},{"text":" chapter","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"and the "},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Expressions#Conditional-Expression"},{"type":"text","text":" section."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Added the "},{"isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Macros","type":"reference"},{"type":"text","text":" chapter,"},{"text":" ","type":"text"},{"type":"text","text":"with information about generating code at compile time."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Expanded the discussion of optionals in ","type":"text"},{"isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/TheBasics","type":"reference"},{"text":".","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Added an example of concurrency to "},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/GuidedTour"},{"text":".","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Added information about boxed protocol types","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"to the "},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/OpaqueTypes","isActive":true},{"text":" chapter.","type":"text"}]}]},{"content":[{"inlineContent":[{"text":"Added information about the ","type":"text"},{"type":"codeVoice","code":"buildPartialBlock(first:)"},{"type":"text","text":" "},{"text":"and ","type":"text"},{"code":"buildPartialBlock(accumulated:next:)","type":"codeVoice"},{"text":" methods","type":"text"},{"type":"text","text":" "},{"text":"to the ","type":"text"},{"isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Attributes#Result-Transformations","type":"reference"},{"text":" section.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Added visionOS to the lists of platforms in","type":"text"},{"text":" ","type":"text"},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Attributes#available","type":"reference","isActive":true},{"type":"text","text":" "},{"text":"and ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Statements#Conditional-Compilation-Block"},{"type":"text","text":"."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Formatted the formal grammar to use blank lines for grouping."}]}]}]},{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"2023-03-30"}],"type":"strong"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Updated for Swift 5.8."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Added the ","type":"text"},{"isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/ControlFlow#Deferred-Actions","type":"reference"},{"type":"text","text":" section,"},{"type":"text","text":" "},{"type":"text","text":"showing "},{"code":"defer","type":"codeVoice"},{"type":"text","text":" outside of error handling."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Adopted Swift-DocC for publication.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Minor corrections and additions throughout.","type":"text"}]}]}]},{"inlineContent":[{"type":"strong","inlineContent":[{"text":"2022-09-12","type":"text"}]}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Updated for Swift 5.7."}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Added the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Concurrency#Sendable-Types"},{"text":" section,","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"with information about sending data between actors and tasks,"},{"text":" ","type":"text"},{"text":"and added information about the ","type":"text"},{"code":"@Sendable","type":"codeVoice"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"@unchecked"},{"type":"text","text":" attributes"},{"type":"text","text":" "},{"text":"to the ","type":"text"},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Attributes#Sendable","isActive":true},{"text":" and ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Attributes#unchecked"},{"text":" sections.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Added the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/LexicalStructure#Regular-Expression-Literals"},{"text":" section","type":"text"},{"type":"text","text":" "},{"type":"text","text":"with information about creating a regular expression."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Added information about the short form of "},{"type":"codeVoice","code":"if"},{"type":"text","text":"-"},{"code":"let","type":"codeVoice"},{"type":"text","text":" "},{"type":"text","text":"to the "},{"isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/TheBasics#Optional-Binding","type":"reference"},{"type":"text","text":" section."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Added information about ","type":"text"},{"type":"codeVoice","code":"#unavailable"},{"text":" ","type":"text"},{"type":"text","text":"to the "},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/ControlFlow#Checking-API-Availability"},{"type":"text","text":" section."}]}]}]},{"inlineContent":[{"type":"strong","inlineContent":[{"text":"2022-03-14","type":"text"}]}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Updated for Swift 5.6."}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Updated the "},{"isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Expressions#Explicit-Member-Expression","type":"reference"},{"type":"text","text":" section"},{"type":"text","text":" "},{"type":"text","text":"with information about using "},{"code":"#if","type":"codeVoice"},{"text":" ","type":"text"},{"text":"around chained method calls and other postfix expressions.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Updated the visual styling of figures throughout."}]}]}],"type":"unorderedList"},{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"2021-09-20"}],"type":"strong"}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Updated for Swift 5.5."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Added information about asynchronous functions, tasks, and actors"},{"text":" ","type":"text"},{"text":"to the ","type":"text"},{"isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Concurrency","type":"reference"},{"type":"text","text":" chapter,"},{"text":" ","type":"text"},{"text":"and to the ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#Actor-Declaration"},{"text":",","type":"text"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#Asynchronous-Functions-and-Methods"},{"type":"text","text":","},{"type":"text","text":" "},{"type":"text","text":"and "},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Expressions#Await-Operator","isActive":true},{"type":"text","text":" sections."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Updated the ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/LexicalStructure#Identifiers"},{"type":"text","text":" section"},{"type":"text","text":" "},{"text":"with information about identifiers that start with an underscore.","type":"text"}]}]}],"type":"unorderedList"},{"inlineContent":[{"inlineContent":[{"type":"text","text":"2021-04-26"}],"type":"strong"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Updated for Swift 5.4."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Added the "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AdvancedOperators#Result-Builders","type":"reference","isActive":true},{"type":"text","text":" "},{"type":"text","text":"and "},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Attributes#resultBuilder"},{"text":" sections","type":"text"},{"text":" ","type":"text"},{"text":"with information about result builders.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Added the ","type":"text"},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Expressions#Implicit-Conversion-to-a-Pointer-Type","isActive":true,"type":"reference"},{"type":"text","text":" section"},{"text":" ","type":"text"},{"type":"text","text":"with information about how in-out parameters"},{"text":" ","type":"text"},{"text":"can be implicitly converted to unsafe pointers in a function call.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Updated the ","type":"text"},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Functions#Variadic-Parameters","type":"reference","isActive":true},{"type":"text","text":" "},{"text":"and ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#Function-Declaration"},{"text":" sections,","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"now that a function can have multiple variadic parameters."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Updated the "},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Expressions#Implicit-Member-Expression","isActive":true},{"text":" section,","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"now that implicit member expressions can be chained together."}]}]}]},{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"2020-09-16","type":"text"}],"type":"strong"}]},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"Updated for Swift 5.3."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Added information about multiple trailing closures","type":"text"},{"type":"text","text":" "},{"type":"text","text":"to the "},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Closures#Trailing-Closures","isActive":true},{"type":"text","text":" section,"},{"type":"text","text":" "},{"type":"text","text":"and added information about how trailing closures are matched to parameters"},{"type":"text","text":" "},{"text":"to the ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Expressions#Function-Call-Expression"},{"type":"text","text":" section."}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Added information about synthesized implementations"},{"text":" ","type":"text"},{"type":"text","text":"of "},{"type":"codeVoice","code":"Comparable"},{"type":"text","text":" for enumerations"},{"type":"text","text":" "},{"text":"to the ","type":"text"},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Protocols#Adopting-a-Protocol-Using-a-Synthesized-Implementation","isActive":true},{"type":"text","text":" section."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Added the ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Generics#Contextual-Where-Clauses"},{"type":"text","text":" section"},{"text":" ","type":"text"},{"type":"text","text":"now that you can write a generic "},{"code":"where","type":"codeVoice"},{"type":"text","text":" clause in more places."}]}]},{"content":[{"inlineContent":[{"text":"Added the ","type":"text"},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AutomaticReferenceCounting#Unowned-Optional-References","type":"reference","isActive":true},{"text":" section","type":"text"},{"text":" ","type":"text"},{"text":"with information about using unowned references with optional values.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Added information about the ","type":"text"},{"type":"codeVoice","code":"@main"},{"text":" attribute","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"to the "},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Attributes#main"},{"text":" section.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Added ","type":"text"},{"type":"codeVoice","code":"#filePath"},{"text":" to the ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Expressions#Literal-Expression"},{"type":"text","text":" section,"},{"text":" ","type":"text"},{"text":"and updated the discussion of ","type":"text"},{"code":"#file","type":"codeVoice"},{"type":"text","text":"."}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Updated the "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Closures#Escaping-Closures","isActive":true,"type":"reference"},{"text":" section,","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"now that closures can refer to "},{"code":"self","type":"codeVoice"},{"text":" implicitly in more scenarios.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Updated the ","type":"text"},{"isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/ErrorHandling#Handling-Errors-Using-Do-Catch","type":"reference"},{"text":" ","type":"text"},{"type":"text","text":"and "},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Statements#Do-Statement"},{"text":" sections,","type":"text"},{"type":"text","text":" "},{"text":"now that a ","type":"text"},{"code":"catch","type":"codeVoice"},{"type":"text","text":" clause can match against multiple errors."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Added more information about "},{"code":"Any","type":"codeVoice"},{"type":"text","text":" "},{"text":"and moved it into the new ","type":"text"},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Types#Any-Type","type":"reference","isActive":true},{"type":"text","text":" section."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Updated the "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Properties#Property-Observers","isActive":true,"type":"reference"},{"type":"text","text":" section,"},{"type":"text","text":" "},{"type":"text","text":"now that lazy properties can have observers."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Updated the "},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#Protocol-Declaration"},{"text":" section,","type":"text"},{"type":"text","text":" "},{"text":"now that members of an enumeration can satisfy protocol requirements.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Updated the ","type":"text"},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#Stored-Variable-Observers-and-Property-Observers","type":"reference","isActive":true},{"type":"text","text":" section"},{"text":" ","type":"text"},{"type":"text","text":"to describe when the getter is called before the observer."}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Updated the "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/MemorySafety","isActive":true,"type":"reference"},{"type":"text","text":" chapter"},{"type":"text","text":" "},{"type":"text","text":"to mention atomic operations."}],"type":"paragraph"}]}],"type":"unorderedList"},{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"2020-03-24","type":"text"}],"type":"strong"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Updated for Swift 5.2.","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Added information about passing a key path instead of a closure"},{"text":" ","type":"text"},{"type":"text","text":"to the "},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Expressions#Key-Path-Expression"},{"text":" section.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Added the ","type":"text"},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#Methods-with-Special-Names","isActive":true},{"text":" section","type":"text"},{"type":"text","text":" "},{"type":"text","text":"with information about syntactic sugar the lets instances of"},{"text":" ","type":"text"},{"type":"text","text":"classes, structures, and enumerations be used with function call syntax."}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Updated the "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Subscripts#Subscript-Options","isActive":true,"type":"reference"},{"type":"text","text":" section,"},{"type":"text","text":" "},{"type":"text","text":"now that subscripts support parameters with default values."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Updated the ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Types#Self-Type"},{"type":"text","text":" section,"},{"type":"text","text":" "},{"type":"text","text":"now that the "},{"type":"codeVoice","code":"Self"},{"text":" can be used in more contexts.","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Updated the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/TheBasics#Implicitly-Unwrapped-Optionals"},{"text":" section","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"to make it clearer that an implicitly unwrapped optional value"},{"type":"text","text":" "},{"type":"text","text":"can be used as either an optional or non-optional value."}],"type":"paragraph"}]}]},{"inlineContent":[{"type":"strong","inlineContent":[{"text":"2019-09-10","type":"text"}]}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"Updated for Swift 5.1."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Added information about functions","type":"text"},{"text":" ","type":"text"},{"text":"that specify a protocol that their return value conforms to,","type":"text"},{"text":" ","type":"text"},{"text":"instead of providing a specific named return type,","type":"text"},{"text":" ","type":"text"},{"text":"to the ","type":"text"},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/OpaqueTypes","type":"reference","isActive":true},{"type":"text","text":" chapter."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Added information about property wrappers","type":"text"},{"type":"text","text":" "},{"type":"text","text":"to the "},{"isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Properties#Property-Wrappers","type":"reference"},{"type":"text","text":" section."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Added information about enumerations and structures"},{"type":"text","text":" "},{"type":"text","text":"that are frozen for library evolution"},{"type":"text","text":" "},{"text":"to the ","type":"text"},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Attributes#frozen","isActive":true,"type":"reference"},{"text":" section.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Added the "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Functions#Functions-With-an-Implicit-Return","isActive":true,"type":"reference"},{"text":" ","type":"text"},{"type":"text","text":"and "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Properties#Shorthand-Getter-Declaration","type":"reference","isActive":true},{"text":" sections","type":"text"},{"type":"text","text":" "},{"type":"text","text":"with information about functions that omit "},{"code":"return","type":"codeVoice"},{"text":".","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Added information about using subscripts on types"},{"type":"text","text":" "},{"text":"to the ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Subscripts#Type-Subscripts"},{"type":"text","text":" section."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Updated the ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Patterns#Enumeration-Case-Pattern"},{"type":"text","text":" section,"},{"text":" ","type":"text"},{"text":"now that an enumeration case pattern can match an optional value.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Updated the "},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Initialization#Memberwise-Initializers-for-Structure-Types"},{"text":" section,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"now that memberwise initializers support"},{"type":"text","text":" "},{"text":"omitting parameters for properties that have a default value.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Added information about dynamic members","type":"text"},{"type":"text","text":" "},{"type":"text","text":"that are looked up by key path at runtime"},{"type":"text","text":" "},{"text":"to the ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Attributes#dynamicMemberLookup"},{"type":"text","text":" section."}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Added "},{"type":"codeVoice","code":"macCatalyst"},{"type":"text","text":" to the list of target environments"},{"text":" ","type":"text"},{"text":"in ","type":"text"},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Statements#Conditional-Compilation-Block","isActive":true,"type":"reference"},{"type":"text","text":"."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Updated the "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Types#Self-Type","isActive":true,"type":"reference"},{"type":"text","text":" section,"},{"type":"text","text":" "},{"text":"now that ","type":"text"},{"type":"codeVoice","code":"Self"},{"type":"text","text":" can be used to refer to the type"},{"text":" ","type":"text"},{"type":"text","text":"introduced by the current class, structure, or enumeration declaration."}],"type":"paragraph"}]}],"type":"unorderedList"},{"inlineContent":[{"inlineContent":[{"type":"text","text":"2019-03-25"}],"type":"strong"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"Updated for Swift 5.0."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Added the "},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/StringsAndCharacters#Extended-String-Delimiters","isActive":true},{"text":" section","type":"text"},{"text":" ","type":"text"},{"text":"and updated the ","type":"text"},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/LexicalStructure#String-Literals","isActive":true,"type":"reference"},{"type":"text","text":" section"},{"type":"text","text":" "},{"type":"text","text":"with information about extended string delimiters."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Added the ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Attributes#dynamicCallable"},{"type":"text","text":" section"},{"text":" ","type":"text"},{"text":"with information about dynamically calling instances as functions","type":"text"},{"type":"text","text":" "},{"type":"text","text":"using the "},{"code":"dynamicCallable","type":"codeVoice"},{"text":" attribute.","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Added the "},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Attributes#unknown"},{"type":"text","text":" and "},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Statements#Switching-Over-Future-Enumeration-Cases","isActive":true},{"type":"text","text":" sections"},{"type":"text","text":" "},{"text":"with information about handling future enumeration cases","type":"text"},{"type":"text","text":" "},{"type":"text","text":"in switch statements using"},{"text":" ","type":"text"},{"text":"the ","type":"text"},{"type":"codeVoice","code":"unknown"},{"type":"text","text":" switch case attribute."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Added information about the identity key path ("},{"code":"\\.self","type":"codeVoice"},{"type":"text","text":")"},{"type":"text","text":" "},{"text":"to the ","type":"text"},{"isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Expressions#Key-Path-Expression","type":"reference"},{"text":" section.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Added information about using the less than (","type":"text"},{"code":"<","type":"codeVoice"},{"type":"text","text":") operator"},{"text":" ","type":"text"},{"type":"text","text":"in platform conditions to the "},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Statements#Conditional-Compilation-Block","isActive":true},{"type":"text","text":" section."}]}]}]},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"2018-09-17"}]}]},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"Updated for Swift 4.2."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Added information about accessing all of an enumeration’s cases","type":"text"},{"type":"text","text":" "},{"text":"to the ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Enumerations#Iterating-over-Enumeration-Cases"},{"type":"text","text":" section."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Added information about ","type":"text"},{"code":"#error","type":"codeVoice"},{"type":"text","text":" and "},{"code":"#warning","type":"codeVoice"},{"type":"text","text":" "},{"text":"to the ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Statements#Compile-Time-Diagnostic-Statement"},{"type":"text","text":" section."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Added information about inlining","type":"text"},{"text":" ","type":"text"},{"text":"to the ","type":"text"},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Attributes#Declaration-Attributes","isActive":true,"type":"reference"},{"type":"text","text":" section"},{"type":"text","text":" "},{"text":"under the ","type":"text"},{"code":"inlinable","type":"codeVoice"},{"text":" and  ","type":"text"},{"type":"codeVoice","code":"usableFromInline"},{"type":"text","text":" attributes."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Added information about members that are looked up by name at runtime","type":"text"},{"type":"text","text":" "},{"type":"text","text":"to the "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Attributes#Declaration-Attributes","isActive":true,"type":"reference"},{"text":" section","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"under the "},{"type":"codeVoice","code":"dynamicMemberLookup"},{"text":" attribute.","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Added information about the "},{"type":"codeVoice","code":"requires_stored_property_inits"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"warn_unqualified_access"},{"type":"text","text":" attributes"},{"type":"text","text":" "},{"type":"text","text":"to the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Attributes#Declaration-Attributes"},{"type":"text","text":" section."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Added information about how to conditionally compile code"},{"type":"text","text":" "},{"text":"depending on the Swift compiler version being used","type":"text"},{"type":"text","text":" "},{"type":"text","text":"to the "},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Statements#Conditional-Compilation-Block"},{"type":"text","text":" section."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Added information about ","type":"text"},{"code":"#dsohandle","type":"codeVoice"},{"type":"text","text":" "},{"text":"to the ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Expressions#Literal-Expression"},{"type":"text","text":" section."}]}]}],"type":"unorderedList"},{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"2018-03-29","type":"text"}],"type":"strong"}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"Updated for Swift 4.1."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Added information about synthesized implementations of equivalence operators"},{"type":"text","text":" "},{"type":"text","text":"to the "},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AdvancedOperators#Equivalence-Operators","isActive":true},{"type":"text","text":" section."}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Added information about conditional protocol conformance"},{"text":" ","type":"text"},{"type":"text","text":"to the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#Extension-Declaration"},{"type":"text","text":" section"},{"type":"text","text":" "},{"type":"text","text":"of the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations"},{"type":"text","text":" chapter,"},{"text":" ","type":"text"},{"type":"text","text":"and to the "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Protocols#Conditionally-Conforming-to-a-Protocol","type":"reference","isActive":true},{"type":"text","text":" section"},{"type":"text","text":" "},{"type":"text","text":"of the "},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Protocols","isActive":true},{"text":" chapter.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Added information about recursive protocol constraints"},{"text":" ","type":"text"},{"type":"text","text":"to the "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Generics#Using-a-Protocol-in-Its-Associated-Types-Constraints","type":"reference","isActive":true},{"text":" section.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Added information about"},{"text":" ","type":"text"},{"text":"the ","type":"text"},{"type":"codeVoice","code":"canImport()"},{"text":" and ","type":"text"},{"code":"targetEnvironment()","type":"codeVoice"},{"text":" platform conditions","type":"text"},{"type":"text","text":" "},{"type":"text","text":"to "},{"isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Statements#Conditional-Compilation-Block","type":"reference"},{"text":".","type":"text"}]}]}]},{"inlineContent":[{"type":"strong","inlineContent":[{"text":"2017-12-04","type":"text"}]}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"text":"Updated for Swift 4.0.3.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Updated the "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Expressions#Key-Path-Expression","isActive":true,"type":"reference"},{"type":"text","text":" section,"},{"text":" ","type":"text"},{"text":"now that key paths support subscript components.","type":"text"}],"type":"paragraph"}]}],"type":"unorderedList"},{"inlineContent":[{"type":"strong","inlineContent":[{"text":"2017-09-19","type":"text"}]}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"Updated for Swift 4.0."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Added information about exclusive access to memory"},{"text":" ","type":"text"},{"type":"text","text":"to the "},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/MemorySafety"},{"type":"text","text":" chapter."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Added the "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Generics#Associated-Types-with-a-Generic-Where-Clause","isActive":true,"type":"reference"},{"text":" section,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"now that you can use generic "},{"code":"where","type":"codeVoice"},{"type":"text","text":" clauses"},{"text":" ","type":"text"},{"text":"to constrain associated types.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Added information about multiline string literals"},{"text":" ","type":"text"},{"text":"to the ","type":"text"},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/StringsAndCharacters#String-Literals","isActive":true,"type":"reference"},{"type":"text","text":" section"},{"type":"text","text":" "},{"type":"text","text":"of the "},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/StringsAndCharacters","isActive":true},{"type":"text","text":" chapter,"},{"text":" ","type":"text"},{"type":"text","text":"and to the "},{"isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/LexicalStructure#String-Literals","type":"reference"},{"type":"text","text":" section"},{"type":"text","text":" "},{"type":"text","text":"of the "},{"isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/LexicalStructure","type":"reference"},{"text":" chapter.","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Updated the discussion of the "},{"code":"objc","type":"codeVoice"},{"text":" attribute","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"in "},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Attributes#Declaration-Attributes"},{"text":",","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"now that this attribute is inferred in fewer places."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Added the "},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Generics#Generic-Subscripts"},{"type":"text","text":" section,"},{"type":"text","text":" "},{"type":"text","text":"now that subscripts can be generic."}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Updated the discussion"},{"type":"text","text":" "},{"type":"text","text":"in the "},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Protocols#Protocol-Composition"},{"type":"text","text":" section"},{"type":"text","text":" "},{"text":"of the ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Protocols"},{"type":"text","text":" chapter,"},{"text":" ","type":"text"},{"type":"text","text":"and in the "},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Types#Protocol-Composition-Type"},{"text":" section","type":"text"},{"type":"text","text":" "},{"type":"text","text":"of the "},{"isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Types","type":"reference"},{"text":" chapter,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"now that protocol composition types can contain a superclass requirement."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Updated the discussion of protocol extensions"},{"type":"text","text":" "},{"type":"text","text":"in "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#Extension-Declaration","type":"reference","isActive":true},{"text":" ","type":"text"},{"text":"now that ","type":"text"},{"code":"final","type":"codeVoice"},{"text":" isn’t allowed in them.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Added information about preconditions and fatal errors","type":"text"},{"text":" ","type":"text"},{"text":"to the ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/TheBasics#Assertions-and-Preconditions"},{"text":" section.","type":"text"}]}]}]},{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"2017-03-27","type":"text"}],"type":"strong"}]},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"Updated for Swift 3.1."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Added the ","type":"text"},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Generics#Extensions-with-a-Generic-Where-Clause","isActive":true},{"type":"text","text":" section"},{"text":" ","type":"text"},{"text":"with information about extensions that include requirements.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Added examples of iterating over a range"},{"type":"text","text":" "},{"type":"text","text":"to the "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/ControlFlow#For-In-Loops","isActive":true,"type":"reference"},{"type":"text","text":" section."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Added an example of failable numeric conversions"},{"type":"text","text":" "},{"type":"text","text":"to the "},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Initialization#Failable-Initializers"},{"type":"text","text":" section."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Added information to the "},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Attributes#Declaration-Attributes"},{"type":"text","text":" section"},{"text":" ","type":"text"},{"type":"text","text":"about using the "},{"type":"codeVoice","code":"available"},{"text":" attribute with a Swift language version.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Updated the discussion in the ","type":"text"},{"isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Types#Function-Type","type":"reference"},{"type":"text","text":" section"},{"text":" ","type":"text"},{"text":"to note that argument labels aren’t allowed when writing a function type.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Updated the discussion of Swift language version numbers"},{"text":" ","type":"text"},{"type":"text","text":"in the "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Statements#Conditional-Compilation-Block","isActive":true,"type":"reference"},{"text":" section,","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"now that an optional patch number is allowed."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Updated the discussion"},{"text":" ","type":"text"},{"text":"in the ","type":"text"},{"isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Types#Function-Type","type":"reference"},{"type":"text","text":" section,"},{"type":"text","text":" "},{"type":"text","text":"now that Swift distinguishes between functions that take multiple parameters"},{"type":"text","text":" "},{"type":"text","text":"and functions that take a single parameter of a tuple type."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Removed the Dynamic Type Expression section"},{"text":" ","type":"text"},{"text":"from the ","type":"text"},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Expressions","isActive":true},{"type":"text","text":" chapter,"},{"type":"text","text":" "},{"text":"now that ","type":"text"},{"type":"codeVoice","code":"type(of:)"},{"text":" is a Swift standard library function.","type":"text"}]}]}],"type":"unorderedList"},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"2016-10-27","type":"text"}]}]},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"Updated for Swift 3.0.1."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Updated the discussion of weak and unowned references"},{"type":"text","text":" "},{"type":"text","text":"in the "},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AutomaticReferenceCounting"},{"text":" chapter.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Added information about the "},{"type":"codeVoice","code":"unowned"},{"text":", ","type":"text"},{"type":"codeVoice","code":"unowned(safe)"},{"type":"text","text":", and "},{"type":"codeVoice","code":"unowned(unsafe)"},{"type":"text","text":" "},{"type":"text","text":"declaration modifiers"},{"type":"text","text":" "},{"text":"in the ","type":"text"},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#Declaration-Modifiers","type":"reference","isActive":true},{"type":"text","text":" section."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Added a note to the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/TypeCasting#Type-Casting-for-Any-and-AnyObject"},{"text":" section","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"about using an optional value when a value of type "},{"type":"codeVoice","code":"Any"},{"type":"text","text":" is expected."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Updated the "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Expressions","type":"reference","isActive":true},{"type":"text","text":" chapter"},{"type":"text","text":" "},{"type":"text","text":"to separate the discussion of parenthesized expressions and tuple expressions."}]}]}],"type":"unorderedList"},{"inlineContent":[{"inlineContent":[{"type":"text","text":"2016-09-13"}],"type":"strong"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"Updated for Swift 3.0."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Updated the discussion of functions in the ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Functions"},{"text":" chapter","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"and the "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#Function-Declaration","type":"reference","isActive":true},{"text":" section to note that","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"all parameters get an argument label by default."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Updated the discussion of operators"},{"text":" ","type":"text"},{"text":"in the ","type":"text"},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AdvancedOperators","isActive":true},{"type":"text","text":" chapter,"},{"text":" ","type":"text"},{"text":"now that you implement them as type methods instead of as global functions.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Added information about the ","type":"text"},{"type":"codeVoice","code":"open"},{"type":"text","text":" and "},{"type":"codeVoice","code":"fileprivate"},{"text":" access-level modifiers","type":"text"},{"text":" ","type":"text"},{"text":"to the ","type":"text"},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AccessControl","isActive":true,"type":"reference"},{"type":"text","text":" chapter."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Updated the discussion of ","type":"text"},{"code":"inout","type":"codeVoice"},{"text":" in the ","type":"text"},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#Function-Declaration","isActive":true},{"text":" section","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"to note that it appears in front of a parameter’s type"},{"type":"text","text":" "},{"type":"text","text":"instead of in front of a parameter’s name."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Updated the discussion of the "},{"type":"codeVoice","code":"@noescape"},{"text":" and ","type":"text"},{"code":"@autoclosure","type":"codeVoice"},{"text":" attributes","type":"text"},{"type":"text","text":" "},{"text":"in the ","type":"text"},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Closures#Escaping-Closures","type":"reference","isActive":true},{"type":"text","text":" and "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Closures#Autoclosures","isActive":true,"type":"reference"},{"text":" sections","type":"text"},{"type":"text","text":" "},{"text":"and the ","type":"text"},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Attributes","isActive":true,"type":"reference"},{"type":"text","text":" chapter"},{"text":" ","type":"text"},{"text":"now that they’re type attributes, rather than declaration attributes.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Added information about operator precedence groups","type":"text"},{"type":"text","text":" "},{"type":"text","text":"to the "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AdvancedOperators#Precedence-for-Custom-Infix-Operators","type":"reference","isActive":true},{"type":"text","text":" section"},{"text":" ","type":"text"},{"text":"of the ","type":"text"},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AdvancedOperators","isActive":true,"type":"reference"},{"type":"text","text":" chapter,"},{"text":" ","type":"text"},{"type":"text","text":"and to the "},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#Precedence-Group-Declaration"},{"type":"text","text":" section"},{"type":"text","text":" "},{"type":"text","text":"of the "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations","type":"reference","isActive":true},{"text":" chapter.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Updated discussion throughout"},{"type":"text","text":" "},{"type":"text","text":"to use macOS instead of OS X,"},{"text":" ","type":"text"},{"type":"codeVoice","code":"Error"},{"type":"text","text":" instead of "},{"type":"codeVoice","code":"ErrorProtocol"},{"text":",","type":"text"},{"type":"text","text":" "},{"type":"text","text":"and protocol names such as "},{"type":"codeVoice","code":"ExpressibleByStringLiteral"},{"type":"text","text":" "},{"text":"instead of ","type":"text"},{"code":"StringLiteralConvertible","type":"codeVoice"},{"type":"text","text":"."}]}]},{"content":[{"inlineContent":[{"text":"Updated the discussion","type":"text"},{"type":"text","text":" "},{"type":"text","text":"in the "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Generics#Generic-Where-Clauses","isActive":true,"type":"reference"},{"text":" section","type":"text"},{"type":"text","text":" "},{"text":"of the ","type":"text"},{"isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Generics","type":"reference"},{"type":"text","text":" chapter"},{"text":" ","type":"text"},{"text":"and in the ","type":"text"},{"isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/GenericParametersAndArguments","type":"reference"},{"type":"text","text":" chapter,"},{"text":" ","type":"text"},{"text":"now that generic ","type":"text"},{"type":"codeVoice","code":"where"},{"type":"text","text":" clauses are written at the end of a declaration."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Updated the discussion in the "},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Closures#Escaping-Closures"},{"type":"text","text":" section,"},{"text":" ","type":"text"},{"text":"now that closures are nonescaping by default.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Updated the discussion"},{"text":" ","type":"text"},{"type":"text","text":"in the "},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/TheBasics#Optional-Binding","isActive":true},{"text":" section","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"of the "},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/TheBasics","isActive":true},{"type":"text","text":" chapter"},{"text":" ","type":"text"},{"text":"and the ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Statements#While-Statement"},{"type":"text","text":" section"},{"text":" ","type":"text"},{"type":"text","text":"of the "},{"isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Statements","type":"reference"},{"text":" chapter,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"now that "},{"type":"codeVoice","code":"if"},{"type":"text","text":", "},{"type":"codeVoice","code":"while"},{"text":", and ","type":"text"},{"code":"guard","type":"codeVoice"},{"type":"text","text":" statements"},{"text":" ","type":"text"},{"text":"use a comma-separated list of conditions without ","type":"text"},{"code":"where","type":"codeVoice"},{"text":" clauses.","type":"text"}]}]},{"content":[{"inlineContent":[{"text":"Added information about switch cases that have multiple patterns","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"to the "},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/ControlFlow#Switch","isActive":true},{"text":" section","type":"text"},{"type":"text","text":" "},{"text":"of the ","type":"text"},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/ControlFlow","isActive":true},{"text":" chapter","type":"text"},{"type":"text","text":" "},{"text":"and the ","type":"text"},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Statements#Switch-Statement","isActive":true},{"text":" section","type":"text"},{"type":"text","text":" "},{"text":"of the ","type":"text"},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Statements","isActive":true},{"type":"text","text":" chapter."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Updated the discussion of function types","type":"text"},{"text":" ","type":"text"},{"text":"in the ","type":"text"},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Types#Function-Type","isActive":true},{"type":"text","text":" section"},{"type":"text","text":" "},{"text":"now that function argument labels are no longer part of a function’s type.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Updated the discussion of protocol composition types"},{"type":"text","text":" "},{"type":"text","text":"in the "},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Protocols#Protocol-Composition"},{"text":" section","type":"text"},{"type":"text","text":" "},{"text":"of the ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Protocols"},{"type":"text","text":" chapter"},{"text":" ","type":"text"},{"type":"text","text":"and in the "},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Types#Protocol-Composition-Type"},{"type":"text","text":" section"},{"type":"text","text":" "},{"text":"of the ","type":"text"},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Types","isActive":true,"type":"reference"},{"type":"text","text":" chapter"},{"text":" ","type":"text"},{"text":"to use the new ","type":"text"},{"code":"Protocol1 & Protocol2","type":"codeVoice"},{"type":"text","text":" syntax."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Updated the discussion in the Dynamic Type Expression section","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"to use the new "},{"type":"codeVoice","code":"type(of:)"},{"type":"text","text":" syntax for dynamic type expressions."}]}]},{"content":[{"inlineContent":[{"text":"Updated the discussion of line control statements","type":"text"},{"type":"text","text":" "},{"type":"text","text":"to use the "},{"code":"#sourceLocation(file:line:)","type":"codeVoice"},{"text":" syntax","type":"text"},{"text":" ","type":"text"},{"text":"in the ","type":"text"},{"isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Statements#Line-Control-Statement","type":"reference"},{"text":" section.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Updated the discussion in ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#Functions-that-Never-Return"},{"text":" ","type":"text"},{"text":"to use the new ","type":"text"},{"code":"Never","type":"codeVoice"},{"text":" type.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Added information about playground literals","type":"text"},{"type":"text","text":" "},{"text":"to the ","type":"text"},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Expressions#Literal-Expression","isActive":true,"type":"reference"},{"text":" section.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Updated the discussion in the "},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#In-Out-Parameters","isActive":true},{"text":" section","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"to note that only nonescaping closures can capture in-out parameters."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Updated the discussion about default parameters","type":"text"},{"type":"text","text":" "},{"text":"in the ","type":"text"},{"isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Functions#Default-Parameter-Values","type":"reference"},{"type":"text","text":" section,"},{"type":"text","text":" "},{"text":"now that they can’t be reordered in function calls.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Updated attribute arguments to use a colon","type":"text"},{"type":"text","text":" "},{"text":"in the ","type":"text"},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Attributes","type":"reference","isActive":true},{"text":" chapter.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Added information about throwing an error","type":"text"},{"type":"text","text":" "},{"type":"text","text":"inside the catch block of a rethrowing function"},{"type":"text","text":" "},{"type":"text","text":"to the "},{"isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#Rethrowing-Functions-and-Methods","type":"reference"},{"text":" section.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Added information about accessing the selector"},{"text":" ","type":"text"},{"text":"of an Objective-C property’s getter or setter","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"to the "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Expressions#Selector-Expression","type":"reference","isActive":true},{"text":" section.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Added information to the "},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#Type-Alias-Declaration","isActive":true},{"type":"text","text":" section"},{"text":" ","type":"text"},{"type":"text","text":"about generic type aliases and using type aliases inside of protocols."}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Updated the discussion of function types in the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Types#Function-Type"},{"text":" section","type":"text"},{"type":"text","text":" "},{"type":"text","text":"to note that parentheses around the parameter types are required."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Updated the ","type":"text"},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Attributes","isActive":true},{"type":"text","text":" chapter"},{"text":" ","type":"text"},{"type":"text","text":"to note that the "},{"code":"@IBAction","type":"codeVoice"},{"type":"text","text":", "},{"type":"codeVoice","code":"@IBOutlet"},{"type":"text","text":", and "},{"type":"codeVoice","code":"@NSManaged"},{"text":" attributes","type":"text"},{"type":"text","text":" "},{"text":"imply the ","type":"text"},{"code":"@objc","type":"codeVoice"},{"text":" attribute.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Added information about the ","type":"text"},{"type":"codeVoice","code":"@GKInspectable"},{"type":"text","text":" attribute"},{"text":" ","type":"text"},{"text":"to the ","type":"text"},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Attributes#Declaration-Attributes","isActive":true},{"type":"text","text":" section."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Updated the discussion of optional protocol requirements"},{"type":"text","text":" "},{"type":"text","text":"in the "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Protocols#Optional-Protocol-Requirements","isActive":true,"type":"reference"},{"text":" section","type":"text"},{"text":" ","type":"text"},{"text":"to clarify that they’re used only in code that interoperates with Objective-C.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Removed the discussion of explicitly using ","type":"text"},{"type":"codeVoice","code":"let"},{"type":"text","text":" in function parameters"},{"text":" ","type":"text"},{"text":"from the ","type":"text"},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#Function-Declaration","isActive":true,"type":"reference"},{"text":" section.","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Removed the discussion of the "},{"code":"Boolean","type":"codeVoice"},{"type":"text","text":" protocol"},{"type":"text","text":" "},{"type":"text","text":"from the "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Statements","type":"reference","isActive":true},{"text":" chapter,","type":"text"},{"type":"text","text":" "},{"text":"now that the protocol has been removed from the Swift standard library.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Corrected the discussion of the "},{"code":"@NSApplicationMain","type":"codeVoice"},{"type":"text","text":" attribute"},{"type":"text","text":" "},{"type":"text","text":"in the "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Attributes#Declaration-Attributes","isActive":true,"type":"reference"},{"type":"text","text":" section."}],"type":"paragraph"}]}]},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"2016-03-21","type":"text"}]}]},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"Updated for Swift 2.2."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Added information about how to conditionally compile code","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"depending on the version of Swift being used"},{"type":"text","text":" "},{"text":"to the ","type":"text"},{"isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Statements#Conditional-Compilation-Block","type":"reference"},{"type":"text","text":" section."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Added information about how to distinguish"},{"type":"text","text":" "},{"text":"between methods or initializers whose names differ","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"only by the names of their arguments"},{"text":" ","type":"text"},{"text":"to the ","type":"text"},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Expressions#Explicit-Member-Expression","type":"reference","isActive":true},{"type":"text","text":" section."}]}]},{"content":[{"inlineContent":[{"text":"Added information about the ","type":"text"},{"type":"codeVoice","code":"#selector"},{"text":" syntax","type":"text"},{"type":"text","text":" "},{"text":"for Objective-C selectors","type":"text"},{"type":"text","text":" "},{"type":"text","text":"to the "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Expressions#Selector-Expression","isActive":true,"type":"reference"},{"text":" section.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Updated the discussion of associated types"},{"text":" ","type":"text"},{"type":"text","text":"to use the "},{"code":"associatedtype","type":"codeVoice"},{"type":"text","text":" keyword"},{"text":" ","type":"text"},{"type":"text","text":"in the "},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Generics#Associated-Types","isActive":true},{"type":"text","text":" "},{"type":"text","text":"and "},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#Protocol-Associated-Type-Declaration"},{"type":"text","text":" sections."}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Updated information about initializers that return "},{"code":"nil","type":"codeVoice"},{"text":" ","type":"text"},{"type":"text","text":"before the instance is fully initialized"},{"type":"text","text":" "},{"text":"in the ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Initialization#Failable-Initializers"},{"text":" section.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Added information about comparing tuples"},{"type":"text","text":" "},{"text":"to the ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/BasicOperators#Comparison-Operators"},{"type":"text","text":" section."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Added information about using keywords as external parameter names"},{"text":" ","type":"text"},{"type":"text","text":"to the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/LexicalStructure#Keywords-and-Punctuation"},{"text":" section.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Updated the discussion of the "},{"type":"codeVoice","code":"@objc"},{"text":" attribute","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"in the "},{"isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Attributes#Declaration-Attributes","type":"reference"},{"type":"text","text":" section to note that"},{"type":"text","text":" "},{"type":"text","text":"enumerations and enumeration cases can use this attribute."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Updated the ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/LexicalStructure#Operators"},{"type":"text","text":" section"},{"text":" ","type":"text"},{"type":"text","text":"with discussion of custom operators that contain a dot."}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Added a note"},{"type":"text","text":" "},{"type":"text","text":"to the "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#Rethrowing-Functions-and-Methods","isActive":true,"type":"reference"},{"text":" section","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"that rethrowing functions can’t directly throw errors."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Added a note to the ","type":"text"},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Properties#Property-Observers","isActive":true,"type":"reference"},{"type":"text","text":" section"},{"text":" ","type":"text"},{"type":"text","text":"about property observers being called"},{"type":"text","text":" "},{"text":"when you pass a property as an in-out parameter.","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Added a section about error handling"},{"type":"text","text":" "},{"type":"text","text":"to the "},{"isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/GuidedTour","type":"reference"},{"type":"text","text":" chapter."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Updated figures in the","type":"text"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AutomaticReferenceCounting#Weak-References"},{"text":" ","type":"text"},{"type":"text","text":"section to show the deallocation process more clearly."}]}]},{"content":[{"inlineContent":[{"text":"Removed discussion of C-style ","type":"text"},{"type":"codeVoice","code":"for"},{"text":" loops,","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"the "},{"type":"codeVoice","code":"++"},{"type":"text","text":" prefix and postfix operators,"},{"type":"text","text":" "},{"text":"and the ","type":"text"},{"code":"--","type":"codeVoice"},{"text":" prefix and postfix operators.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Removed discussion of variable function arguments"},{"text":" ","type":"text"},{"text":"and the special syntax for curried functions.","type":"text"}]}]}],"type":"unorderedList"},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"2015-10-20","type":"text"}]}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"Updated for Swift 2.1."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Updated the "},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/StringsAndCharacters#String-Interpolation","isActive":true},{"text":" ","type":"text"},{"type":"text","text":"and "},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/LexicalStructure#String-Literals"},{"text":" sections","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"now that string interpolations can contain string literals."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Added the "},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Closures#Escaping-Closures","isActive":true},{"type":"text","text":" section"},{"text":" ","type":"text"},{"type":"text","text":"with information about the "},{"type":"codeVoice","code":"@noescape"},{"text":" attribute.","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Updated the "},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Attributes#Declaration-Attributes","isActive":true},{"type":"text","text":" "},{"text":"and ","type":"text"},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Statements#Conditional-Compilation-Block","isActive":true},{"type":"text","text":" sections"},{"text":" ","type":"text"},{"type":"text","text":"with information about tvOS."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Added information about the behavior of in-out parameters"},{"type":"text","text":" "},{"type":"text","text":"to the "},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#In-Out-Parameters","isActive":true},{"type":"text","text":" section."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Added information to the "},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Expressions#Capture-Lists"},{"type":"text","text":" section"},{"text":" ","type":"text"},{"text":"about how values specified in closure capture lists are captured.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Updated the","type":"text"},{"type":"text","text":" "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/OptionalChaining#Accessing-Properties-Through-Optional-Chaining","type":"reference","isActive":true},{"type":"text","text":" "},{"type":"text","text":"section to clarify how assignment through optional chaining"},{"type":"text","text":" "},{"text":"behaves.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Improved the discussion of autoclosures"},{"type":"text","text":" "},{"text":"in the ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Closures#Autoclosures"},{"type":"text","text":" section."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Added an example that uses the ","type":"text"},{"type":"codeVoice","code":"??"},{"type":"text","text":" operator"},{"type":"text","text":" "},{"type":"text","text":"to the "},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/GuidedTour","isActive":true},{"type":"text","text":" chapter."}]}]}]},{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"2015-09-16"}],"type":"strong"}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Updated for Swift 2.0."}]}]},{"content":[{"inlineContent":[{"text":"Added information about error handling","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"to the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/ErrorHandling"},{"type":"text","text":" chapter,"},{"text":" ","type":"text"},{"type":"text","text":"the "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Statements#Do-Statement","type":"reference","isActive":true},{"type":"text","text":" section,"},{"text":" ","type":"text"},{"text":"the ","type":"text"},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Statements#Throw-Statement","isActive":true,"type":"reference"},{"text":" section,","type":"text"},{"type":"text","text":" "},{"text":"the ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Statements#Defer-Statement"},{"type":"text","text":" section,"},{"text":" ","type":"text"},{"type":"text","text":"and the "},{"isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Expressions#Try-Operator","type":"reference"},{"text":" section.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Updated the ","type":"text"},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/ErrorHandling#Representing-and-Throwing-Errors","type":"reference","isActive":true},{"type":"text","text":" section,"},{"type":"text","text":" "},{"text":"now that all types can conform to the ","type":"text"},{"type":"codeVoice","code":"ErrorType"},{"type":"text","text":" protocol."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Added information about the new "},{"type":"codeVoice","code":"try?"},{"type":"text","text":" keyword"},{"type":"text","text":" "},{"type":"text","text":"to the "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/ErrorHandling#Converting-Errors-to-Optional-Values","type":"reference","isActive":true},{"type":"text","text":" section."}]}]},{"content":[{"inlineContent":[{"text":"Added information about recursive enumerations","type":"text"},{"type":"text","text":" "},{"type":"text","text":"to the "},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Enumerations#Recursive-Enumerations"},{"type":"text","text":" section"},{"text":" ","type":"text"},{"type":"text","text":"of the "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Enumerations","type":"reference","isActive":true},{"type":"text","text":" chapter"},{"type":"text","text":" "},{"type":"text","text":"and the "},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#Enumerations-with-Cases-of-Any-Type","isActive":true},{"text":" section","type":"text"},{"type":"text","text":" "},{"type":"text","text":"of the "},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations","isActive":true},{"type":"text","text":" chapter."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Added information about API availability checking","type":"text"},{"type":"text","text":" "},{"type":"text","text":"to the "},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/ControlFlow#Checking-API-Availability"},{"text":" section","type":"text"},{"text":" ","type":"text"},{"text":"of the ","type":"text"},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/ControlFlow","isActive":true,"type":"reference"},{"text":" chapter","type":"text"},{"type":"text","text":" "},{"text":"and the ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Statements#Availability-Condition"},{"text":" section","type":"text"},{"text":" ","type":"text"},{"text":"of the ","type":"text"},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Statements","isActive":true},{"text":" chapter.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Added information about the new ","type":"text"},{"type":"codeVoice","code":"guard"},{"text":" statement","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"to the "},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/ControlFlow#Early-Exit"},{"text":" section","type":"text"},{"type":"text","text":" "},{"text":"of the ","type":"text"},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/ControlFlow","type":"reference","isActive":true},{"text":" chapter","type":"text"},{"type":"text","text":" "},{"type":"text","text":"and the "},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Statements#Guard-Statement","isActive":true},{"type":"text","text":" section"},{"type":"text","text":" "},{"type":"text","text":"of the "},{"isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Statements","type":"reference"},{"type":"text","text":" chapter."}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Added information about protocol extensions"},{"type":"text","text":" "},{"type":"text","text":"to the "},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Protocols#Protocol-Extensions"},{"text":" section","type":"text"},{"type":"text","text":" "},{"type":"text","text":"of the "},{"isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Protocols","type":"reference"},{"text":" chapter.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Added information about access control for unit testing"},{"text":" ","type":"text"},{"text":"to the ","type":"text"},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AccessControl#Access-Levels-for-Unit-Test-Targets","type":"reference","isActive":true},{"type":"text","text":" section"},{"text":" ","type":"text"},{"text":"of the ","type":"text"},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AccessControl","isActive":true,"type":"reference"},{"text":" chapter.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Added information about the new optional pattern","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"to the "},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Patterns#Optional-Pattern","isActive":true},{"type":"text","text":" section"},{"type":"text","text":" "},{"type":"text","text":"of the "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Patterns","type":"reference","isActive":true},{"text":" chapter.","type":"text"}]}]},{"content":[{"inlineContent":[{"text":"Updated the ","type":"text"},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/ControlFlow#Repeat-While","isActive":true},{"type":"text","text":" section"},{"text":" ","type":"text"},{"type":"text","text":"with information about the "},{"type":"codeVoice","code":"repeat"},{"text":"-","type":"text"},{"code":"while","type":"codeVoice"},{"text":" loop.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Updated the ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/StringsAndCharacters"},{"text":" chapter,","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"now that "},{"type":"codeVoice","code":"String"},{"text":" no longer conforms","type":"text"},{"text":" ","type":"text"},{"text":"to the ","type":"text"},{"code":"CollectionType","type":"codeVoice"},{"type":"text","text":" protocol from the Swift standard library."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Added information about the new Swift standard library","type":"text"},{"type":"text","text":" "},{"code":"print(_:separator:terminator)","type":"codeVoice"},{"type":"text","text":" function"},{"text":" ","type":"text"},{"type":"text","text":"to the "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/TheBasics#Printing-Constants-and-Variables","isActive":true,"type":"reference"},{"type":"text","text":" section."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Added information about the behavior"},{"text":" ","type":"text"},{"type":"text","text":"of enumeration cases with "},{"type":"codeVoice","code":"String"},{"type":"text","text":" raw values"},{"text":" ","type":"text"},{"text":"to the ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Enumerations#Implicitly-Assigned-Raw-Values"},{"text":" section","type":"text"},{"type":"text","text":" "},{"type":"text","text":"of the "},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Enumerations"},{"type":"text","text":" chapter"},{"type":"text","text":" "},{"type":"text","text":"and the "},{"isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#Enumerations-with-Cases-of-a-Raw-Value-Type","type":"reference"},{"type":"text","text":" section"},{"text":" ","type":"text"},{"type":"text","text":"of the "},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations","isActive":true},{"text":" chapter.","type":"text"}]}]},{"content":[{"inlineContent":[{"text":"Added information about the ","type":"text"},{"code":"@autoclosure","type":"codeVoice"},{"text":" attribute —","type":"text"},{"type":"text","text":" "},{"type":"text","text":"including its "},{"type":"codeVoice","code":"@autoclosure(escaping)"},{"text":" form —","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"to the "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Closures#Autoclosures","isActive":true,"type":"reference"},{"text":" section.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Updated the "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Attributes#Declaration-Attributes","type":"reference","isActive":true},{"type":"text","text":" section"},{"type":"text","text":" "},{"text":"with information about the ","type":"text"},{"type":"codeVoice","code":"@available"},{"text":" ","type":"text"},{"text":"and ","type":"text"},{"type":"codeVoice","code":"@warn_unused_result"},{"type":"text","text":" attributes."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Updated the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Attributes#Type-Attributes"},{"type":"text","text":" section"},{"text":" ","type":"text"},{"text":"with information about the ","type":"text"},{"code":"@convention","type":"codeVoice"},{"text":" attribute.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Added an example of using multiple optional bindings"},{"type":"text","text":" "},{"text":"with a ","type":"text"},{"code":"where","type":"codeVoice"},{"type":"text","text":" clause"},{"text":" ","type":"text"},{"text":"to the ","type":"text"},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/TheBasics#Optional-Binding","isActive":true},{"type":"text","text":" section."}]}]},{"content":[{"inlineContent":[{"text":"Added information to the ","type":"text"},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/LexicalStructure#String-Literals","type":"reference","isActive":true},{"type":"text","text":" section"},{"type":"text","text":" "},{"type":"text","text":"about how concatenating string literals using the "},{"code":"+","type":"codeVoice"},{"text":" operator","type":"text"},{"type":"text","text":" "},{"type":"text","text":"happens at compile time."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Added information to the ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Types#Metatype-Type"},{"type":"text","text":" section"},{"type":"text","text":" "},{"text":"about comparing metatype values and using them","type":"text"},{"type":"text","text":" "},{"type":"text","text":"to construct instances with initializer expressions."}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Added a note to the "},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/TheBasics#Debugging-with-Assertions","isActive":true},{"type":"text","text":" section"},{"type":"text","text":" "},{"type":"text","text":"about when user-defined assertions are disabled."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Updated the discussion of the ","type":"text"},{"code":"@NSManaged","type":"codeVoice"},{"type":"text","text":" attribute"},{"text":" ","type":"text"},{"text":"in the ","type":"text"},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Attributes#Declaration-Attributes","type":"reference","isActive":true},{"text":" section,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"now that the attribute can be applied to certain instance methods."}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Updated the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Functions#Variadic-Parameters"},{"type":"text","text":" section,"},{"type":"text","text":" "},{"type":"text","text":"now that variadic parameters can be declared in any position"},{"type":"text","text":" "},{"text":"in a function’s parameter list.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Added information","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"to the "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Initialization#Overriding-a-Failable-Initializer","isActive":true,"type":"reference"},{"text":" section","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"about how a nonfailable initializer can delegate"},{"type":"text","text":" "},{"text":"up to a failable initializer","type":"text"},{"type":"text","text":" "},{"text":"by force-unwrapping the result of the superclass’s initializer.","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Added information about using enumeration cases as functions"},{"text":" ","type":"text"},{"text":"to the ","type":"text"},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#Enumerations-with-Cases-of-Any-Type","type":"reference","isActive":true},{"type":"text","text":" section."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Added information about explicitly referencing an initializer"},{"text":" ","type":"text"},{"text":"to the ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Expressions#Initializer-Expression"},{"text":" section.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Added information about build configuration"},{"type":"text","text":" "},{"type":"text","text":"and line control statements"},{"type":"text","text":" "},{"type":"text","text":"to the "},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Statements#Compiler-Control-Statements","isActive":true},{"text":" section.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Added a note to the "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Types#Metatype-Type","isActive":true,"type":"reference"},{"text":" section","type":"text"},{"text":" ","type":"text"},{"text":"about constructing class instances from metatype values.","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Added a note to the"},{"type":"text","text":" "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AutomaticReferenceCounting#Weak-References","type":"reference","isActive":true},{"text":" ","type":"text"},{"text":"section about weak references being unsuitable for caching.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Updated a note in the ","type":"text"},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Properties#Type-Properties","isActive":true},{"text":" section","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"to mention that stored type properties are lazily initialized."}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Updated the "},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Closures#Capturing-Values","isActive":true},{"text":" section","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"to clarify how variables and constants are captured in closures."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Updated the ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Attributes#Declaration-Attributes"},{"type":"text","text":" section"},{"type":"text","text":" "},{"type":"text","text":"to describe when you can apply the "},{"code":"@objc","type":"codeVoice"},{"type":"text","text":" attribute to classes."}]}]},{"content":[{"inlineContent":[{"text":"Added a note to the ","type":"text"},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/ErrorHandling#Handling-Errors","isActive":true,"type":"reference"},{"type":"text","text":" section"},{"text":" ","type":"text"},{"type":"text","text":"about the performance of executing a "},{"code":"throw","type":"codeVoice"},{"text":" statement.","type":"text"},{"type":"text","text":" "},{"text":"Added similar information about the ","type":"text"},{"code":"do","type":"codeVoice"},{"text":" statement","type":"text"},{"text":" ","type":"text"},{"text":"in the ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Statements#Do-Statement"},{"type":"text","text":" section."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Updated the ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Properties#Type-Properties"},{"type":"text","text":" section"},{"text":" ","type":"text"},{"text":"with information about stored and computed type properties","type":"text"},{"text":" ","type":"text"},{"text":"for classes, structures, and enumerations.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Updated the ","type":"text"},{"isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Statements#Break-Statement","type":"reference"},{"type":"text","text":" section"},{"text":" ","type":"text"},{"text":"with information about labeled break statements.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Updated a note in the "},{"isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Properties#Property-Observers","type":"reference"},{"text":" section","type":"text"},{"type":"text","text":" "},{"text":"to clarify the behavior of ","type":"text"},{"code":"willSet","type":"codeVoice"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"didSet"},{"type":"text","text":" observers."}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Added a note to the "},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AccessControl#Access-Levels"},{"text":" section","type":"text"},{"type":"text","text":" "},{"text":"with information about the scope of ","type":"text"},{"code":"private","type":"codeVoice"},{"type":"text","text":" access."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Added a note to the"},{"text":" ","type":"text"},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AutomaticReferenceCounting#Weak-References","isActive":true},{"text":" ","type":"text"},{"text":"section about the differences in weak references","type":"text"},{"text":" ","type":"text"},{"text":"between garbage collected systems and ARC.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Updated the"},{"text":" ","type":"text"},{"isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/StringsAndCharacters#Special-Characters-in-String-Literals","type":"reference"},{"type":"text","text":" section"},{"type":"text","text":" "},{"text":"with a more precise definition of Unicode scalars.","type":"text"}]}]}],"type":"unorderedList"},{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"2015-04-08"}],"type":"strong"}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Updated for Swift 1.2.","type":"text"}]}]},{"content":[{"inlineContent":[{"text":"Swift now has a native ","type":"text"},{"code":"Set","type":"codeVoice"},{"type":"text","text":" collection type."},{"text":" ","type":"text"},{"type":"text","text":"For more information, see "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/CollectionTypes#Sets","type":"reference","isActive":true},{"text":".","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"@autoclosure"},{"type":"text","text":" is now an attribute of the parameter declaration,"},{"type":"text","text":" "},{"text":"not its type.","type":"text"},{"text":" ","type":"text"},{"text":"There’s also a new ","type":"text"},{"code":"@noescape","type":"codeVoice"},{"type":"text","text":" parameter declaration attribute."},{"type":"text","text":" "},{"text":"For more information, see ","type":"text"},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Attributes#Declaration-Attributes","isActive":true},{"type":"text","text":"."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Type methods and properties now use the ","type":"text"},{"type":"codeVoice","code":"static"},{"text":" keyword","type":"text"},{"type":"text","text":" "},{"text":"as a declaration modifier.","type":"text"},{"type":"text","text":" "},{"text":"For more information see ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#Type-Variable-Properties"},{"text":".","type":"text"}]}]},{"content":[{"inlineContent":[{"text":"Swift now includes the ","type":"text"},{"code":"as?","type":"codeVoice"},{"type":"text","text":" and "},{"type":"codeVoice","code":"as!"},{"type":"text","text":" failable downcast operators."},{"type":"text","text":" "},{"type":"text","text":"For more information,"},{"type":"text","text":" "},{"type":"text","text":"see "},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Protocols#Checking-for-Protocol-Conformance","isActive":true},{"type":"text","text":"."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Added a new guide section about"},{"text":" ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/StringsAndCharacters#String-Indices"},{"text":".","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Removed the overflow division ("},{"code":"&\/","type":"codeVoice"},{"type":"text","text":") and"},{"text":" ","type":"text"},{"text":"overflow remainder (","type":"text"},{"type":"codeVoice","code":"&%"},{"type":"text","text":") operators"},{"type":"text","text":" "},{"text":"from ","type":"text"},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AdvancedOperators#Overflow-Operators","isActive":true},{"type":"text","text":"."}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Updated the rules for constant and"},{"type":"text","text":" "},{"text":"constant property declaration and initialization.","type":"text"},{"type":"text","text":" "},{"text":"For more information, see ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#Constant-Declaration"},{"text":".","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Updated the definition of Unicode scalars in string literals."},{"type":"text","text":" "},{"type":"text","text":"See "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/StringsAndCharacters#Special-Characters-in-String-Literals","isActive":true,"type":"reference"},{"type":"text","text":"."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Updated ","type":"text"},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/BasicOperators#Range-Operators","isActive":true},{"text":" to note that","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"a half-open range with the same start and end index will be empty."}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Updated "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Closures#Closures-Are-Reference-Types","type":"reference","isActive":true},{"text":" to clarify","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"the capturing rules for variables."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Updated ","type":"text"},{"isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AdvancedOperators#Value-Overflow","type":"reference"},{"text":" to clarify","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"the overflow behavior of signed and unsigned integers"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Updated "},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#Protocol-Declaration","isActive":true},{"text":" to clarify","type":"text"},{"type":"text","text":" "},{"type":"text","text":"protocol declaration scope and members."}]}]},{"content":[{"inlineContent":[{"text":"Updated ","type":"text"},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AutomaticReferenceCounting#Defining-a-Capture-List","isActive":true,"type":"reference"},{"type":"text","text":" "},{"type":"text","text":"to clarify the syntax for"},{"text":" ","type":"text"},{"text":"weak and unowned references in closure capture lists.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Updated ","type":"text"},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/LexicalStructure#Operators","isActive":true},{"text":" to explicitly mention","type":"text"},{"type":"text","text":" "},{"text":"examples of supported characters for custom operators,","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"such as those in the Mathematical Operators, Miscellaneous Symbols,"},{"type":"text","text":" "},{"text":"and Dingbats Unicode blocks.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Constants can now be declared without being initialized"},{"type":"text","text":" "},{"type":"text","text":"in local function scope."},{"type":"text","text":" "},{"type":"text","text":"They must have a set value before first use."},{"type":"text","text":" "},{"type":"text","text":"For more information, see "},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#Constant-Declaration"},{"text":".","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"In an initializer, constant properties can now only assign a value once.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"For more information,"},{"type":"text","text":" "},{"text":"see ","type":"text"},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Initialization#Assigning-Constant-Properties-During-Initialization","isActive":true},{"text":".","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Multiple optional bindings can now appear in a single "},{"code":"if","type":"codeVoice"},{"text":" statement","type":"text"},{"type":"text","text":" "},{"text":"as a comma-separated list of assignment expressions.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"For more information, see "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/TheBasics#Optional-Binding","isActive":true,"type":"reference"},{"type":"text","text":"."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"An "},{"isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Expressions#Optional-Chaining-Expression","type":"reference"},{"text":" ","type":"text"},{"type":"text","text":"must appear within a postfix expression."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Protocol casts are no longer limited to "},{"code":"@objc","type":"codeVoice"},{"type":"text","text":" protocols."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Type casts that can fail at runtime","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"now use the "},{"code":"as?","type":"codeVoice"},{"type":"text","text":" or "},{"code":"as!","type":"codeVoice"},{"type":"text","text":" operator,"},{"text":" ","type":"text"},{"text":"and type casts that are guaranteed not to fail use the ","type":"text"},{"type":"codeVoice","code":"as"},{"type":"text","text":" operator."},{"type":"text","text":" "},{"type":"text","text":"For more information, see "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Expressions#Type-Casting-Operators","type":"reference","isActive":true},{"text":".","type":"text"}]}]}],"type":"unorderedList"},{"inlineContent":[{"inlineContent":[{"type":"text","text":"2014-10-16"}],"type":"strong"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Updated for Swift 1.1."}]}]},{"content":[{"inlineContent":[{"text":"Added a full guide to ","type":"text"},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Initialization#Failable-Initializers","isActive":true,"type":"reference"},{"type":"text","text":"."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Added a description of ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Protocols#Failable-Initializer-Requirements"},{"type":"text","text":" "},{"type":"text","text":"for protocols."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Constants and variables of type ","type":"text"},{"type":"codeVoice","code":"Any"},{"type":"text","text":" can now contain"},{"type":"text","text":" "},{"type":"text","text":"function instances. Updated the example in "},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/TypeCasting#Type-Casting-for-Any-and-AnyObject","isActive":true},{"type":"text","text":" "},{"type":"text","text":"to show how to check for and cast to a function type"},{"text":" ","type":"text"},{"type":"text","text":"within a "},{"code":"switch","type":"codeVoice"},{"text":" statement.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Enumerations with raw values"},{"type":"text","text":" "},{"text":"now have a ","type":"text"},{"code":"rawValue","type":"codeVoice"},{"type":"text","text":" property rather than a "},{"type":"codeVoice","code":"toRaw()"},{"type":"text","text":" method"},{"text":" ","type":"text"},{"type":"text","text":"and a failable initializer with a "},{"type":"codeVoice","code":"rawValue"},{"type":"text","text":" parameter"},{"text":" ","type":"text"},{"type":"text","text":"rather than a "},{"type":"codeVoice","code":"fromRaw()"},{"type":"text","text":" method."},{"text":" ","type":"text"},{"type":"text","text":"For more information, see "},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Enumerations#Raw-Values","isActive":true},{"type":"text","text":" "},{"type":"text","text":"and "},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#Enumerations-with-Cases-of-a-Raw-Value-Type"},{"type":"text","text":"."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Added a new reference section about"},{"text":" ","type":"text"},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#Failable-Initializers","isActive":true},{"type":"text","text":","},{"text":" ","type":"text"},{"type":"text","text":"which can trigger initialization failure."}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Custom operators can now contain the "},{"type":"codeVoice","code":"?"},{"text":" character.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Updated the "},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/LexicalStructure#Operators","isActive":true},{"type":"text","text":" reference to describe"},{"text":" ","type":"text"},{"type":"text","text":"the revised rules."},{"text":" ","type":"text"},{"text":"Removed a duplicate description of the valid set of operator characters","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"from "},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AdvancedOperators#Custom-Operators","isActive":true},{"text":".","type":"text"}],"type":"paragraph"}]}],"type":"unorderedList"},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"2014-08-18","type":"text"}]}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"New document that describes Swift 1.0,","type":"text"},{"type":"text","text":" "},{"text":"Apple’s new programming language for building iOS and OS X apps.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Added a new section about"},{"type":"text","text":" "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Protocols#Initializer-Requirements","isActive":true,"type":"reference"},{"text":" in protocols.","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Added a new section about "},{"isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Protocols#Class-Only-Protocols","type":"reference"},{"type":"text","text":"."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/TheBasics#Assertions-and-Preconditions","isActive":true},{"text":" can now use string interpolation.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Removed a note to the contrary."}]}]},{"content":[{"inlineContent":[{"text":"Updated the","type":"text"},{"text":" ","type":"text"},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/StringsAndCharacters#Concatenating-Strings-and-Characters","type":"reference","isActive":true},{"type":"text","text":" section"},{"type":"text","text":" "},{"text":"to reflect the fact that ","type":"text"},{"code":"String","type":"codeVoice"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"Character"},{"text":" values","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"can no longer be combined with the addition operator ("},{"code":"+","type":"codeVoice"},{"type":"text","text":")"},{"type":"text","text":" "},{"text":"or addition assignment operator (","type":"text"},{"code":"+=","type":"codeVoice"},{"text":").","type":"text"},{"type":"text","text":" "},{"text":"These operators are now used only with ","type":"text"},{"type":"codeVoice","code":"String"},{"text":" values.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Use the "},{"type":"codeVoice","code":"String"},{"type":"text","text":" type’s "},{"code":"append(_:)","type":"codeVoice"},{"type":"text","text":" method"},{"text":" ","type":"text"},{"text":"to append a single ","type":"text"},{"type":"codeVoice","code":"Character"},{"type":"text","text":" value onto the end of a string."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Added information about the ","type":"text"},{"type":"codeVoice","code":"availability"},{"text":" attribute to","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"the "},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Attributes#Declaration-Attributes"},{"text":" section.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/TheBasics#Optionals","isActive":true},{"type":"text","text":" no longer implicitly evaluate to"},{"type":"text","text":" "},{"type":"codeVoice","code":"true"},{"type":"text","text":" when they have a value and "},{"type":"codeVoice","code":"false"},{"text":" when they do not,","type":"text"},{"text":" ","type":"text"},{"text":"to avoid confusion when working with optional ","type":"text"},{"code":"Bool","type":"codeVoice"},{"text":" values.","type":"text"},{"text":" ","type":"text"},{"text":"Instead, make an explicit check against ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":" ","type":"text"},{"text":"with the ","type":"text"},{"code":"==","type":"codeVoice"},{"text":" or ","type":"text"},{"type":"codeVoice","code":"!="},{"type":"text","text":" operators"},{"type":"text","text":" "},{"text":"to find out if an optional contains a value.","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Swift now has a "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/BasicOperators#Nil-Coalescing-Operator","type":"reference","isActive":true},{"text":" ","type":"text"},{"type":"text","text":"("},{"code":"a ?? b","type":"codeVoice"},{"type":"text","text":"), which unwraps an optional’s value if it exists,"},{"type":"text","text":" "},{"type":"text","text":"or returns a default value if the optional is "},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Updated and expanded","type":"text"},{"type":"text","text":" "},{"type":"text","text":"the "},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/StringsAndCharacters#Comparing-Strings"},{"type":"text","text":" section"},{"text":" ","type":"text"},{"text":"to reflect and demonstrate that string and character comparison","type":"text"},{"type":"text","text":" "},{"text":"and prefix \/ suffix comparison are now based on","type":"text"},{"type":"text","text":" "},{"text":"Unicode canonical equivalence of extended grapheme clusters.","type":"text"}]}]},{"content":[{"inlineContent":[{"text":"You can now try to set a property’s value, assign to a subscript,","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"or call a mutating method or operator through"},{"type":"text","text":" "},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/OptionalChaining","isActive":true},{"text":".","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"The information about"},{"type":"text","text":" "},{"isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/OptionalChaining#Accessing-Properties-Through-Optional-Chaining","type":"reference"},{"type":"text","text":" "},{"type":"text","text":"has been updated accordingly,"},{"type":"text","text":" "},{"type":"text","text":"and the examples of checking for method call success in"},{"type":"text","text":" "},{"isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/OptionalChaining#Calling-Methods-Through-Optional-Chaining","type":"reference"},{"text":" ","type":"text"},{"type":"text","text":"have been expanded to show how to check for property setting success."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Added a new section about","type":"text"},{"text":" ","type":"text"},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/OptionalChaining#Accessing-Subscripts-of-Optional-Type","isActive":true},{"text":" ","type":"text"},{"text":"through optional chaining.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Updated the ","type":"text"},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/CollectionTypes#Accessing-and-Modifying-an-Array","isActive":true,"type":"reference"},{"text":" section","type":"text"},{"type":"text","text":" "},{"type":"text","text":"to note that you can no longer append a single item to an array"},{"type":"text","text":" "},{"type":"text","text":"with the "},{"code":"+=","type":"codeVoice"},{"type":"text","text":" operator."},{"type":"text","text":" "},{"type":"text","text":"Instead, use the "},{"code":"append(_:)","type":"codeVoice"},{"type":"text","text":" method,"},{"type":"text","text":" "},{"text":"or append a single-item array with the ","type":"text"},{"code":"+=","type":"codeVoice"},{"text":" operator.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Added a note that the start value ","type":"text"},{"code":"a","type":"codeVoice"},{"text":" ","type":"text"},{"text":"for the ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/BasicOperators#Range-Operators"},{"type":"text","text":" "},{"code":"a...b","type":"codeVoice"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"a..<b"},{"type":"text","text":" "},{"type":"text","text":"must not be greater than the end value "},{"type":"codeVoice","code":"b"},{"type":"text","text":"."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Rewrote the "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Inheritance","type":"reference","isActive":true},{"text":" chapter","type":"text"},{"text":" ","type":"text"},{"text":"to remove its introductory coverage of initializer overrides.","type":"text"},{"type":"text","text":" "},{"text":"This chapter now focuses more on the addition of","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"new functionality in a subclass,"},{"text":" ","type":"text"},{"text":"and the modification of existing functionality with overrides.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"The chapter’s example of"},{"text":" ","type":"text"},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Inheritance#Overriding-Property-Getters-and-Setters","type":"reference","isActive":true},{"type":"text","text":" "},{"text":"has been rewritten to show how to override a ","type":"text"},{"type":"codeVoice","code":"description"},{"text":" property.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"(The examples of modifying an inherited property’s default value"},{"type":"text","text":" "},{"type":"text","text":"in a subclass initializer have been moved to"},{"type":"text","text":" "},{"text":"the ","type":"text"},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Initialization","isActive":true,"type":"reference"},{"text":" chapter.)","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Updated the"},{"text":" ","type":"text"},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Initialization#Initializer-Inheritance-and-Overriding","isActive":true},{"type":"text","text":" section"},{"text":" ","type":"text"},{"text":"to note that overrides of a designated initializer","type":"text"},{"type":"text","text":" "},{"text":"must now be marked with the ","type":"text"},{"type":"codeVoice","code":"override"},{"type":"text","text":" modifier."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Updated the ","type":"text"},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Initialization#Required-Initializers","isActive":true},{"text":" section","type":"text"},{"text":" ","type":"text"},{"text":"to note that the ","type":"text"},{"type":"codeVoice","code":"required"},{"text":" modifier is now written before","type":"text"},{"type":"text","text":" "},{"type":"text","text":"every subclass implementation of a required initializer,"},{"text":" ","type":"text"},{"type":"text","text":"and that the requirements for required initializers"},{"type":"text","text":" "},{"type":"text","text":"can now be satisfied by automatically inherited initializers."}]}]},{"content":[{"inlineContent":[{"text":"Infix ","type":"text"},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AdvancedOperators#Operator-Methods","isActive":true},{"text":" no longer require","type":"text"},{"type":"text","text":" "},{"type":"text","text":"the "},{"type":"codeVoice","code":"@infix"},{"text":" attribute.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"The ","type":"text"},{"type":"codeVoice","code":"@prefix"},{"type":"text","text":" and "},{"type":"codeVoice","code":"@postfix"},{"text":" attributes","type":"text"},{"type":"text","text":" "},{"type":"text","text":"for "},{"isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AdvancedOperators#Prefix-and-Postfix-Operators","type":"reference"},{"type":"text","text":" "},{"type":"text","text":"have been replaced by "},{"code":"prefix","type":"codeVoice"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"postfix"},{"type":"text","text":" declaration modifiers."}]}]},{"content":[{"inlineContent":[{"text":"Added a note about the order in which","type":"text"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AdvancedOperators#Prefix-and-Postfix-Operators"},{"type":"text","text":" are applied"},{"type":"text","text":" "},{"type":"text","text":"when both a prefix and a postfix operator are applied to"},{"text":" ","type":"text"},{"type":"text","text":"the same operand."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Operator functions for"},{"type":"text","text":" "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AdvancedOperators#Compound-Assignment-Operators","isActive":true,"type":"reference"},{"text":" no longer use","type":"text"},{"type":"text","text":" "},{"type":"text","text":"the "},{"type":"codeVoice","code":"@assignment"},{"type":"text","text":" attribute when defining the function."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"The order in which modifiers are specified when defining","type":"text"},{"type":"text","text":" "},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AdvancedOperators#Custom-Operators"},{"type":"text","text":" has changed."},{"text":" ","type":"text"},{"text":"You now write ","type":"text"},{"code":"prefix operator","type":"codeVoice"},{"type":"text","text":" rather than "},{"type":"codeVoice","code":"operator prefix"},{"type":"text","text":","},{"text":" ","type":"text"},{"type":"text","text":"for example."}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Added information about the "},{"code":"dynamic","type":"codeVoice"},{"type":"text","text":" declaration modifier"},{"text":" ","type":"text"},{"text":"in ","type":"text"},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#Declaration-Modifiers","type":"reference","isActive":true},{"text":".","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Added information about how type inference works"},{"type":"text","text":" "},{"type":"text","text":"with "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/LexicalStructure#Literals","type":"reference","isActive":true},{"text":".","type":"text"}]}]},{"content":[{"inlineContent":[{"text":"Added more information about curried functions.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Added a new chapter about "},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AccessControl"},{"type":"text","text":"."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Updated the "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/StringsAndCharacters","isActive":true,"type":"reference"},{"text":" chapter","type":"text"},{"type":"text","text":" "},{"text":"to reflect the fact that Swift’s ","type":"text"},{"type":"codeVoice","code":"Character"},{"text":" type now represents","type":"text"},{"type":"text","text":" "},{"text":"a single Unicode extended grapheme cluster.","type":"text"},{"type":"text","text":" "},{"text":"Includes a new section on","type":"text"},{"type":"text","text":" "},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/StringsAndCharacters#Extended-Grapheme-Clusters","isActive":true},{"type":"text","text":" "},{"type":"text","text":"and more information about"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/StringsAndCharacters#Unicode-Scalar-Values"},{"type":"text","text":" "},{"type":"text","text":"and "},{"isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/StringsAndCharacters#Comparing-Strings","type":"reference"},{"type":"text","text":"."}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Updated the "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/StringsAndCharacters#String-Literals","isActive":true,"type":"reference"},{"text":" section","type":"text"},{"type":"text","text":" "},{"type":"text","text":"to note that Unicode scalars inside string literals"},{"type":"text","text":" "},{"text":"are now written as ","type":"text"},{"code":"\\u{n}","type":"codeVoice"},{"type":"text","text":","},{"type":"text","text":" "},{"type":"text","text":"where "},{"code":"n","type":"codeVoice"},{"type":"text","text":" is a hexadecimal number between 0 and 10FFFF,"},{"type":"text","text":" "},{"type":"text","text":"the range of Unicode’s codespace."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"The ","type":"text"},{"code":"NSString","type":"codeVoice"},{"type":"text","text":" "},{"type":"codeVoice","code":"length"},{"text":" property is now mapped onto","type":"text"},{"type":"text","text":" "},{"text":"Swift’s native ","type":"text"},{"type":"codeVoice","code":"String"},{"type":"text","text":" type as "},{"type":"codeVoice","code":"utf16Count"},{"type":"text","text":", not "},{"code":"utf16count","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Swift’s native "},{"type":"codeVoice","code":"String"},{"type":"text","text":" type no longer has"},{"type":"text","text":" "},{"text":"an ","type":"text"},{"type":"codeVoice","code":"uppercaseString"},{"type":"text","text":" or "},{"code":"lowercaseString","type":"codeVoice"},{"type":"text","text":" property."},{"text":" ","type":"text"},{"type":"text","text":"The corresponding section in"},{"type":"text","text":" "},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/StringsAndCharacters","isActive":true},{"type":"text","text":" "},{"type":"text","text":"has been removed, and various code examples have been updated."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Added a new section about"},{"type":"text","text":" "},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Initialization#Initializer-Parameters-Without-Argument-Labels"},{"type":"text","text":"."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Added a new section about","type":"text"},{"text":" ","type":"text"},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Initialization#Required-Initializers","type":"reference","isActive":true},{"type":"text","text":"."}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Added a new section about "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Functions#Optional-Tuple-Return-Types","isActive":true,"type":"reference"},{"text":".","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Updated the "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/TheBasics#Type-Annotations","isActive":true,"type":"reference"},{"type":"text","text":" section to note that"},{"type":"text","text":" "},{"text":"multiple related variables can be defined on a single line","type":"text"},{"type":"text","text":" "},{"type":"text","text":"with one type annotation."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"@optional"},{"type":"text","text":", "},{"code":"@lazy","type":"codeVoice"},{"type":"text","text":", "},{"code":"@final","type":"codeVoice"},{"type":"text","text":", and "},{"type":"codeVoice","code":"@required"},{"type":"text","text":" attributes"},{"text":" ","type":"text"},{"type":"text","text":"are now the "},{"code":"optional","type":"codeVoice"},{"text":", ","type":"text"},{"type":"codeVoice","code":"lazy"},{"text":", ","type":"text"},{"type":"codeVoice","code":"final"},{"type":"text","text":", and "},{"code":"required","type":"codeVoice"},{"type":"text","text":" "},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#Declaration-Modifiers","isActive":true},{"type":"text","text":"."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Updated the entire book to refer to "},{"code":"..<","type":"codeVoice"},{"text":" as","type":"text"},{"type":"text","text":" "},{"text":"the ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/BasicOperators#Half-Open-Range-Operator"},{"type":"text","text":" "},{"type":"text","text":"(rather than the “half-closed range operator”)."}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Updated the "},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/CollectionTypes#Accessing-and-Modifying-a-Dictionary","isActive":true},{"type":"text","text":" "},{"text":"section to note that ","type":"text"},{"type":"codeVoice","code":"Dictionary"},{"text":" now has","type":"text"},{"type":"text","text":" "},{"text":"a Boolean ","type":"text"},{"code":"isEmpty","type":"codeVoice"},{"type":"text","text":" property."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Clarified the full list of characters that can be used","type":"text"},{"type":"text","text":" "},{"type":"text","text":"when defining "},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AdvancedOperators#Custom-Operators","isActive":true},{"text":".","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"codeVoice","code":"nil"},{"type":"text","text":" and the Booleans "},{"code":"true","type":"codeVoice"},{"type":"text","text":" and "},{"code":"false","type":"codeVoice"},{"type":"text","text":" are now "},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/LexicalStructure#Literals","isActive":true},{"text":".","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Swift’s ","type":"text"},{"code":"Array","type":"codeVoice"},{"text":" type now has full value semantics.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Updated the information about "},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/CollectionTypes#Mutability-of-Collections","isActive":true},{"text":" ","type":"text"},{"type":"text","text":"and "},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/CollectionTypes#Arrays","isActive":true},{"text":" to reflect the new approach.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Also clarified the assignment and copy behavior for strings arrays and dictionaries."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/CollectionTypes#Array-Type-Shorthand-Syntax","type":"reference","isActive":true},{"type":"text","text":" is now written as"},{"type":"text","text":" "},{"type":"codeVoice","code":"[SomeType]"},{"type":"text","text":" rather than "},{"code":"SomeType[]","type":"codeVoice"},{"text":".","type":"text"}]}]},{"content":[{"inlineContent":[{"text":"Added a new section about ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/CollectionTypes#Dictionary-Type-Shorthand-Syntax"},{"text":",","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"which is written as "},{"type":"codeVoice","code":"[KeyType: ValueType]"},{"text":".","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Added a new section about ","type":"text"},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/CollectionTypes#Hash-Values-for-Set-Types","type":"reference","isActive":true},{"type":"text","text":"."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Examples of ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Closures#Closure-Expressions"},{"type":"text","text":" now use"},{"text":" ","type":"text"},{"text":"the global ","type":"text"},{"type":"codeVoice","code":"sorted(_:_:)"},{"type":"text","text":" function"},{"text":" ","type":"text"},{"type":"text","text":"rather than the global "},{"type":"codeVoice","code":"sort(_:_:)"},{"type":"text","text":" function,"},{"type":"text","text":" "},{"text":"to reflect the new array value semantics.","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Updated the information about "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Initialization#Memberwise-Initializers-for-Structure-Types","type":"reference","isActive":true},{"type":"text","text":" "},{"text":"to clarify that the memberwise structure initializer is made available","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"even if a structure’s stored properties don’t have default values."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Updated to "},{"type":"codeVoice","code":"..<"},{"type":"text","text":" rather than "},{"code":"..","type":"codeVoice"},{"type":"text","text":" "},{"type":"text","text":"for the "},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/BasicOperators#Half-Open-Range-Operator","isActive":true},{"text":".","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Added an example of "},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Generics#Extending-a-Generic-Type","isActive":true},{"type":"text","text":"."}]}]}]}]}],"metadata":{"title":"Document Revision History"},"kind":"article","references":{"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/StringsAndCharacters#Comparing-Strings":{"kind":"section","url":"\/documentation\/the-swift-programming-language\/stringsandcharacters#Comparing-Strings","abstract":[],"type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/StringsAndCharacters#Comparing-Strings","title":"Comparing Strings"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/CollectionTypes#Accessing-and-Modifying-an-Array":{"kind":"section","url":"\/documentation\/the-swift-programming-language\/collectiontypes#Accessing-and-Modifying-an-Array","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/CollectionTypes#Accessing-and-Modifying-an-Array","type":"topic","title":"Accessing and Modifying an Array","abstract":[]},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Protocols#Optional-Protocol-Requirements":{"title":"Optional Protocol Requirements","url":"\/documentation\/the-swift-programming-language\/protocols#Optional-Protocol-Requirements","kind":"section","abstract":[],"type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Protocols#Optional-Protocol-Requirements"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Concurrency":{"abstract":[{"type":"text","text":"Perform asynchronous operations."}],"url":"\/documentation\/the-swift-programming-language\/concurrency","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Concurrency","title":"Concurrency","type":"topic","role":"article","kind":"article"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Initialization#Initializer-Inheritance-and-Overriding":{"abstract":[],"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Initialization#Initializer-Inheritance-and-Overriding","type":"topic","kind":"section","url":"\/documentation\/the-swift-programming-language\/initialization#Initializer-Inheritance-and-Overriding","title":"Initializer Inheritance and Overriding"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/OptionalChaining#Calling-Methods-Through-Optional-Chaining":{"kind":"section","url":"\/documentation\/the-swift-programming-language\/optionalchaining#Calling-Methods-Through-Optional-Chaining","abstract":[],"type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/OptionalChaining#Calling-Methods-Through-Optional-Chaining","title":"Calling Methods Through Optional Chaining"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/ControlFlow#Early-Exit":{"type":"topic","title":"Early Exit","kind":"section","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/ControlFlow#Early-Exit","url":"\/documentation\/the-swift-programming-language\/controlflow#Early-Exit","abstract":[]},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Attributes#backDeployed":{"abstract":[],"type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Attributes#backDeployed","title":"backDeployed","kind":"section","url":"\/documentation\/the-swift-programming-language\/attributes#backDeployed"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Types":{"url":"\/documentation\/the-swift-programming-language\/types","title":"Types","abstract":[{"type":"text","text":"Use built-in named and compound types."}],"kind":"article","role":"article","type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Types"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Declarations#Enumerations-with-Cases-of-a-Raw-Value-Type":{"kind":"section","url":"\/documentation\/the-swift-programming-language\/declarations#Enumerations-with-Cases-of-a-Raw-Value-Type","abstract":[],"type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#Enumerations-with-Cases-of-a-Raw-Value-Type","title":"Enumerations with Cases of a Raw-Value Type"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/TheBasics#Optional-Binding":{"kind":"section","type":"topic","abstract":[],"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/TheBasics#Optional-Binding","title":"Optional Binding","url":"\/documentation\/the-swift-programming-language\/thebasics#Optional-Binding"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Declarations#Failable-Initializers":{"kind":"section","type":"topic","abstract":[],"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#Failable-Initializers","title":"Failable Initializers","url":"\/documentation\/the-swift-programming-language\/declarations#Failable-Initializers"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/StringsAndCharacters":{"url":"\/documentation\/the-swift-programming-language\/stringsandcharacters","title":"Strings and Characters","abstract":[{"type":"text","text":"Store and manipulate text."}],"kind":"article","role":"article","type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/StringsAndCharacters"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Protocols#Protocol-Extensions":{"abstract":[],"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Protocols#Protocol-Extensions","title":"Protocol Extensions","kind":"section","url":"\/documentation\/the-swift-programming-language\/protocols#Protocol-Extensions","type":"topic"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Types#Protocol-Composition-Type":{"url":"\/documentation\/the-swift-programming-language\/types#Protocol-Composition-Type","title":"Protocol Composition Type","type":"topic","abstract":[],"kind":"section","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Types#Protocol-Composition-Type"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Subscripts#Subscript-Options":{"abstract":[],"type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Subscripts#Subscript-Options","title":"Subscript Options","kind":"section","url":"\/documentation\/the-swift-programming-language\/subscripts#Subscript-Options"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Declarations#Protocol-Associated-Type-Declaration":{"url":"\/documentation\/the-swift-programming-language\/declarations#Protocol-Associated-Type-Declaration","title":"Protocol Associated Type Declaration","type":"topic","abstract":[],"kind":"section","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#Protocol-Associated-Type-Declaration"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/CollectionTypes#Array-Type-Shorthand-Syntax":{"kind":"section","url":"\/documentation\/the-swift-programming-language\/collectiontypes#Array-Type-Shorthand-Syntax","abstract":[],"type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/CollectionTypes#Array-Type-Shorthand-Syntax","title":"Array Type Shorthand Syntax"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Declarations#Rethrowing-Functions-and-Methods":{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#Rethrowing-Functions-and-Methods","abstract":[],"title":"Rethrowing Functions and Methods","kind":"section","type":"topic","url":"\/documentation\/the-swift-programming-language\/declarations#Rethrowing-Functions-and-Methods"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Expressions#Selector-Expression":{"abstract":[],"type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Expressions#Selector-Expression","title":"Selector Expression","kind":"section","url":"\/documentation\/the-swift-programming-language\/expressions#Selector-Expression"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Statements#Availability-Condition":{"kind":"section","url":"\/documentation\/the-swift-programming-language\/statements#Availability-Condition","abstract":[],"type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Statements#Availability-Condition","title":"Availability Condition"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/StringsAndCharacters#String-Literals":{"abstract":[],"type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/StringsAndCharacters#String-Literals","title":"String Literals","kind":"section","url":"\/documentation\/the-swift-programming-language\/stringsandcharacters#String-Literals"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Statements#Throw-Statement":{"kind":"section","url":"\/documentation\/the-swift-programming-language\/statements#Throw-Statement","abstract":[],"type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Statements#Throw-Statement","title":"Throw Statement"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Functions":{"kind":"article","type":"topic","url":"\/documentation\/the-swift-programming-language\/functions","title":"Functions","role":"article","abstract":[{"text":"Define and call functions, label their arguments, and use their return values.","type":"text"}],"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Functions"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/OpaqueTypes":{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/OpaqueTypes","type":"topic","kind":"article","abstract":[{"type":"text","text":"Hide implementation details about a value’s type."}],"title":"Opaque and Boxed Types","role":"article","url":"\/documentation\/the-swift-programming-language\/opaquetypes"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Patterns#Optional-Pattern":{"abstract":[],"type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Patterns#Optional-Pattern","title":"Optional Pattern","kind":"section","url":"\/documentation\/the-swift-programming-language\/patterns#Optional-Pattern"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/CollectionTypes#Arrays":{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/CollectionTypes#Arrays","abstract":[],"title":"Arrays","kind":"section","type":"topic","url":"\/documentation\/the-swift-programming-language\/collectiontypes#Arrays"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Declarations#Asynchronous-Functions-and-Methods":{"url":"\/documentation\/the-swift-programming-language\/declarations#Asynchronous-Functions-and-Methods","abstract":[],"kind":"section","type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#Asynchronous-Functions-and-Methods","title":"Asynchronous Functions and Methods"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/AdvancedOperators#Value-Overflow":{"kind":"section","url":"\/documentation\/the-swift-programming-language\/advancedoperators#Value-Overflow","abstract":[],"type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AdvancedOperators#Value-Overflow","title":"Value Overflow"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Generics#Using-a-Protocol-in-Its-Associated-Types-Constraints":{"abstract":[],"type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Generics#Using-a-Protocol-in-Its-Associated-Types-Constraints","title":"Using a Protocol in Its Associated Type’s Constraints","kind":"section","url":"\/documentation\/the-swift-programming-language\/generics#Using-a-Protocol-in-Its-Associated-Types-Constraints"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Expressions#Capture-Lists":{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Expressions#Capture-Lists","url":"\/documentation\/the-swift-programming-language\/expressions#Capture-Lists","type":"topic","abstract":[],"kind":"section","title":"Capture Lists"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/CollectionTypes#Accessing-and-Modifying-a-Dictionary":{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/CollectionTypes#Accessing-and-Modifying-a-Dictionary","abstract":[],"type":"topic","kind":"section","title":"Accessing and Modifying a Dictionary","url":"\/documentation\/the-swift-programming-language\/collectiontypes#Accessing-and-Modifying-a-Dictionary"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/AccessControl":{"role":"article","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AccessControl","url":"\/documentation\/the-swift-programming-language\/accesscontrol","type":"topic","abstract":[{"text":"Manage the visibility of code by declaration, file, and module.","type":"text"}],"kind":"article","title":"Access Control"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/AutomaticReferenceCounting#Unowned-Optional-References":{"kind":"section","url":"\/documentation\/the-swift-programming-language\/automaticreferencecounting#Unowned-Optional-References","abstract":[],"type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AutomaticReferenceCounting#Unowned-Optional-References","title":"Unowned Optional References"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/AccessControl#Access-Levels-for-Unit-Test-Targets":{"abstract":[],"type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AccessControl#Access-Levels-for-Unit-Test-Targets","title":"Access Levels for Unit Test Targets","kind":"section","url":"\/documentation\/the-swift-programming-language\/accesscontrol#Access-Levels-for-Unit-Test-Targets"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Attributes#Result-Transformations":{"kind":"section","url":"\/documentation\/the-swift-programming-language\/attributes#Result-Transformations","abstract":[],"type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Attributes#Result-Transformations","title":"Result Transformations"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Properties#Property-Wrappers":{"abstract":[],"type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Properties#Property-Wrappers","title":"Property Wrappers","kind":"section","url":"\/documentation\/the-swift-programming-language\/properties#Property-Wrappers"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Generics#Associated-Types":{"title":"Associated Types","url":"\/documentation\/the-swift-programming-language\/generics#Associated-Types","kind":"section","abstract":[],"type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Generics#Associated-Types"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/TheBasics#Optionals":{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/TheBasics#Optionals","url":"\/documentation\/the-swift-programming-language\/thebasics#Optionals","abstract":[],"kind":"section","title":"Optionals","type":"topic"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Enumerations":{"url":"\/documentation\/the-swift-programming-language\/enumerations","type":"topic","title":"Enumerations","role":"article","abstract":[{"text":"Model custom types that define a list of possible values.","type":"text"}],"kind":"article","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Enumerations"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Declarations#Methods-with-Special-Names":{"kind":"section","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#Methods-with-Special-Names","title":"Methods with Special Names","type":"topic","url":"\/documentation\/the-swift-programming-language\/declarations#Methods-with-Special-Names","abstract":[]},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/ControlFlow":{"url":"\/documentation\/the-swift-programming-language\/controlflow","abstract":[{"text":"Structure code with branches, loops, and early exits.","type":"text"}],"title":"Control Flow","type":"topic","role":"article","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/ControlFlow","kind":"article"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/AutomaticReferenceCounting#Weak-References":{"title":"Weak References","url":"\/documentation\/the-swift-programming-language\/automaticreferencecounting#Weak-References","kind":"section","abstract":[],"type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AutomaticReferenceCounting#Weak-References"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/BasicOperators#Half-Open-Range-Operator":{"kind":"section","url":"\/documentation\/the-swift-programming-language\/basicoperators#Half-Open-Range-Operator","abstract":[],"type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/BasicOperators#Half-Open-Range-Operator","title":"Half-Open Range Operator"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Declarations#Stored-Variable-Observers-and-Property-Observers":{"abstract":[],"type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#Stored-Variable-Observers-and-Property-Observers","title":"Stored Variable Observers and Property Observers","kind":"section","url":"\/documentation\/the-swift-programming-language\/declarations#Stored-Variable-Observers-and-Property-Observers"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/StringsAndCharacters#Extended-Grapheme-Clusters":{"kind":"section","url":"\/documentation\/the-swift-programming-language\/stringsandcharacters#Extended-Grapheme-Clusters","abstract":[],"type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/StringsAndCharacters#Extended-Grapheme-Clusters","title":"Extended Grapheme Clusters"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/LexicalStructure#Literals":{"abstract":[],"type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/LexicalStructure#Literals","title":"Literals","kind":"section","url":"\/documentation\/the-swift-programming-language\/lexicalstructure#Literals"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Macros":{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Macros","type":"topic","kind":"article","abstract":[{"type":"text","text":"Use macros to generate code at compile time."}],"title":"Macros","role":"article","url":"\/documentation\/the-swift-programming-language\/macros"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Protocols#Failable-Initializer-Requirements":{"kind":"section","url":"\/documentation\/the-swift-programming-language\/protocols#Failable-Initializer-Requirements","abstract":[],"type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Protocols#Failable-Initializer-Requirements","title":"Failable Initializer Requirements"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/TheBasics#Declaring-Constants-and-Variables":{"abstract":[],"type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/TheBasics#Declaring-Constants-and-Variables","title":"Declaring Constants and Variables","kind":"section","url":"\/documentation\/the-swift-programming-language\/thebasics#Declaring-Constants-and-Variables"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Patterns#Enumeration-Case-Pattern":{"url":"\/documentation\/the-swift-programming-language\/patterns#Enumeration-Case-Pattern","title":"Enumeration Case Pattern","type":"topic","abstract":[],"kind":"section","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Patterns#Enumeration-Case-Pattern"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Attributes#frozen":{"kind":"section","type":"topic","abstract":[],"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Attributes#frozen","title":"frozen","url":"\/documentation\/the-swift-programming-language\/attributes#frozen"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Inheritance":{"title":"Inheritance","url":"\/documentation\/the-swift-programming-language\/inheritance","type":"topic","role":"article","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Inheritance","abstract":[{"text":"Subclass to add or override functionality.","type":"text"}],"kind":"article"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/ErrorHandling#Converting-Errors-to-Optional-Values":{"kind":"section","url":"\/documentation\/the-swift-programming-language\/errorhandling#Converting-Errors-to-Optional-Values","abstract":[],"type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/ErrorHandling#Converting-Errors-to-Optional-Values","title":"Converting Errors to Optional Values"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Declarations#Type-Alias-Declaration":{"title":"Type Alias Declaration","url":"\/documentation\/the-swift-programming-language\/declarations#Type-Alias-Declaration","kind":"section","abstract":[],"type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#Type-Alias-Declaration"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Expressions#Initializer-Expression":{"abstract":[],"type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Expressions#Initializer-Expression","title":"Initializer Expression","kind":"section","url":"\/documentation\/the-swift-programming-language\/expressions#Initializer-Expression"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Statements":{"kind":"article","abstract":[{"type":"text","text":"Group expressions and control the flow of execution."}],"type":"topic","url":"\/documentation\/the-swift-programming-language\/statements","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Statements","role":"article","title":"Statements"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/CollectionTypes#Dictionary-Type-Shorthand-Syntax":{"kind":"section","url":"\/documentation\/the-swift-programming-language\/collectiontypes#Dictionary-Type-Shorthand-Syntax","abstract":[],"type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/CollectionTypes#Dictionary-Type-Shorthand-Syntax","title":"Dictionary Type Shorthand Syntax"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/StringsAndCharacters#Extended-String-Delimiters":{"abstract":[],"type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/StringsAndCharacters#Extended-String-Delimiters","title":"Extended String Delimiters","kind":"section","url":"\/documentation\/the-swift-programming-language\/stringsandcharacters#Extended-String-Delimiters"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/AccessControl#Access-Levels":{"kind":"section","url":"\/documentation\/the-swift-programming-language\/accesscontrol#Access-Levels","abstract":[],"type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AccessControl#Access-Levels","title":"Access Levels"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Enumerations#Raw-Values":{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Enumerations#Raw-Values","abstract":[],"title":"Raw Values","kind":"section","type":"topic","url":"\/documentation\/the-swift-programming-language\/enumerations#Raw-Values"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Attributes#unchecked":{"abstract":[],"type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Attributes#unchecked","title":"unchecked","kind":"section","url":"\/documentation\/the-swift-programming-language\/attributes#unchecked"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Attributes#dynamicCallable":{"title":"dynamicCallable","url":"\/documentation\/the-swift-programming-language\/attributes#dynamicCallable","kind":"section","abstract":[],"type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Attributes#dynamicCallable"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Attributes#Sendable":{"kind":"section","url":"\/documentation\/the-swift-programming-language\/attributes#Sendable","abstract":[],"type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Attributes#Sendable","title":"Sendable"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Statements#Do-Statement":{"abstract":[],"type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Statements#Do-Statement","title":"Do Statement","kind":"section","url":"\/documentation\/the-swift-programming-language\/statements#Do-Statement"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/LexicalStructure#Keywords-and-Punctuation":{"kind":"section","url":"\/documentation\/the-swift-programming-language\/lexicalstructure#Keywords-and-Punctuation","abstract":[],"type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/LexicalStructure#Keywords-and-Punctuation","title":"Keywords and Punctuation"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/CollectionTypes#Hash-Values-for-Set-Types":{"abstract":[],"type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/CollectionTypes#Hash-Values-for-Set-Types","title":"Hash Values for Set Types","kind":"section","url":"\/documentation\/the-swift-programming-language\/collectiontypes#Hash-Values-for-Set-Types"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/ControlFlow#Switch":{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/ControlFlow#Switch","abstract":[],"title":"Switch","kind":"section","type":"topic","url":"\/documentation\/the-swift-programming-language\/controlflow#Switch"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/AdvancedOperators#Prefix-and-Postfix-Operators":{"kind":"section","url":"\/documentation\/the-swift-programming-language\/advancedoperators#Prefix-and-Postfix-Operators","abstract":[],"type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AdvancedOperators#Prefix-and-Postfix-Operators","title":"Prefix and Postfix Operators"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/MemorySafety":{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/MemorySafety","role":"article","title":"Memory Safety","url":"\/documentation\/the-swift-programming-language\/memorysafety","kind":"article","type":"topic","abstract":[{"text":"Structure your code to avoid conflicts when accessing memory.","type":"text"}]},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Protocols#Protocol-Composition":{"title":"Protocol Composition","url":"\/documentation\/the-swift-programming-language\/protocols#Protocol-Composition","kind":"section","abstract":[],"type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Protocols#Protocol-Composition"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/ErrorHandling#Handling-Errors-Using-Do-Catch":{"abstract":[],"type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/ErrorHandling#Handling-Errors-Using-Do-Catch","title":"Handling Errors Using Do-Catch","kind":"section","url":"\/documentation\/the-swift-programming-language\/errorhandling#Handling-Errors-Using-Do-Catch"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/ErrorHandling":{"role":"article","url":"\/documentation\/the-swift-programming-language\/errorhandling","abstract":[{"text":"Respond to and recover from errors.","type":"text"}],"title":"Error Handling","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/ErrorHandling","type":"topic","kind":"article"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Functions#Functions-With-an-Implicit-Return":{"type":"topic","abstract":[],"kind":"section","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Functions#Functions-With-an-Implicit-Return","url":"\/documentation\/the-swift-programming-language\/functions#Functions-With-an-Implicit-Return","title":"Functions With an Implicit Return"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Attributes":{"kind":"article","role":"article","type":"topic","url":"\/documentation\/the-swift-programming-language\/attributes","title":"Attributes","abstract":[{"text":"Add information to declarations and types.","type":"text"}],"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Attributes"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/ControlFlow#For-In-Loops":{"kind":"section","url":"\/documentation\/the-swift-programming-language\/controlflow#For-In-Loops","title":"For-In Loops","type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/ControlFlow#For-In-Loops","abstract":[]},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Statements#Switching-Over-Future-Enumeration-Cases":{"kind":"section","type":"topic","abstract":[],"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Statements#Switching-Over-Future-Enumeration-Cases","title":"Switching Over Future Enumeration Cases","url":"\/documentation\/the-swift-programming-language\/statements#Switching-Over-Future-Enumeration-Cases"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Enumerations#Implicitly-Assigned-Raw-Values":{"kind":"section","url":"\/documentation\/the-swift-programming-language\/enumerations#Implicitly-Assigned-Raw-Values","abstract":[],"type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Enumerations#Implicitly-Assigned-Raw-Values","title":"Implicitly Assigned Raw Values"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Protocols#Initializer-Requirements":{"abstract":[],"type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Protocols#Initializer-Requirements","title":"Initializer Requirements","kind":"section","url":"\/documentation\/the-swift-programming-language\/protocols#Initializer-Requirements"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Generics":{"title":"Generics","role":"article","abstract":[{"text":"Write code that works for multiple types and specify requirements for those types.","type":"text"}],"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Generics","url":"\/documentation\/the-swift-programming-language\/generics","kind":"article","type":"topic"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Expressions#Try-Operator":{"kind":"section","url":"\/documentation\/the-swift-programming-language\/expressions#Try-Operator","abstract":[],"type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Expressions#Try-Operator","title":"Try Operator"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/StringsAndCharacters#String-Interpolation":{"abstract":[],"url":"\/documentation\/the-swift-programming-language\/stringsandcharacters#String-Interpolation","kind":"section","title":"String Interpolation","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/StringsAndCharacters#String-Interpolation","type":"topic"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Functions#Optional-Tuple-Return-Types":{"abstract":[],"type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Functions#Optional-Tuple-Return-Types","title":"Optional Tuple Return Types","kind":"section","url":"\/documentation\/the-swift-programming-language\/functions#Optional-Tuple-Return-Types"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Declarations#Constant-Declaration":{"type":"topic","title":"Constant Declaration","kind":"section","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#Constant-Declaration","url":"\/documentation\/the-swift-programming-language\/declarations#Constant-Declaration","abstract":[]},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Attributes#unknown":{"kind":"section","url":"\/documentation\/the-swift-programming-language\/attributes#unknown","abstract":[],"type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Attributes#unknown","title":"unknown"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/AutomaticReferenceCounting#Defining-a-Capture-List":{"abstract":[],"type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AutomaticReferenceCounting#Defining-a-Capture-List","title":"Defining a Capture List","kind":"section","url":"\/documentation\/the-swift-programming-language\/automaticreferencecounting#Defining-a-Capture-List"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Expressions#Await-Operator":{"kind":"section","url":"\/documentation\/the-swift-programming-language\/expressions#Await-Operator","abstract":[],"type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Expressions#Await-Operator","title":"Await Operator"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Generics#Generic-Subscripts":{"abstract":[],"type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Generics#Generic-Subscripts","title":"Generic Subscripts","kind":"section","url":"\/documentation\/the-swift-programming-language\/generics#Generic-Subscripts"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Statements#Switch-Statement":{"kind":"section","url":"\/documentation\/the-swift-programming-language\/statements#Switch-Statement","abstract":[],"type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Statements#Switch-Statement","title":"Switch Statement"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/AdvancedOperators#Custom-Operators":{"url":"\/documentation\/the-swift-programming-language\/advancedoperators#Custom-Operators","title":"Custom Operators","type":"topic","abstract":[],"kind":"section","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AdvancedOperators#Custom-Operators"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Expressions":{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Expressions","type":"topic","kind":"article","title":"Expressions","abstract":[{"type":"text","text":"Access, modify, and assign values."}],"role":"article","url":"\/documentation\/the-swift-programming-language\/expressions"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/ControlFlow#Checking-API-Availability":{"abstract":[],"type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/ControlFlow#Checking-API-Availability","title":"Checking API Availability","kind":"section","url":"\/documentation\/the-swift-programming-language\/controlflow#Checking-API-Availability"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/StringsAndCharacters#Special-Characters-in-String-Literals":{"kind":"section","url":"\/documentation\/the-swift-programming-language\/stringsandcharacters#Special-Characters-in-String-Literals","abstract":[],"type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/StringsAndCharacters#Special-Characters-in-String-Literals","title":"Special Characters in String Literals"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/TheBasics#Assertions-and-Preconditions":{"type":"topic","title":"Assertions and Preconditions","kind":"section","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/TheBasics#Assertions-and-Preconditions","url":"\/documentation\/the-swift-programming-language\/thebasics#Assertions-and-Preconditions","abstract":[]},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Declarations#Extension-Declaration":{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#Extension-Declaration","url":"\/documentation\/the-swift-programming-language\/declarations#Extension-Declaration","abstract":[],"kind":"section","title":"Extension Declaration","type":"topic"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/BasicOperators#Comparison-Operators":{"url":"\/documentation\/the-swift-programming-language\/basicoperators#Comparison-Operators","kind":"section","type":"topic","abstract":[],"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/BasicOperators#Comparison-Operators","title":"Comparison Operators"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Declarations#Declaration-Modifiers":{"abstract":[],"type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#Declaration-Modifiers","title":"Declaration Modifiers","kind":"section","url":"\/documentation\/the-swift-programming-language\/declarations#Declaration-Modifiers"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/StringsAndCharacters#String-Indices":{"kind":"section","url":"\/documentation\/the-swift-programming-language\/stringsandcharacters#String-Indices","abstract":[],"type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/StringsAndCharacters#String-Indices","title":"String Indices"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/StringsAndCharacters#Concatenating-Strings-and-Characters":{"abstract":[],"type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/StringsAndCharacters#Concatenating-Strings-and-Characters","title":"Concatenating Strings and Characters","kind":"section","url":"\/documentation\/the-swift-programming-language\/stringsandcharacters#Concatenating-Strings-and-Characters"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Attributes#dynamicMemberLookup":{"title":"dynamicMemberLookup","url":"\/documentation\/the-swift-programming-language\/attributes#dynamicMemberLookup","kind":"section","abstract":[],"type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Attributes#dynamicMemberLookup"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Attributes#available":{"kind":"section","url":"\/documentation\/the-swift-programming-language\/attributes#available","abstract":[],"type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Attributes#available","title":"available"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Closures#Trailing-Closures":{"abstract":[],"type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Closures#Trailing-Closures","title":"Trailing Closures","kind":"section","url":"\/documentation\/the-swift-programming-language\/closures#Trailing-Closures"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/LexicalStructure#String-Literals":{"kind":"section","url":"\/documentation\/the-swift-programming-language\/lexicalstructure#String-Literals","abstract":[],"type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/LexicalStructure#String-Literals","title":"String Literals"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/AdvancedOperators#Result-Builders":{"url":"\/documentation\/the-swift-programming-language\/advancedoperators#Result-Builders","kind":"section","type":"topic","abstract":[],"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AdvancedOperators#Result-Builders","title":"Result Builders"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/AdvancedOperators#Overflow-Operators":{"title":"Overflow Operators","url":"\/documentation\/the-swift-programming-language\/advancedoperators#Overflow-Operators","abstract":[],"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AdvancedOperators#Overflow-Operators","kind":"section","type":"topic"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/BasicOperators#Nil-Coalescing-Operator":{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/BasicOperators#Nil-Coalescing-Operator","kind":"section","type":"topic","url":"\/documentation\/the-swift-programming-language\/basicoperators#Nil-Coalescing-Operator","abstract":[],"title":"Nil-Coalescing Operator"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Declarations#Functions-that-Never-Return":{"kind":"section","type":"topic","abstract":[],"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#Functions-that-Never-Return","title":"Functions that Never Return","url":"\/documentation\/the-swift-programming-language\/declarations#Functions-that-Never-Return"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Statements#Guard-Statement":{"title":"Guard Statement","url":"\/documentation\/the-swift-programming-language\/statements#Guard-Statement","kind":"section","abstract":[],"type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Statements#Guard-Statement"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/AdvancedOperators#Equivalence-Operators":{"url":"\/documentation\/the-swift-programming-language\/advancedoperators#Equivalence-Operators","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AdvancedOperators#Equivalence-Operators","abstract":[],"title":"Equivalence Operators","kind":"section","type":"topic"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Initialization#Failable-Initializers":{"url":"\/documentation\/the-swift-programming-language\/initialization#Failable-Initializers","title":"Failable Initializers","type":"topic","abstract":[],"kind":"section","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Initialization#Failable-Initializers"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Functions#Variadic-Parameters":{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Functions#Variadic-Parameters","url":"\/documentation\/the-swift-programming-language\/functions#Variadic-Parameters","abstract":[],"kind":"section","type":"topic","title":"Variadic Parameters"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Declarations#In-Out-Parameters":{"url":"\/documentation\/the-swift-programming-language\/declarations#In-Out-Parameters","kind":"section","title":"In-Out Parameters","abstract":[],"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#In-Out-Parameters","type":"topic"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Protocols#Adopting-a-Protocol-Using-a-Synthesized-Implementation":{"type":"topic","url":"\/documentation\/the-swift-programming-language\/protocols#Adopting-a-Protocol-Using-a-Synthesized-Implementation","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Protocols#Adopting-a-Protocol-Using-a-Synthesized-Implementation","title":"Adopting a Protocol Using a Synthesized Implementation","abstract":[],"kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Attributes#Type-Attributes":{"abstract":[],"type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Attributes#Type-Attributes","title":"Type Attributes","kind":"section","url":"\/documentation\/the-swift-programming-language\/attributes#Type-Attributes"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Expressions#Conditional-Expression":{"kind":"section","url":"\/documentation\/the-swift-programming-language\/expressions#Conditional-Expression","abstract":[],"type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Expressions#Conditional-Expression","title":"Conditional Expression"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Functions#Default-Parameter-Values":{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Functions#Default-Parameter-Values","url":"\/documentation\/the-swift-programming-language\/functions#Default-Parameter-Values","abstract":[],"kind":"section","type":"topic","title":"Default Parameter Values"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Initialization#Assigning-Constant-Properties-During-Initialization":{"type":"topic","abstract":[],"kind":"section","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Initialization#Assigning-Constant-Properties-During-Initialization","url":"\/documentation\/the-swift-programming-language\/initialization#Assigning-Constant-Properties-During-Initialization","title":"Assigning Constant Properties During Initialization"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/AdvancedOperators#Compound-Assignment-Operators":{"abstract":[],"type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AdvancedOperators#Compound-Assignment-Operators","title":"Compound Assignment Operators","kind":"section","url":"\/documentation\/the-swift-programming-language\/advancedoperators#Compound-Assignment-Operators"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Declarations#Precedence-Group-Declaration":{"url":"\/documentation\/the-swift-programming-language\/declarations#Precedence-Group-Declaration","title":"Precedence Group Declaration","type":"topic","abstract":[],"kind":"section","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#Precedence-Group-Declaration"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Statements#Compile-Time-Diagnostic-Statement":{"kind":"section","url":"\/documentation\/the-swift-programming-language\/statements#Compile-Time-Diagnostic-Statement","abstract":[],"type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Statements#Compile-Time-Diagnostic-Statement","title":"Compile-Time Diagnostic Statement"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/LexicalStructure#Identifiers":{"type":"topic","url":"\/documentation\/the-swift-programming-language\/lexicalstructure#Identifiers","abstract":[],"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/LexicalStructure#Identifiers","title":"Identifiers","kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Declarations#Protocol-Declaration":{"abstract":[],"type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#Protocol-Declaration","title":"Protocol Declaration","kind":"section","url":"\/documentation\/the-swift-programming-language\/declarations#Protocol-Declaration"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/ErrorHandling#Representing-and-Throwing-Errors":{"kind":"section","url":"\/documentation\/the-swift-programming-language\/errorhandling#Representing-and-Throwing-Errors","abstract":[],"type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/ErrorHandling#Representing-and-Throwing-Errors","title":"Representing and Throwing Errors"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/ErrorHandling#Handling-Errors":{"kind":"section","type":"topic","abstract":[],"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/ErrorHandling#Handling-Errors","title":"Handling Errors","url":"\/documentation\/the-swift-programming-language\/errorhandling#Handling-Errors"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Closures#Capturing-Values":{"abstract":[],"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Closures#Capturing-Values","url":"\/documentation\/the-swift-programming-language\/closures#Capturing-Values","kind":"section","title":"Capturing Values","type":"topic"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/ControlFlow#Repeat-While":{"abstract":[],"type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/ControlFlow#Repeat-While","title":"Repeat-While","kind":"section","url":"\/documentation\/the-swift-programming-language\/controlflow#Repeat-While"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/OptionalChaining#Accessing-Properties-Through-Optional-Chaining":{"type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/OptionalChaining#Accessing-Properties-Through-Optional-Chaining","title":"Accessing Properties Through Optional Chaining","url":"\/documentation\/the-swift-programming-language\/optionalchaining#Accessing-Properties-Through-Optional-Chaining","abstract":[],"kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Closures#Escaping-Closures":{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Closures#Escaping-Closures","type":"topic","url":"\/documentation\/the-swift-programming-language\/closures#Escaping-Closures","abstract":[],"title":"Escaping Closures","kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Declarations#Enumerations-with-Cases-of-Any-Type":{"kind":"section","url":"\/documentation\/the-swift-programming-language\/declarations#Enumerations-with-Cases-of-Any-Type","abstract":[],"type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#Enumerations-with-Cases-of-Any-Type","title":"Enumerations with Cases of Any Type"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Declarations#Actor-Declaration":{"abstract":[],"type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#Actor-Declaration","title":"Actor Declaration","kind":"section","url":"\/documentation\/the-swift-programming-language\/declarations#Actor-Declaration"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/StringsAndCharacters#Unicode-Scalar-Values":{"kind":"section","url":"\/documentation\/the-swift-programming-language\/stringsandcharacters#Unicode-Scalar-Values","abstract":[],"type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/StringsAndCharacters#Unicode-Scalar-Values","title":"Unicode Scalar Values"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Statements#Compiler-Control-Statements":{"abstract":[],"type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Statements#Compiler-Control-Statements","title":"Compiler Control Statements","kind":"section","url":"\/documentation\/the-swift-programming-language\/statements#Compiler-Control-Statements"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Types#Self-Type":{"kind":"section","url":"\/documentation\/the-swift-programming-language\/types#Self-Type","abstract":[],"type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Types#Self-Type","title":"Self Type"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Attributes#resultBuilder":{"type":"topic","kind":"section","url":"\/documentation\/the-swift-programming-language\/attributes#resultBuilder","abstract":[],"title":"resultBuilder","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Attributes#resultBuilder"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Closures#Closure-Expressions":{"kind":"section","url":"\/documentation\/the-swift-programming-language\/closures#Closure-Expressions","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Closures#Closure-Expressions","type":"topic","title":"Closure Expressions","abstract":[]},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Initialization#Initializer-Parameters-Without-Argument-Labels":{"abstract":[],"type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Initialization#Initializer-Parameters-Without-Argument-Labels","title":"Initializer Parameters Without Argument Labels","kind":"section","url":"\/documentation\/the-swift-programming-language\/initialization#Initializer-Parameters-Without-Argument-Labels"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Generics#Extending-a-Generic-Type":{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Generics#Extending-a-Generic-Type","type":"topic","title":"Extending a Generic Type","abstract":[],"url":"\/documentation\/the-swift-programming-language\/generics#Extending-a-Generic-Type","kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Declarations":{"kind":"article","abstract":[{"type":"text","text":"Introduce types, operators, variables, and other names and constructs."}],"type":"topic","url":"\/documentation\/the-swift-programming-language\/declarations","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations","role":"article","title":"Declarations"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/GenericParametersAndArguments":{"kind":"article","abstract":[{"type":"text","text":"Generalize declarations to abstract away concrete types."}],"type":"topic","url":"\/documentation\/the-swift-programming-language\/genericparametersandarguments","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/GenericParametersAndArguments","role":"article","title":"Generic Parameters and Arguments"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Expressions#Function-Call-Expression":{"kind":"section","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Expressions#Function-Call-Expression","title":"Function Call Expression","type":"topic","url":"\/documentation\/the-swift-programming-language\/expressions#Function-Call-Expression","abstract":[]},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/AdvancedOperators":{"url":"\/documentation\/the-swift-programming-language\/advancedoperators","title":"Advanced Operators","abstract":[{"type":"text","text":"Define custom operators, perform bitwise operations, and use builder syntax."}],"kind":"article","role":"article","type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AdvancedOperators"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/AdvancedOperators#Operator-Methods":{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AdvancedOperators#Operator-Methods","type":"topic","url":"\/documentation\/the-swift-programming-language\/advancedoperators#Operator-Methods","abstract":[],"title":"Operator Methods","kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/AdvancedOperators#Precedence-for-Custom-Infix-Operators":{"kind":"section","url":"\/documentation\/the-swift-programming-language\/advancedoperators#Precedence-for-Custom-Infix-Operators","abstract":[],"type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AdvancedOperators#Precedence-for-Custom-Infix-Operators","title":"Precedence for Custom Infix Operators"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Patterns":{"role":"article","url":"\/documentation\/the-swift-programming-language\/patterns","abstract":[{"text":"Match and destructure values.","type":"text"}],"title":"Patterns","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Patterns","type":"topic","kind":"article"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Subscripts#Type-Subscripts":{"abstract":[],"type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Subscripts#Type-Subscripts","title":"Type Subscripts","kind":"section","url":"\/documentation\/the-swift-programming-language\/subscripts#Type-Subscripts"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Initialization":{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Initialization","url":"\/documentation\/the-swift-programming-language\/initialization","title":"Initialization","kind":"article","type":"topic","role":"article","abstract":[{"text":"Set the initial values for a type’s stored properties and perform one-time setup.","type":"text"}]},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Attributes#Declaration-Attributes":{"type":"topic","url":"\/documentation\/the-swift-programming-language\/attributes#Declaration-Attributes","abstract":[],"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Attributes#Declaration-Attributes","kind":"section","title":"Declaration Attributes"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Statements#Line-Control-Statement":{"kind":"section","url":"\/documentation\/the-swift-programming-language\/statements#Line-Control-Statement","abstract":[],"type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Statements#Line-Control-Statement","title":"Line Control Statement"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Protocols#Class-Only-Protocols":{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Protocols#Class-Only-Protocols","url":"\/documentation\/the-swift-programming-language\/protocols#Class-Only-Protocols","abstract":[],"kind":"section","title":"Class-Only Protocols","type":"topic"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language":{"abstract":[],"role":"collection","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language","kind":"article","type":"topic","title":"The Swift Programming Language (5.9.2)","url":"\/documentation\/the-swift-programming-language"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Initialization#Required-Initializers":{"url":"\/documentation\/the-swift-programming-language\/initialization#Required-Initializers","title":"Required Initializers","kind":"section","type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Initialization#Required-Initializers","abstract":[]},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Declarations#Parameter-Modifiers":{"abstract":[],"type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#Parameter-Modifiers","title":"Parameter Modifiers","kind":"section","url":"\/documentation\/the-swift-programming-language\/declarations#Parameter-Modifiers"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Expressions#Implicit-Conversion-to-a-Pointer-Type":{"kind":"section","url":"\/documentation\/the-swift-programming-language\/expressions#Implicit-Conversion-to-a-Pointer-Type","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Expressions#Implicit-Conversion-to-a-Pointer-Type","type":"topic","title":"Implicit Conversion to a Pointer Type","abstract":[]},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/LexicalStructure#Regular-Expression-Literals":{"kind":"section","url":"\/documentation\/the-swift-programming-language\/lexicalstructure#Regular-Expression-Literals","abstract":[],"type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/LexicalStructure#Regular-Expression-Literals","title":"Regular Expression Literals"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Expressions#Explicit-Member-Expression":{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Expressions#Explicit-Member-Expression","abstract":[],"title":"Explicit Member Expression","kind":"section","type":"topic","url":"\/documentation\/the-swift-programming-language\/expressions#Explicit-Member-Expression"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/GuidedTour":{"url":"\/documentation\/the-swift-programming-language\/guidedtour","title":"A Swift Tour","abstract":[{"type":"text","text":"Explore the features and syntax of Swift."}],"kind":"article","role":"article","type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/GuidedTour"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Expressions#Type-Casting-Operators":{"abstract":[],"type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Expressions#Type-Casting-Operators","title":"Type-Casting Operators","kind":"section","url":"\/documentation\/the-swift-programming-language\/expressions#Type-Casting-Operators"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Inheritance#Overriding-Property-Getters-and-Setters":{"kind":"section","url":"\/documentation\/the-swift-programming-language\/inheritance#Overriding-Property-Getters-and-Setters","abstract":[],"type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Inheritance#Overriding-Property-Getters-and-Setters","title":"Overriding Property Getters and Setters"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Enumerations#Recursive-Enumerations":{"abstract":[],"type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Enumerations#Recursive-Enumerations","title":"Recursive Enumerations","kind":"section","url":"\/documentation\/the-swift-programming-language\/enumerations#Recursive-Enumerations"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Declarations#Function-Declaration":{"url":"\/documentation\/the-swift-programming-language\/declarations#Function-Declaration","title":"Function Declaration","type":"topic","abstract":[],"kind":"section","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#Function-Declaration"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Properties#Type-Properties":{"title":"Type Properties","url":"\/documentation\/the-swift-programming-language\/properties#Type-Properties","kind":"section","abstract":[],"type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Properties#Type-Properties"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/CollectionTypes#Sets":{"kind":"section","url":"\/documentation\/the-swift-programming-language\/collectiontypes#Sets","abstract":[],"type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/CollectionTypes#Sets","title":"Sets"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/TheBasics#Type-Annotations":{"type":"topic","url":"\/documentation\/the-swift-programming-language\/thebasics#Type-Annotations","abstract":[],"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/TheBasics#Type-Annotations","kind":"section","title":"Type Annotations"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Closures#Closures-Are-Reference-Types":{"abstract":[],"type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Closures#Closures-Are-Reference-Types","title":"Closures Are Reference Types","kind":"section","url":"\/documentation\/the-swift-programming-language\/closures#Closures-Are-Reference-Types"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/TheBasics#Implicitly-Unwrapped-Optionals":{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/TheBasics#Implicitly-Unwrapped-Optionals","url":"\/documentation\/the-swift-programming-language\/thebasics#Implicitly-Unwrapped-Optionals","abstract":[],"kind":"section","title":"Implicitly Unwrapped Optionals","type":"topic"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/OptionalChaining#Accessing-Subscripts-of-Optional-Type":{"kind":"section","url":"\/documentation\/the-swift-programming-language\/optionalchaining#Accessing-Subscripts-of-Optional-Type","abstract":[],"type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/OptionalChaining#Accessing-Subscripts-of-Optional-Type","title":"Accessing Subscripts of Optional Type"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Expressions#Key-Path-Expression":{"abstract":[],"type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Expressions#Key-Path-Expression","title":"Key-Path Expression","kind":"section","url":"\/documentation\/the-swift-programming-language\/expressions#Key-Path-Expression"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/LexicalStructure#Operators":{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/LexicalStructure#Operators","abstract":[],"type":"topic","kind":"section","title":"Operators","url":"\/documentation\/the-swift-programming-language\/lexicalstructure#Operators"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Types#Any-Type":{"kind":"section","url":"\/documentation\/the-swift-programming-language\/types#Any-Type","abstract":[],"type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Types#Any-Type","title":"Any Type"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Properties#Shorthand-Getter-Declaration":{"url":"\/documentation\/the-swift-programming-language\/properties#Shorthand-Getter-Declaration","kind":"section","title":"Shorthand Getter Declaration","abstract":[],"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Properties#Shorthand-Getter-Declaration","type":"topic"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Protocols#Conditionally-Conforming-to-a-Protocol":{"abstract":[],"type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Protocols#Conditionally-Conforming-to-a-Protocol","title":"Conditionally Conforming to a Protocol","kind":"section","url":"\/documentation\/the-swift-programming-language\/protocols#Conditionally-Conforming-to-a-Protocol"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Attributes#attached":{"title":"attached","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Attributes#attached","url":"\/documentation\/the-swift-programming-language\/attributes#attached","type":"topic","abstract":[],"kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/TheBasics#Printing-Constants-and-Variables":{"kind":"section","url":"\/documentation\/the-swift-programming-language\/thebasics#Printing-Constants-and-Variables","abstract":[],"type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/TheBasics#Printing-Constants-and-Variables","title":"Printing Constants and Variables"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/AutomaticReferenceCounting":{"abstract":[{"type":"text","text":"Model the lifetime of objects and their relationships."}],"url":"\/documentation\/the-swift-programming-language\/automaticreferencecounting","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AutomaticReferenceCounting","title":"Automatic Reference Counting","type":"topic","role":"article","kind":"article"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Properties#Property-Observers":{"kind":"section","url":"\/documentation\/the-swift-programming-language\/properties#Property-Observers","abstract":[],"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Properties#Property-Observers","title":"Property Observers","type":"topic"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Generics#Extensions-with-a-Generic-Where-Clause":{"abstract":[],"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Generics#Extensions-with-a-Generic-Where-Clause","title":"Extensions with a Generic Where Clause","kind":"section","url":"\/documentation\/the-swift-programming-language\/generics#Extensions-with-a-Generic-Where-Clause","type":"topic"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Generics#Associated-Types-with-a-Generic-Where-Clause":{"kind":"section","title":"Associated Types with a Generic Where Clause","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Generics#Associated-Types-with-a-Generic-Where-Clause","type":"topic","url":"\/documentation\/the-swift-programming-language\/generics#Associated-Types-with-a-Generic-Where-Clause","abstract":[]},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Expressions#Implicit-Member-Expression":{"url":"\/documentation\/the-swift-programming-language\/expressions#Implicit-Member-Expression","title":"Implicit Member Expression","type":"topic","abstract":[],"kind":"section","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Expressions#Implicit-Member-Expression"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Generics#Contextual-Where-Clauses":{"abstract":[],"type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Generics#Contextual-Where-Clauses","title":"Contextual Where Clauses","kind":"section","url":"\/documentation\/the-swift-programming-language\/generics#Contextual-Where-Clauses"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Concurrency#Sendable-Types":{"kind":"section","url":"\/documentation\/the-swift-programming-language\/concurrency#Sendable-Types","abstract":[],"type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Concurrency#Sendable-Types","title":"Sendable Types"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/TheBasics":{"kind":"article","abstract":[{"type":"text","text":"Work with common kinds of data and write basic syntax."}],"type":"topic","url":"\/documentation\/the-swift-programming-language\/thebasics","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/TheBasics","role":"article","title":"The Basics"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/CollectionTypes#Mutability-of-Collections":{"abstract":[],"type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/CollectionTypes#Mutability-of-Collections","title":"Mutability of Collections","kind":"section","url":"\/documentation\/the-swift-programming-language\/collectiontypes#Mutability-of-Collections"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Protocols#Checking-for-Protocol-Conformance":{"title":"Checking for Protocol Conformance","url":"\/documentation\/the-swift-programming-language\/protocols#Checking-for-Protocol-Conformance","abstract":[],"type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Protocols#Checking-for-Protocol-Conformance","kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Types#Function-Type":{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Types#Function-Type","url":"\/documentation\/the-swift-programming-language\/types#Function-Type","abstract":[],"kind":"section","title":"Function Type","type":"topic"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/BasicOperators#Range-Operators":{"type":"topic","url":"\/documentation\/the-swift-programming-language\/basicoperators#Range-Operators","abstract":[],"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/BasicOperators#Range-Operators","kind":"section","title":"Range Operators"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Statements#Defer-Statement":{"kind":"section","url":"\/documentation\/the-swift-programming-language\/statements#Defer-Statement","abstract":[],"type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Statements#Defer-Statement","title":"Defer Statement"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Expressions#Literal-Expression":{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Expressions#Literal-Expression","abstract":[],"title":"Literal Expression","kind":"section","type":"topic","url":"\/documentation\/the-swift-programming-language\/expressions#Literal-Expression"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/TypeCasting#Type-Casting-for-Any-and-AnyObject":{"url":"\/documentation\/the-swift-programming-language\/typecasting#Type-Casting-for-Any-and-AnyObject","abstract":[],"title":"Type Casting for Any and AnyObject","kind":"section","type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/TypeCasting#Type-Casting-for-Any-and-AnyObject"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Attributes#main":{"abstract":[],"type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Attributes#main","title":"main","kind":"section","url":"\/documentation\/the-swift-programming-language\/attributes#main"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Enumerations#Iterating-over-Enumeration-Cases":{"kind":"section","url":"\/documentation\/the-swift-programming-language\/enumerations#Iterating-over-Enumeration-Cases","abstract":[],"type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Enumerations#Iterating-over-Enumeration-Cases","title":"Iterating over Enumeration Cases"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Declarations#Type-Variable-Properties":{"abstract":[],"type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#Type-Variable-Properties","title":"Type Variable Properties","kind":"section","url":"\/documentation\/the-swift-programming-language\/declarations#Type-Variable-Properties"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Statements#While-Statement":{"kind":"section","url":"\/documentation\/the-swift-programming-language\/statements#While-Statement","abstract":[],"type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Statements#While-Statement","title":"While Statement"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Expressions#Optional-Chaining-Expression":{"abstract":[],"type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Expressions#Optional-Chaining-Expression","title":"Optional-Chaining Expression","kind":"section","url":"\/documentation\/the-swift-programming-language\/expressions#Optional-Chaining-Expression"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Statements#Break-Statement":{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Statements#Break-Statement","abstract":[],"title":"Break Statement","kind":"section","type":"topic","url":"\/documentation\/the-swift-programming-language\/statements#Break-Statement"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/ControlFlow#Deferred-Actions":{"type":"topic","url":"\/documentation\/the-swift-programming-language\/controlflow#Deferred-Actions","abstract":[],"title":"Deferred Actions","kind":"section","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/ControlFlow#Deferred-Actions"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/OptionalChaining":{"type":"topic","kind":"article","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/OptionalChaining","role":"article","url":"\/documentation\/the-swift-programming-language\/optionalchaining","abstract":[{"type":"text","text":"Access members of an optional value without unwrapping."}],"title":"Optional Chaining"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Initialization#Overriding-a-Failable-Initializer":{"kind":"section","url":"\/documentation\/the-swift-programming-language\/initialization#Overriding-a-Failable-Initializer","abstract":[],"type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Initialization#Overriding-a-Failable-Initializer","title":"Overriding a Failable Initializer"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Closures#Autoclosures":{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Closures#Autoclosures","abstract":[],"title":"Autoclosures","kind":"section","type":"topic","url":"\/documentation\/the-swift-programming-language\/closures#Autoclosures"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Protocols":{"abstract":[{"type":"text","text":"Define requirements that conforming types must implement."}],"url":"\/documentation\/the-swift-programming-language\/protocols","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Protocols","title":"Protocols","type":"topic","role":"article","kind":"article"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Initialization#Memberwise-Initializers-for-Structure-Types":{"abstract":[],"kind":"section","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Initialization#Memberwise-Initializers-for-Structure-Types","type":"topic","title":"Memberwise Initializers for Structure Types","url":"\/documentation\/the-swift-programming-language\/initialization#Memberwise-Initializers-for-Structure-Types"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/TheBasics#Debugging-with-Assertions":{"abstract":[],"type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/TheBasics#Debugging-with-Assertions","title":"Debugging with Assertions","kind":"section","url":"\/documentation\/the-swift-programming-language\/thebasics#Debugging-with-Assertions"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Generics#Generic-Where-Clauses":{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Generics#Generic-Where-Clauses","kind":"section","type":"topic","url":"\/documentation\/the-swift-programming-language\/generics#Generic-Where-Clauses","abstract":[],"title":"Generic Where Clauses"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Statements#Conditional-Compilation-Block":{"kind":"section","url":"\/documentation\/the-swift-programming-language\/statements#Conditional-Compilation-Block","abstract":[],"type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Statements#Conditional-Compilation-Block","title":"Conditional Compilation Block"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Types#Metatype-Type":{"abstract":[],"type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Types#Metatype-Type","title":"Metatype Type","kind":"section","url":"\/documentation\/the-swift-programming-language\/types#Metatype-Type"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/LexicalStructure":{"url":"\/documentation\/the-swift-programming-language\/lexicalstructure","title":"Lexical Structure","abstract":[{"type":"text","text":"Use the lowest-level components of the syntax."}],"kind":"article","role":"article","type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/LexicalStructure"}}}