{"kind":"article","hierarchy":{"paths":[["doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language"]]},"schemaVersion":{"patch":0,"major":0,"minor":3},"primaryContentSections":[{"kind":"content","content":[{"inlineContent":[{"inlineContent":[{"text":"2023-12-11","type":"text"}],"type":"strong"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"Updated for Swift 5.9.2."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Added information about the ","type":"text"},{"code":"borrowing","type":"codeVoice"},{"type":"text","text":" and "},{"code":"consuming","type":"codeVoice"},{"text":" modifiers","type":"text"},{"type":"text","text":" "},{"type":"text","text":"to the "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#Parameter-Modifiers","isActive":true,"type":"reference"},{"type":"text","text":" section."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Added information in ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/TheBasics#Declaring-Constants-and-Variables"},{"type":"text","text":" "},{"text":"about setting a constant’s value after its declaration.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Added more information about tasks, task groups, and task cancellation"},{"text":" ","type":"text"},{"type":"text","text":"to the "},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Concurrency","isActive":true},{"text":" chapter.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Added information in the "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Macros","isActive":true,"type":"reference"},{"type":"text","text":" chapter"},{"type":"text","text":" "},{"type":"text","text":"about implementing macros in an existing Swift package."}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Updated the "},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Attributes#attached","isActive":true},{"text":" section,","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"now that extension macros have replaced conformance macros."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Added the "},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Attributes#backDeployed","isActive":true},{"text":" section","type":"text"},{"type":"text","text":" "},{"type":"text","text":"with information about back deployment."}]}]}]},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"2023-09-18"}]}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"Updated for Swift 5.9.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Added information about "},{"code":"if","type":"codeVoice"},{"type":"text","text":" and "},{"type":"codeVoice","code":"switch"},{"type":"text","text":" expressions"},{"type":"text","text":" "},{"text":"to the ","type":"text"},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/ControlFlow","isActive":true,"type":"reference"},{"text":" chapter","type":"text"},{"text":" ","type":"text"},{"text":"and the ","type":"text"},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Expressions#Conditional-Expression","isActive":true},{"text":" section.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Added the "},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Macros"},{"text":" chapter,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"with information about generating code at compile time."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Expanded the discussion of optionals in "},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/TheBasics","isActive":true},{"type":"text","text":"."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Added an example of concurrency to ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/GuidedTour"},{"text":".","type":"text"}]}]},{"content":[{"inlineContent":[{"text":"Added information about boxed protocol types","type":"text"},{"text":" ","type":"text"},{"text":"to the ","type":"text"},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/OpaqueTypes","isActive":true},{"text":" chapter.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Added information about the ","type":"text"},{"code":"buildPartialBlock(first:)","type":"codeVoice"},{"type":"text","text":" "},{"text":"and ","type":"text"},{"type":"codeVoice","code":"buildPartialBlock(accumulated:next:)"},{"type":"text","text":" methods"},{"type":"text","text":" "},{"type":"text","text":"to the "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Attributes#Result-Transformations","type":"reference","isActive":true},{"text":" section.","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Added visionOS to the lists of platforms in"},{"type":"text","text":" "},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Attributes#available"},{"text":" ","type":"text"},{"text":"and ","type":"text"},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Statements#Conditional-Compilation-Block","isActive":true},{"type":"text","text":"."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Formatted the formal grammar to use blank lines for grouping."}]}]}]},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"2023-03-30"}]}]},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"Updated for Swift 5.8."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Added the "},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/ControlFlow#Deferred-Actions","isActive":true},{"type":"text","text":" section,"},{"type":"text","text":" "},{"text":"showing ","type":"text"},{"type":"codeVoice","code":"defer"},{"text":" outside of error handling.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Adopted Swift-DocC for publication."}]}]},{"content":[{"inlineContent":[{"text":"Minor corrections and additions throughout.","type":"text"}],"type":"paragraph"}]}],"type":"unorderedList"},{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"2022-09-12","type":"text"}],"type":"strong"}]},{"items":[{"content":[{"inlineContent":[{"text":"Updated for Swift 5.7.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Added the "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Concurrency#Sendable-Types","isActive":true,"type":"reference"},{"type":"text","text":" section,"},{"text":" ","type":"text"},{"type":"text","text":"with information about sending data between actors and tasks,"},{"type":"text","text":" "},{"type":"text","text":"and added information about the "},{"type":"codeVoice","code":"@Sendable"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"@unchecked"},{"text":" attributes","type":"text"},{"text":" ","type":"text"},{"text":"to the ","type":"text"},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Attributes#Sendable","isActive":true},{"text":" and ","type":"text"},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Attributes#unchecked","type":"reference","isActive":true},{"text":" sections.","type":"text"}]}]},{"content":[{"inlineContent":[{"text":"Added the ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/LexicalStructure#Regular-Expression-Literals"},{"text":" section","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"with information about creating a regular expression."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Added information about the short form of "},{"type":"codeVoice","code":"if"},{"type":"text","text":"-"},{"type":"codeVoice","code":"let"},{"type":"text","text":" "},{"text":"to the ","type":"text"},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/TheBasics#Optional-Binding","isActive":true},{"text":" section.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Added information about "},{"type":"codeVoice","code":"#unavailable"},{"type":"text","text":" "},{"text":"to the ","type":"text"},{"isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/ControlFlow#Checking-API-Availability","type":"reference"},{"text":" section.","type":"text"}]}]}],"type":"unorderedList"},{"inlineContent":[{"inlineContent":[{"type":"text","text":"2022-03-14"}],"type":"strong"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Updated for Swift 5.6."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Updated the "},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Expressions#Explicit-Member-Expression","isActive":true},{"type":"text","text":" section"},{"text":" ","type":"text"},{"text":"with information about using ","type":"text"},{"code":"#if","type":"codeVoice"},{"text":" ","type":"text"},{"text":"around chained method calls and other postfix expressions.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Updated the visual styling of figures throughout.","type":"text"}]}]}],"type":"unorderedList"},{"inlineContent":[{"inlineContent":[{"text":"2021-09-20","type":"text"}],"type":"strong"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"Updated for Swift 5.5.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Added information about asynchronous functions, tasks, and actors"},{"text":" ","type":"text"},{"type":"text","text":"to the "},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Concurrency"},{"text":" chapter,","type":"text"},{"type":"text","text":" "},{"text":"and to the ","type":"text"},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#Actor-Declaration","type":"reference","isActive":true},{"type":"text","text":","},{"type":"text","text":" "},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#Asynchronous-Functions-and-Methods","isActive":true},{"text":",","type":"text"},{"type":"text","text":" "},{"text":"and ","type":"text"},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Expressions#Await-Operator","isActive":true,"type":"reference"},{"text":" sections.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Updated the "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/LexicalStructure#Identifiers","type":"reference","isActive":true},{"type":"text","text":" section"},{"text":" ","type":"text"},{"type":"text","text":"with information about identifiers that start with an underscore."}]}]}]},{"inlineContent":[{"inlineContent":[{"type":"text","text":"2021-04-26"}],"type":"strong"}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"text":"Updated for Swift 5.4.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Added the "},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AdvancedOperators#Result-Builders"},{"type":"text","text":" "},{"type":"text","text":"and "},{"isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Attributes#resultBuilder","type":"reference"},{"text":" sections","type":"text"},{"type":"text","text":" "},{"text":"with information about result builders.","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Added the "},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Expressions#Implicit-Conversion-to-a-Pointer-Type"},{"type":"text","text":" section"},{"text":" ","type":"text"},{"type":"text","text":"with information about how in-out parameters"},{"text":" ","type":"text"},{"text":"can be implicitly converted to unsafe pointers in a function call.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Updated the ","type":"text"},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Functions#Variadic-Parameters","isActive":true},{"text":" ","type":"text"},{"text":"and ","type":"text"},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#Function-Declaration","isActive":true},{"type":"text","text":" sections,"},{"type":"text","text":" "},{"text":"now that a function can have multiple variadic parameters.","type":"text"}]}]},{"content":[{"inlineContent":[{"text":"Updated the ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Expressions#Implicit-Member-Expression"},{"text":" section,","type":"text"},{"type":"text","text":" "},{"text":"now that implicit member expressions can be chained together.","type":"text"}],"type":"paragraph"}]}],"type":"unorderedList"},{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"2020-09-16"}],"type":"strong"}]},{"items":[{"content":[{"inlineContent":[{"text":"Updated for Swift 5.3.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Added information about multiple trailing closures"},{"type":"text","text":" "},{"type":"text","text":"to the "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Closures#Trailing-Closures","type":"reference","isActive":true},{"text":" section,","type":"text"},{"type":"text","text":" "},{"text":"and added information about how trailing closures are matched to parameters","type":"text"},{"type":"text","text":" "},{"text":"to the ","type":"text"},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Expressions#Function-Call-Expression","isActive":true,"type":"reference"},{"type":"text","text":" section."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Added information about synthesized implementations","type":"text"},{"text":" ","type":"text"},{"text":"of ","type":"text"},{"type":"codeVoice","code":"Comparable"},{"text":" for enumerations","type":"text"},{"type":"text","text":" "},{"type":"text","text":"to the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Protocols#Adopting-a-Protocol-Using-a-Synthesized-Implementation"},{"text":" section.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Added the ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Generics#Contextual-Where-Clauses"},{"type":"text","text":" section"},{"type":"text","text":" "},{"type":"text","text":"now that you can write a generic "},{"type":"codeVoice","code":"where"},{"text":" clause in more places.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Added the "},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AutomaticReferenceCounting#Unowned-Optional-References","isActive":true},{"type":"text","text":" section"},{"type":"text","text":" "},{"text":"with information about using unowned references with optional values.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Added information about the "},{"code":"@main","type":"codeVoice"},{"type":"text","text":" attribute"},{"text":" ","type":"text"},{"text":"to the ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Attributes#main"},{"text":" section.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Added "},{"code":"#filePath","type":"codeVoice"},{"type":"text","text":" to the "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Expressions#Literal-Expression","type":"reference","isActive":true},{"type":"text","text":" section,"},{"type":"text","text":" "},{"text":"and updated the discussion of ","type":"text"},{"type":"codeVoice","code":"#file"},{"text":".","type":"text"}]}]},{"content":[{"inlineContent":[{"text":"Updated the ","type":"text"},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Closures#Escaping-Closures","isActive":true},{"text":" section,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"now that closures can refer to "},{"code":"self","type":"codeVoice"},{"type":"text","text":" implicitly in more scenarios."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Updated the "},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/ErrorHandling#Handling-Errors-Using-Do-Catch"},{"text":" ","type":"text"},{"text":"and ","type":"text"},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Statements#Do-Statement","isActive":true},{"type":"text","text":" sections,"},{"text":" ","type":"text"},{"type":"text","text":"now that a "},{"type":"codeVoice","code":"catch"},{"text":" clause can match against multiple errors.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Added more information about ","type":"text"},{"code":"Any","type":"codeVoice"},{"type":"text","text":" "},{"text":"and moved it into the new ","type":"text"},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Types#Any-Type","isActive":true},{"text":" section.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Updated the ","type":"text"},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Properties#Property-Observers","isActive":true},{"type":"text","text":" section,"},{"type":"text","text":" "},{"type":"text","text":"now that lazy properties can have observers."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Updated the "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#Protocol-Declaration","isActive":true,"type":"reference"},{"text":" section,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"now that members of an enumeration can satisfy protocol requirements."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Updated the "},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#Stored-Variable-Observers-and-Property-Observers"},{"type":"text","text":" section"},{"text":" ","type":"text"},{"text":"to describe when the getter is called before the observer.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Updated the "},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/MemorySafety"},{"type":"text","text":" chapter"},{"text":" ","type":"text"},{"text":"to mention atomic operations.","type":"text"}]}]}],"type":"unorderedList"},{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"2020-03-24"}]}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Updated for Swift 5.2."}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Added information about passing a key path instead of a closure"},{"text":" ","type":"text"},{"type":"text","text":"to the "},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Expressions#Key-Path-Expression"},{"type":"text","text":" section."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Added the "},{"isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#Methods-with-Special-Names","type":"reference"},{"type":"text","text":" section"},{"text":" ","type":"text"},{"type":"text","text":"with information about syntactic sugar the lets instances of"},{"type":"text","text":" "},{"type":"text","text":"classes, structures, and enumerations be used with function call syntax."}]}]},{"content":[{"inlineContent":[{"text":"Updated the ","type":"text"},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Subscripts#Subscript-Options","isActive":true,"type":"reference"},{"type":"text","text":" section,"},{"type":"text","text":" "},{"type":"text","text":"now that subscripts support parameters with default values."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Updated the "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Types#Self-Type","isActive":true,"type":"reference"},{"text":" section,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"now that the "},{"type":"codeVoice","code":"Self"},{"type":"text","text":" can be used in more contexts."}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Updated the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/TheBasics#Implicitly-Unwrapped-Optionals"},{"text":" section","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"to make it clearer that an implicitly unwrapped optional value"},{"type":"text","text":" "},{"type":"text","text":"can be used as either an optional or non-optional value."}],"type":"paragraph"}]}]},{"inlineContent":[{"type":"strong","inlineContent":[{"text":"2019-09-10","type":"text"}]}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"Updated for Swift 5.1."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Added information about functions"},{"text":" ","type":"text"},{"type":"text","text":"that specify a protocol that their return value conforms to,"},{"type":"text","text":" "},{"type":"text","text":"instead of providing a specific named return type,"},{"type":"text","text":" "},{"type":"text","text":"to the "},{"isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/OpaqueTypes","type":"reference"},{"type":"text","text":" chapter."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Added information about property wrappers","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"to the "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Properties#Property-Wrappers","type":"reference","isActive":true},{"type":"text","text":" section."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Added information about enumerations and structures"},{"type":"text","text":" "},{"type":"text","text":"that are frozen for library evolution"},{"text":" ","type":"text"},{"text":"to the ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Attributes#frozen"},{"text":" section.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Added the "},{"isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Functions#Functions-With-an-Implicit-Return","type":"reference"},{"type":"text","text":" "},{"text":"and ","type":"text"},{"isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Properties#Shorthand-Getter-Declaration","type":"reference"},{"type":"text","text":" sections"},{"type":"text","text":" "},{"text":"with information about functions that omit ","type":"text"},{"type":"codeVoice","code":"return"},{"type":"text","text":"."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Added information about using subscripts on types","type":"text"},{"type":"text","text":" "},{"type":"text","text":"to the "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Subscripts#Type-Subscripts","type":"reference","isActive":true},{"type":"text","text":" section."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Updated the ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Patterns#Enumeration-Case-Pattern"},{"type":"text","text":" section,"},{"type":"text","text":" "},{"type":"text","text":"now that an enumeration case pattern can match an optional value."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Updated the "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Initialization#Memberwise-Initializers-for-Structure-Types","isActive":true,"type":"reference"},{"type":"text","text":" section,"},{"type":"text","text":" "},{"text":"now that memberwise initializers support","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"omitting parameters for properties that have a default value."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Added information about dynamic members"},{"text":" ","type":"text"},{"text":"that are looked up by key path at runtime","type":"text"},{"type":"text","text":" "},{"text":"to the ","type":"text"},{"isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Attributes#dynamicMemberLookup","type":"reference"},{"type":"text","text":" section."}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Added "},{"type":"codeVoice","code":"macCatalyst"},{"type":"text","text":" to the list of target environments"},{"type":"text","text":" "},{"type":"text","text":"in "},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Statements#Conditional-Compilation-Block"},{"type":"text","text":"."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Updated the "},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Types#Self-Type","isActive":true},{"text":" section,","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"now that "},{"code":"Self","type":"codeVoice"},{"text":" can be used to refer to the type","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"introduced by the current class, structure, or enumeration declaration."}],"type":"paragraph"}]}],"type":"unorderedList"},{"inlineContent":[{"inlineContent":[{"text":"2019-03-25","type":"text"}],"type":"strong"}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"text":"Updated for Swift 5.0.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Added the ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/StringsAndCharacters#Extended-String-Delimiters"},{"type":"text","text":" section"},{"text":" ","type":"text"},{"type":"text","text":"and updated the "},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/LexicalStructure#String-Literals"},{"text":" section","type":"text"},{"type":"text","text":" "},{"text":"with information about extended string delimiters.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Added the ","type":"text"},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Attributes#dynamicCallable","isActive":true},{"type":"text","text":" section"},{"text":" ","type":"text"},{"type":"text","text":"with information about dynamically calling instances as functions"},{"type":"text","text":" "},{"type":"text","text":"using the "},{"type":"codeVoice","code":"dynamicCallable"},{"type":"text","text":" attribute."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Added the ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Attributes#unknown"},{"text":" and ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Statements#Switching-Over-Future-Enumeration-Cases"},{"type":"text","text":" sections"},{"type":"text","text":" "},{"text":"with information about handling future enumeration cases","type":"text"},{"type":"text","text":" "},{"type":"text","text":"in switch statements using"},{"text":" ","type":"text"},{"type":"text","text":"the "},{"type":"codeVoice","code":"unknown"},{"type":"text","text":" switch case attribute."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Added information about the identity key path ("},{"type":"codeVoice","code":"\\.self"},{"type":"text","text":")"},{"text":" ","type":"text"},{"type":"text","text":"to the "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Expressions#Key-Path-Expression","isActive":true,"type":"reference"},{"type":"text","text":" section."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Added information about using the less than (","type":"text"},{"type":"codeVoice","code":"<"},{"text":") operator","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"in platform conditions to the "},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Statements#Conditional-Compilation-Block","isActive":true},{"type":"text","text":" section."}]}]}],"type":"unorderedList"},{"inlineContent":[{"type":"strong","inlineContent":[{"text":"2018-09-17","type":"text"}]}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"text":"Updated for Swift 4.2.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Added information about accessing all of an enumeration’s cases"},{"type":"text","text":" "},{"text":"to the ","type":"text"},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Enumerations#Iterating-over-Enumeration-Cases","isActive":true},{"text":" section.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Added information about ","type":"text"},{"type":"codeVoice","code":"#error"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"#warning"},{"text":" ","type":"text"},{"type":"text","text":"to the "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Statements#Compile-Time-Diagnostic-Statement","type":"reference","isActive":true},{"type":"text","text":" section."}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Added information about inlining"},{"type":"text","text":" "},{"type":"text","text":"to the "},{"isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Attributes#Declaration-Attributes","type":"reference"},{"type":"text","text":" section"},{"text":" ","type":"text"},{"text":"under the ","type":"text"},{"type":"codeVoice","code":"inlinable"},{"type":"text","text":" and  "},{"type":"codeVoice","code":"usableFromInline"},{"type":"text","text":" attributes."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Added information about members that are looked up by name at runtime"},{"type":"text","text":" "},{"type":"text","text":"to the "},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Attributes#Declaration-Attributes"},{"type":"text","text":" section"},{"text":" ","type":"text"},{"text":"under the ","type":"text"},{"code":"dynamicMemberLookup","type":"codeVoice"},{"text":" attribute.","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Added information about the "},{"code":"requires_stored_property_inits","type":"codeVoice"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"warn_unqualified_access"},{"type":"text","text":" attributes"},{"type":"text","text":" "},{"text":"to the ","type":"text"},{"isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Attributes#Declaration-Attributes","type":"reference"},{"text":" section.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Added information about how to conditionally compile code","type":"text"},{"type":"text","text":" "},{"type":"text","text":"depending on the Swift compiler version being used"},{"type":"text","text":" "},{"text":"to the ","type":"text"},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Statements#Conditional-Compilation-Block","isActive":true},{"text":" section.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Added information about "},{"code":"#dsohandle","type":"codeVoice"},{"text":" ","type":"text"},{"type":"text","text":"to the "},{"isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Expressions#Literal-Expression","type":"reference"},{"type":"text","text":" section."}]}]}],"type":"unorderedList"},{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"2018-03-29","type":"text"}],"type":"strong"}]},{"items":[{"content":[{"inlineContent":[{"text":"Updated for Swift 4.1.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Added information about synthesized implementations of equivalence operators"},{"type":"text","text":" "},{"text":"to the ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AdvancedOperators#Equivalence-Operators"},{"type":"text","text":" section."}]}]},{"content":[{"inlineContent":[{"text":"Added information about conditional protocol conformance","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"to the "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#Extension-Declaration","type":"reference","isActive":true},{"type":"text","text":" section"},{"type":"text","text":" "},{"type":"text","text":"of the "},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations"},{"type":"text","text":" chapter,"},{"text":" ","type":"text"},{"type":"text","text":"and to the "},{"isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Protocols#Conditionally-Conforming-to-a-Protocol","type":"reference"},{"type":"text","text":" section"},{"text":" ","type":"text"},{"type":"text","text":"of the "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Protocols","isActive":true,"type":"reference"},{"text":" chapter.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Added information about recursive protocol constraints","type":"text"},{"type":"text","text":" "},{"text":"to the ","type":"text"},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Generics#Using-a-Protocol-in-Its-Associated-Types-Constraints","isActive":true},{"text":" section.","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Added information about"},{"text":" ","type":"text"},{"type":"text","text":"the "},{"code":"canImport()","type":"codeVoice"},{"type":"text","text":" and "},{"code":"targetEnvironment()","type":"codeVoice"},{"type":"text","text":" platform conditions"},{"text":" ","type":"text"},{"type":"text","text":"to "},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Statements#Conditional-Compilation-Block"},{"type":"text","text":"."}],"type":"paragraph"}]}],"type":"unorderedList"},{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"2017-12-04"}]}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Updated for Swift 4.0.3."}]}]},{"content":[{"inlineContent":[{"text":"Updated the ","type":"text"},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Expressions#Key-Path-Expression","isActive":true},{"type":"text","text":" section,"},{"type":"text","text":" "},{"type":"text","text":"now that key paths support subscript components."}],"type":"paragraph"}]}],"type":"unorderedList"},{"inlineContent":[{"type":"strong","inlineContent":[{"text":"2017-09-19","type":"text"}]}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Updated for Swift 4.0.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Added information about exclusive access to memory","type":"text"},{"type":"text","text":" "},{"type":"text","text":"to the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/MemorySafety"},{"type":"text","text":" chapter."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Added the ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Generics#Associated-Types-with-a-Generic-Where-Clause"},{"text":" section,","type":"text"},{"text":" ","type":"text"},{"text":"now that you can use generic ","type":"text"},{"type":"codeVoice","code":"where"},{"text":" clauses","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"to constrain associated types."}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Added information about multiline string literals"},{"text":" ","type":"text"},{"type":"text","text":"to the "},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/StringsAndCharacters#String-Literals"},{"type":"text","text":" section"},{"type":"text","text":" "},{"text":"of the ","type":"text"},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/StringsAndCharacters","isActive":true},{"type":"text","text":" chapter,"},{"text":" ","type":"text"},{"type":"text","text":"and to the "},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/LexicalStructure#String-Literals","isActive":true},{"text":" section","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"of the "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/LexicalStructure","isActive":true,"type":"reference"},{"type":"text","text":" chapter."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Updated the discussion of the "},{"type":"codeVoice","code":"objc"},{"type":"text","text":" attribute"},{"text":" ","type":"text"},{"text":"in ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Attributes#Declaration-Attributes"},{"text":",","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"now that this attribute is inferred in fewer places."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Added the "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Generics#Generic-Subscripts","isActive":true,"type":"reference"},{"text":" section,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"now that subscripts can be generic."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Updated the discussion"},{"type":"text","text":" "},{"type":"text","text":"in the "},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Protocols#Protocol-Composition","isActive":true},{"type":"text","text":" section"},{"type":"text","text":" "},{"type":"text","text":"of the "},{"isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Protocols","type":"reference"},{"text":" chapter,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"and in the "},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Types#Protocol-Composition-Type","isActive":true},{"type":"text","text":" section"},{"type":"text","text":" "},{"text":"of the ","type":"text"},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Types","type":"reference","isActive":true},{"type":"text","text":" chapter,"},{"text":" ","type":"text"},{"type":"text","text":"now that protocol composition types can contain a superclass requirement."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Updated the discussion of protocol extensions"},{"text":" ","type":"text"},{"text":"in ","type":"text"},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#Extension-Declaration","type":"reference","isActive":true},{"text":" ","type":"text"},{"type":"text","text":"now that "},{"type":"codeVoice","code":"final"},{"type":"text","text":" isn’t allowed in them."}]}]},{"content":[{"inlineContent":[{"text":"Added information about preconditions and fatal errors","type":"text"},{"type":"text","text":" "},{"type":"text","text":"to the "},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/TheBasics#Assertions-and-Preconditions"},{"type":"text","text":" section."}],"type":"paragraph"}]}]},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"2017-03-27","type":"text"}]}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Updated for Swift 3.1."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Added the "},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Generics#Extensions-with-a-Generic-Where-Clause"},{"type":"text","text":" section"},{"text":" ","type":"text"},{"type":"text","text":"with information about extensions that include requirements."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Added examples of iterating over a range","type":"text"},{"text":" ","type":"text"},{"text":"to the ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/ControlFlow#For-In-Loops"},{"text":" section.","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Added an example of failable numeric conversions"},{"type":"text","text":" "},{"type":"text","text":"to the "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Initialization#Failable-Initializers","isActive":true,"type":"reference"},{"type":"text","text":" section."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Added information to the ","type":"text"},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Attributes#Declaration-Attributes","isActive":true},{"type":"text","text":" section"},{"type":"text","text":" "},{"text":"about using the ","type":"text"},{"code":"available","type":"codeVoice"},{"text":" attribute with a Swift language version.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Updated the discussion in the ","type":"text"},{"isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Types#Function-Type","type":"reference"},{"type":"text","text":" section"},{"text":" ","type":"text"},{"text":"to note that argument labels aren’t allowed when writing a function type.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Updated the discussion of Swift language version numbers"},{"type":"text","text":" "},{"text":"in the ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Statements#Conditional-Compilation-Block"},{"text":" section,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"now that an optional patch number is allowed."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Updated the discussion","type":"text"},{"type":"text","text":" "},{"text":"in the ","type":"text"},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Types#Function-Type","type":"reference","isActive":true},{"type":"text","text":" section,"},{"type":"text","text":" "},{"type":"text","text":"now that Swift distinguishes between functions that take multiple parameters"},{"type":"text","text":" "},{"type":"text","text":"and functions that take a single parameter of a tuple type."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Removed the Dynamic Type Expression section"},{"text":" ","type":"text"},{"type":"text","text":"from the "},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Expressions"},{"text":" chapter,","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"now that "},{"type":"codeVoice","code":"type(of:)"},{"text":" is a Swift standard library function.","type":"text"}]}]}],"type":"unorderedList"},{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"2016-10-27"}]}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Updated for Swift 3.0.1.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Updated the discussion of weak and unowned references"},{"type":"text","text":" "},{"type":"text","text":"in the "},{"isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AutomaticReferenceCounting","type":"reference"},{"text":" chapter.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Added information about the "},{"type":"codeVoice","code":"unowned"},{"type":"text","text":", "},{"code":"unowned(safe)","type":"codeVoice"},{"type":"text","text":", and "},{"code":"unowned(unsafe)","type":"codeVoice"},{"text":" ","type":"text"},{"type":"text","text":"declaration modifiers"},{"type":"text","text":" "},{"text":"in the ","type":"text"},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#Declaration-Modifiers","isActive":true,"type":"reference"},{"type":"text","text":" section."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Added a note to the "},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/TypeCasting#Type-Casting-for-Any-and-AnyObject"},{"text":" section","type":"text"},{"type":"text","text":" "},{"text":"about using an optional value when a value of type ","type":"text"},{"code":"Any","type":"codeVoice"},{"text":" is expected.","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Updated the "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Expressions","isActive":true,"type":"reference"},{"type":"text","text":" chapter"},{"type":"text","text":" "},{"type":"text","text":"to separate the discussion of parenthesized expressions and tuple expressions."}],"type":"paragraph"}]}]},{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"2016-09-13"}]}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Updated for Swift 3.0.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Updated the discussion of functions in the "},{"isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Functions","type":"reference"},{"type":"text","text":" chapter"},{"type":"text","text":" "},{"text":"and the ","type":"text"},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#Function-Declaration","isActive":true,"type":"reference"},{"text":" section to note that","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"all parameters get an argument label by default."}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Updated the discussion of operators"},{"text":" ","type":"text"},{"text":"in the ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AdvancedOperators"},{"type":"text","text":" chapter,"},{"type":"text","text":" "},{"type":"text","text":"now that you implement them as type methods instead of as global functions."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Added information about the ","type":"text"},{"code":"open","type":"codeVoice"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"fileprivate"},{"type":"text","text":" access-level modifiers"},{"text":" ","type":"text"},{"type":"text","text":"to the "},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AccessControl","isActive":true},{"type":"text","text":" chapter."}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Updated the discussion of "},{"type":"codeVoice","code":"inout"},{"text":" in the ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#Function-Declaration"},{"text":" section","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"to note that it appears in front of a parameter’s type"},{"type":"text","text":" "},{"type":"text","text":"instead of in front of a parameter’s name."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Updated the discussion of the ","type":"text"},{"type":"codeVoice","code":"@noescape"},{"type":"text","text":" and "},{"type":"codeVoice","code":"@autoclosure"},{"type":"text","text":" attributes"},{"type":"text","text":" "},{"type":"text","text":"in the "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Closures#Escaping-Closures","isActive":true,"type":"reference"},{"text":" and ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Closures#Autoclosures"},{"text":" sections","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"and the "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Attributes","isActive":true,"type":"reference"},{"text":" chapter","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"now that they’re type attributes, rather than declaration attributes."}]}]},{"content":[{"inlineContent":[{"text":"Added information about operator precedence groups","type":"text"},{"type":"text","text":" "},{"type":"text","text":"to the "},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AdvancedOperators#Precedence-for-Custom-Infix-Operators"},{"text":" section","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"of the "},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AdvancedOperators","isActive":true},{"text":" chapter,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"and to the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#Precedence-Group-Declaration"},{"type":"text","text":" section"},{"type":"text","text":" "},{"text":"of the ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations"},{"text":" chapter.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Updated discussion throughout"},{"text":" ","type":"text"},{"type":"text","text":"to use macOS instead of OS X,"},{"type":"text","text":" "},{"type":"codeVoice","code":"Error"},{"type":"text","text":" instead of "},{"code":"ErrorProtocol","type":"codeVoice"},{"text":",","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"and protocol names such as "},{"type":"codeVoice","code":"ExpressibleByStringLiteral"},{"type":"text","text":" "},{"text":"instead of ","type":"text"},{"type":"codeVoice","code":"StringLiteralConvertible"},{"type":"text","text":"."}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Updated the discussion"},{"type":"text","text":" "},{"type":"text","text":"in the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Generics#Generic-Where-Clauses"},{"text":" section","type":"text"},{"text":" ","type":"text"},{"text":"of the ","type":"text"},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Generics","isActive":true},{"type":"text","text":" chapter"},{"type":"text","text":" "},{"text":"and in the ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/GenericParametersAndArguments"},{"type":"text","text":" chapter,"},{"type":"text","text":" "},{"type":"text","text":"now that generic "},{"code":"where","type":"codeVoice"},{"type":"text","text":" clauses are written at the end of a declaration."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Updated the discussion in the ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Closures#Escaping-Closures"},{"text":" section,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"now that closures are nonescaping by default."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Updated the discussion"},{"type":"text","text":" "},{"text":"in the ","type":"text"},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/TheBasics#Optional-Binding","isActive":true,"type":"reference"},{"text":" section","type":"text"},{"type":"text","text":" "},{"text":"of the ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/TheBasics"},{"text":" chapter","type":"text"},{"text":" ","type":"text"},{"text":"and the ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Statements#While-Statement"},{"text":" section","type":"text"},{"text":" ","type":"text"},{"text":"of the ","type":"text"},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Statements","isActive":true},{"type":"text","text":" chapter,"},{"type":"text","text":" "},{"type":"text","text":"now that "},{"code":"if","type":"codeVoice"},{"text":", ","type":"text"},{"code":"while","type":"codeVoice"},{"text":", and ","type":"text"},{"type":"codeVoice","code":"guard"},{"type":"text","text":" statements"},{"text":" ","type":"text"},{"text":"use a comma-separated list of conditions without ","type":"text"},{"type":"codeVoice","code":"where"},{"text":" clauses.","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Added information about switch cases that have multiple patterns"},{"type":"text","text":" "},{"type":"text","text":"to the "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/ControlFlow#Switch","type":"reference","isActive":true},{"type":"text","text":" section"},{"text":" ","type":"text"},{"text":"of the ","type":"text"},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/ControlFlow","isActive":true,"type":"reference"},{"type":"text","text":" chapter"},{"text":" ","type":"text"},{"type":"text","text":"and the "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Statements#Switch-Statement","isActive":true,"type":"reference"},{"text":" section","type":"text"},{"type":"text","text":" "},{"text":"of the ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Statements"},{"type":"text","text":" chapter."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Updated the discussion of function types"},{"type":"text","text":" "},{"type":"text","text":"in the "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Types#Function-Type","type":"reference","isActive":true},{"text":" section","type":"text"},{"type":"text","text":" "},{"type":"text","text":"now that function argument labels are no longer part of a function’s type."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Updated the discussion of protocol composition types","type":"text"},{"type":"text","text":" "},{"type":"text","text":"in the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Protocols#Protocol-Composition"},{"text":" section","type":"text"},{"type":"text","text":" "},{"text":"of the ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Protocols"},{"type":"text","text":" chapter"},{"text":" ","type":"text"},{"type":"text","text":"and in the "},{"isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Types#Protocol-Composition-Type","type":"reference"},{"text":" section","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"of the "},{"isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Types","type":"reference"},{"text":" chapter","type":"text"},{"type":"text","text":" "},{"type":"text","text":"to use the new "},{"type":"codeVoice","code":"Protocol1 & Protocol2"},{"type":"text","text":" syntax."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Updated the discussion in the Dynamic Type Expression section"},{"text":" ","type":"text"},{"type":"text","text":"to use the new "},{"type":"codeVoice","code":"type(of:)"},{"type":"text","text":" syntax for dynamic type expressions."}]}]},{"content":[{"inlineContent":[{"text":"Updated the discussion of line control statements","type":"text"},{"type":"text","text":" "},{"type":"text","text":"to use the "},{"type":"codeVoice","code":"#sourceLocation(file:line:)"},{"text":" syntax","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"in the "},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Statements#Line-Control-Statement"},{"type":"text","text":" section."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Updated the discussion in ","type":"text"},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#Functions-that-Never-Return","isActive":true},{"text":" ","type":"text"},{"type":"text","text":"to use the new "},{"code":"Never","type":"codeVoice"},{"type":"text","text":" type."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Added information about playground literals"},{"text":" ","type":"text"},{"type":"text","text":"to the "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Expressions#Literal-Expression","isActive":true,"type":"reference"},{"type":"text","text":" section."}]}]},{"content":[{"inlineContent":[{"text":"Updated the discussion in the ","type":"text"},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#In-Out-Parameters","isActive":true},{"type":"text","text":" section"},{"type":"text","text":" "},{"type":"text","text":"to note that only nonescaping closures can capture in-out parameters."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Updated the discussion about default parameters","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"in the "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Functions#Default-Parameter-Values","isActive":true,"type":"reference"},{"text":" section,","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"now that they can’t be reordered in function calls."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Updated attribute arguments to use a colon","type":"text"},{"type":"text","text":" "},{"type":"text","text":"in the "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Attributes","isActive":true,"type":"reference"},{"text":" chapter.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Added information about throwing an error","type":"text"},{"type":"text","text":" "},{"type":"text","text":"inside the catch block of a rethrowing function"},{"text":" ","type":"text"},{"type":"text","text":"to the "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#Rethrowing-Functions-and-Methods","type":"reference","isActive":true},{"text":" section.","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Added information about accessing the selector"},{"text":" ","type":"text"},{"type":"text","text":"of an Objective-C property’s getter or setter"},{"text":" ","type":"text"},{"type":"text","text":"to the "},{"isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Expressions#Selector-Expression","type":"reference"},{"type":"text","text":" section."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Added information to the "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#Type-Alias-Declaration","isActive":true,"type":"reference"},{"text":" section","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"about generic type aliases and using type aliases inside of protocols."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Updated the discussion of function types in the "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Types#Function-Type","type":"reference","isActive":true},{"text":" section","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"to note that parentheses around the parameter types are required."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Updated the "},{"isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Attributes","type":"reference"},{"text":" chapter","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"to note that the "},{"code":"@IBAction","type":"codeVoice"},{"type":"text","text":", "},{"type":"codeVoice","code":"@IBOutlet"},{"type":"text","text":", and "},{"type":"codeVoice","code":"@NSManaged"},{"type":"text","text":" attributes"},{"type":"text","text":" "},{"type":"text","text":"imply the "},{"type":"codeVoice","code":"@objc"},{"text":" attribute.","type":"text"}]}]},{"content":[{"inlineContent":[{"text":"Added information about the ","type":"text"},{"type":"codeVoice","code":"@GKInspectable"},{"text":" attribute","type":"text"},{"type":"text","text":" "},{"type":"text","text":"to the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Attributes#Declaration-Attributes"},{"text":" section.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Updated the discussion of optional protocol requirements","type":"text"},{"text":" ","type":"text"},{"text":"in the ","type":"text"},{"isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Protocols#Optional-Protocol-Requirements","type":"reference"},{"text":" section","type":"text"},{"text":" ","type":"text"},{"text":"to clarify that they’re used only in code that interoperates with Objective-C.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Removed the discussion of explicitly using "},{"code":"let","type":"codeVoice"},{"type":"text","text":" in function parameters"},{"type":"text","text":" "},{"text":"from the ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#Function-Declaration"},{"text":" section.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Removed the discussion of the ","type":"text"},{"type":"codeVoice","code":"Boolean"},{"text":" protocol","type":"text"},{"type":"text","text":" "},{"type":"text","text":"from the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Statements"},{"text":" chapter,","type":"text"},{"type":"text","text":" "},{"text":"now that the protocol has been removed from the Swift standard library.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Corrected the discussion of the "},{"code":"@NSApplicationMain","type":"codeVoice"},{"text":" attribute","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"in the "},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Attributes#Declaration-Attributes"},{"type":"text","text":" section."}]}]}]},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"2016-03-21"}]}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Updated for Swift 2.2."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Added information about how to conditionally compile code","type":"text"},{"type":"text","text":" "},{"text":"depending on the version of Swift being used","type":"text"},{"text":" ","type":"text"},{"text":"to the ","type":"text"},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Statements#Conditional-Compilation-Block","isActive":true},{"text":" section.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Added information about how to distinguish","type":"text"},{"text":" ","type":"text"},{"text":"between methods or initializers whose names differ","type":"text"},{"type":"text","text":" "},{"type":"text","text":"only by the names of their arguments"},{"type":"text","text":" "},{"type":"text","text":"to the "},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Expressions#Explicit-Member-Expression","isActive":true},{"text":" section.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Added information about the "},{"code":"#selector","type":"codeVoice"},{"text":" syntax","type":"text"},{"type":"text","text":" "},{"text":"for Objective-C selectors","type":"text"},{"type":"text","text":" "},{"text":"to the ","type":"text"},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Expressions#Selector-Expression","isActive":true,"type":"reference"},{"type":"text","text":" section."}]}]},{"content":[{"inlineContent":[{"text":"Updated the discussion of associated types","type":"text"},{"type":"text","text":" "},{"type":"text","text":"to use the "},{"code":"associatedtype","type":"codeVoice"},{"text":" keyword","type":"text"},{"type":"text","text":" "},{"text":"in the ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Generics#Associated-Types"},{"text":" ","type":"text"},{"type":"text","text":"and "},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#Protocol-Associated-Type-Declaration","isActive":true},{"text":" sections.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Updated information about initializers that return "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" "},{"type":"text","text":"before the instance is fully initialized"},{"text":" ","type":"text"},{"text":"in the ","type":"text"},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Initialization#Failable-Initializers","isActive":true,"type":"reference"},{"type":"text","text":" section."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Added information about comparing tuples"},{"type":"text","text":" "},{"text":"to the ","type":"text"},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/BasicOperators#Comparison-Operators","isActive":true},{"text":" section.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Added information about using keywords as external parameter names","type":"text"},{"text":" ","type":"text"},{"text":"to the ","type":"text"},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/LexicalStructure#Keywords-and-Punctuation","isActive":true},{"text":" section.","type":"text"}]}]},{"content":[{"inlineContent":[{"text":"Updated the discussion of the ","type":"text"},{"type":"codeVoice","code":"@objc"},{"type":"text","text":" attribute"},{"text":" ","type":"text"},{"type":"text","text":"in the "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Attributes#Declaration-Attributes","isActive":true,"type":"reference"},{"text":" section to note that","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"enumerations and enumeration cases can use this attribute."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Updated the "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/LexicalStructure#Operators","type":"reference","isActive":true},{"text":" section","type":"text"},{"type":"text","text":" "},{"text":"with discussion of custom operators that contain a dot.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Added a note","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"to the "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#Rethrowing-Functions-and-Methods","type":"reference","isActive":true},{"text":" section","type":"text"},{"type":"text","text":" "},{"type":"text","text":"that rethrowing functions can’t directly throw errors."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Added a note to the "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Properties#Property-Observers","isActive":true,"type":"reference"},{"text":" section","type":"text"},{"text":" ","type":"text"},{"text":"about property observers being called","type":"text"},{"type":"text","text":" "},{"type":"text","text":"when you pass a property as an in-out parameter."}]}]},{"content":[{"inlineContent":[{"text":"Added a section about error handling","type":"text"},{"type":"text","text":" "},{"type":"text","text":"to the "},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/GuidedTour","isActive":true},{"text":" chapter.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Updated figures in the"},{"type":"text","text":" "},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AutomaticReferenceCounting#Weak-References"},{"text":" ","type":"text"},{"text":"section to show the deallocation process more clearly.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Removed discussion of C-style ","type":"text"},{"code":"for","type":"codeVoice"},{"text":" loops,","type":"text"},{"type":"text","text":" "},{"text":"the ","type":"text"},{"type":"codeVoice","code":"++"},{"text":" prefix and postfix operators,","type":"text"},{"text":" ","type":"text"},{"text":"and the ","type":"text"},{"type":"codeVoice","code":"--"},{"text":" prefix and postfix operators.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Removed discussion of variable function arguments","type":"text"},{"text":" ","type":"text"},{"text":"and the special syntax for curried functions.","type":"text"}],"type":"paragraph"}]}]},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"2015-10-20","type":"text"}]}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Updated for Swift 2.1."}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Updated the "},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/StringsAndCharacters#String-Interpolation"},{"text":" ","type":"text"},{"type":"text","text":"and "},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/LexicalStructure#String-Literals","isActive":true},{"text":" sections","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"now that string interpolations can contain string literals."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Added the "},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Closures#Escaping-Closures","isActive":true},{"type":"text","text":" section"},{"text":" ","type":"text"},{"text":"with information about the ","type":"text"},{"type":"codeVoice","code":"@noescape"},{"type":"text","text":" attribute."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Updated the "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Attributes#Declaration-Attributes","isActive":true,"type":"reference"},{"type":"text","text":" "},{"type":"text","text":"and "},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Statements#Conditional-Compilation-Block"},{"type":"text","text":" sections"},{"type":"text","text":" "},{"text":"with information about tvOS.","type":"text"}]}]},{"content":[{"inlineContent":[{"text":"Added information about the behavior of in-out parameters","type":"text"},{"text":" ","type":"text"},{"text":"to the ","type":"text"},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#In-Out-Parameters","isActive":true},{"type":"text","text":" section."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Added information to the "},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Expressions#Capture-Lists"},{"text":" section","type":"text"},{"type":"text","text":" "},{"type":"text","text":"about how values specified in closure capture lists are captured."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Updated the","type":"text"},{"text":" ","type":"text"},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/OptionalChaining#Accessing-Properties-Through-Optional-Chaining","isActive":true,"type":"reference"},{"type":"text","text":" "},{"type":"text","text":"section to clarify how assignment through optional chaining"},{"type":"text","text":" "},{"type":"text","text":"behaves."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Improved the discussion of autoclosures"},{"type":"text","text":" "},{"type":"text","text":"in the "},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Closures#Autoclosures"},{"type":"text","text":" section."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Added an example that uses the ","type":"text"},{"type":"codeVoice","code":"??"},{"text":" operator","type":"text"},{"type":"text","text":" "},{"text":"to the ","type":"text"},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/GuidedTour","isActive":true},{"text":" chapter.","type":"text"}]}]}]},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"2015-09-16"}]}]},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"Updated for Swift 2.0."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Added information about error handling","type":"text"},{"text":" ","type":"text"},{"text":"to the ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/ErrorHandling"},{"type":"text","text":" chapter,"},{"type":"text","text":" "},{"type":"text","text":"the "},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Statements#Do-Statement"},{"type":"text","text":" section,"},{"type":"text","text":" "},{"text":"the ","type":"text"},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Statements#Throw-Statement","isActive":true,"type":"reference"},{"type":"text","text":" section,"},{"text":" ","type":"text"},{"type":"text","text":"the "},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Statements#Defer-Statement"},{"type":"text","text":" section,"},{"type":"text","text":" "},{"text":"and the ","type":"text"},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Expressions#Try-Operator","isActive":true},{"text":" section.","type":"text"}]}]},{"content":[{"inlineContent":[{"text":"Updated the ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/ErrorHandling#Representing-and-Throwing-Errors"},{"type":"text","text":" section,"},{"type":"text","text":" "},{"type":"text","text":"now that all types can conform to the "},{"code":"ErrorType","type":"codeVoice"},{"type":"text","text":" protocol."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Added information about the new "},{"code":"try?","type":"codeVoice"},{"text":" keyword","type":"text"},{"text":" ","type":"text"},{"text":"to the ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/ErrorHandling#Converting-Errors-to-Optional-Values"},{"type":"text","text":" section."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Added information about recursive enumerations","type":"text"},{"type":"text","text":" "},{"type":"text","text":"to the "},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Enumerations#Recursive-Enumerations","isActive":true},{"type":"text","text":" section"},{"text":" ","type":"text"},{"text":"of the ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Enumerations"},{"type":"text","text":" chapter"},{"text":" ","type":"text"},{"type":"text","text":"and the "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#Enumerations-with-Cases-of-Any-Type","isActive":true,"type":"reference"},{"type":"text","text":" section"},{"text":" ","type":"text"},{"type":"text","text":"of the "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations","isActive":true,"type":"reference"},{"type":"text","text":" chapter."}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Added information about API availability checking"},{"text":" ","type":"text"},{"type":"text","text":"to the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/ControlFlow#Checking-API-Availability"},{"type":"text","text":" section"},{"type":"text","text":" "},{"text":"of the ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/ControlFlow"},{"type":"text","text":" chapter"},{"type":"text","text":" "},{"type":"text","text":"and the "},{"isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Statements#Availability-Condition","type":"reference"},{"type":"text","text":" section"},{"type":"text","text":" "},{"text":"of the ","type":"text"},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Statements","isActive":true,"type":"reference"},{"type":"text","text":" chapter."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Added information about the new "},{"type":"codeVoice","code":"guard"},{"type":"text","text":" statement"},{"text":" ","type":"text"},{"type":"text","text":"to the "},{"isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/ControlFlow#Early-Exit","type":"reference"},{"type":"text","text":" section"},{"type":"text","text":" "},{"type":"text","text":"of the "},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/ControlFlow"},{"text":" chapter","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"and the "},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Statements#Guard-Statement"},{"type":"text","text":" section"},{"text":" ","type":"text"},{"text":"of the ","type":"text"},{"isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Statements","type":"reference"},{"type":"text","text":" chapter."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Added information about protocol extensions","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"to the "},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Protocols#Protocol-Extensions"},{"text":" section","type":"text"},{"type":"text","text":" "},{"type":"text","text":"of the "},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Protocols"},{"type":"text","text":" chapter."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Added information about access control for unit testing","type":"text"},{"text":" ","type":"text"},{"text":"to the ","type":"text"},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AccessControl#Access-Levels-for-Unit-Test-Targets","isActive":true},{"type":"text","text":" section"},{"text":" ","type":"text"},{"type":"text","text":"of the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AccessControl"},{"text":" chapter.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Added information about the new optional pattern"},{"type":"text","text":" "},{"type":"text","text":"to the "},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Patterns#Optional-Pattern"},{"text":" section","type":"text"},{"type":"text","text":" "},{"type":"text","text":"of the "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Patterns","type":"reference","isActive":true},{"text":" chapter.","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Updated the "},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/ControlFlow#Repeat-While","isActive":true},{"text":" section","type":"text"},{"text":" ","type":"text"},{"text":"with information about the ","type":"text"},{"code":"repeat","type":"codeVoice"},{"type":"text","text":"-"},{"type":"codeVoice","code":"while"},{"type":"text","text":" loop."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Updated the "},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/StringsAndCharacters"},{"type":"text","text":" chapter,"},{"type":"text","text":" "},{"text":"now that ","type":"text"},{"type":"codeVoice","code":"String"},{"type":"text","text":" no longer conforms"},{"type":"text","text":" "},{"text":"to the ","type":"text"},{"code":"CollectionType","type":"codeVoice"},{"type":"text","text":" protocol from the Swift standard library."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Added information about the new Swift standard library","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"print(_:separator:terminator)"},{"type":"text","text":" function"},{"text":" ","type":"text"},{"text":"to the ","type":"text"},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/TheBasics#Printing-Constants-and-Variables","type":"reference","isActive":true},{"type":"text","text":" section."}]}]},{"content":[{"inlineContent":[{"text":"Added information about the behavior","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"of enumeration cases with "},{"code":"String","type":"codeVoice"},{"type":"text","text":" raw values"},{"type":"text","text":" "},{"text":"to the ","type":"text"},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Enumerations#Implicitly-Assigned-Raw-Values","type":"reference","isActive":true},{"text":" section","type":"text"},{"text":" ","type":"text"},{"text":"of the ","type":"text"},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Enumerations","type":"reference","isActive":true},{"type":"text","text":" chapter"},{"type":"text","text":" "},{"text":"and the ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#Enumerations-with-Cases-of-a-Raw-Value-Type"},{"type":"text","text":" section"},{"text":" ","type":"text"},{"type":"text","text":"of the "},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations","isActive":true},{"type":"text","text":" chapter."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Added information about the ","type":"text"},{"code":"@autoclosure","type":"codeVoice"},{"type":"text","text":" attribute —"},{"text":" ","type":"text"},{"text":"including its ","type":"text"},{"type":"codeVoice","code":"@autoclosure(escaping)"},{"text":" form —","type":"text"},{"type":"text","text":" "},{"type":"text","text":"to the "},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Closures#Autoclosures"},{"text":" section.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Updated the ","type":"text"},{"isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Attributes#Declaration-Attributes","type":"reference"},{"text":" section","type":"text"},{"type":"text","text":" "},{"type":"text","text":"with information about the "},{"type":"codeVoice","code":"@available"},{"type":"text","text":" "},{"text":"and ","type":"text"},{"code":"@warn_unused_result","type":"codeVoice"},{"text":" attributes.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Updated the "},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Attributes#Type-Attributes","isActive":true},{"type":"text","text":" section"},{"type":"text","text":" "},{"type":"text","text":"with information about the "},{"type":"codeVoice","code":"@convention"},{"text":" attribute.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Added an example of using multiple optional bindings","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"with a "},{"type":"codeVoice","code":"where"},{"type":"text","text":" clause"},{"text":" ","type":"text"},{"text":"to the ","type":"text"},{"isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/TheBasics#Optional-Binding","type":"reference"},{"text":" section.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Added information to the "},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/LexicalStructure#String-Literals","isActive":true},{"text":" section","type":"text"},{"type":"text","text":" "},{"text":"about how concatenating string literals using the ","type":"text"},{"type":"codeVoice","code":"+"},{"type":"text","text":" operator"},{"type":"text","text":" "},{"type":"text","text":"happens at compile time."}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Added information to the "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Types#Metatype-Type","type":"reference","isActive":true},{"type":"text","text":" section"},{"type":"text","text":" "},{"type":"text","text":"about comparing metatype values and using them"},{"type":"text","text":" "},{"text":"to construct instances with initializer expressions.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Added a note to the "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/TheBasics#Debugging-with-Assertions","type":"reference","isActive":true},{"type":"text","text":" section"},{"text":" ","type":"text"},{"text":"about when user-defined assertions are disabled.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Updated the discussion of the "},{"type":"codeVoice","code":"@NSManaged"},{"type":"text","text":" attribute"},{"text":" ","type":"text"},{"type":"text","text":"in the "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Attributes#Declaration-Attributes","type":"reference","isActive":true},{"type":"text","text":" section,"},{"type":"text","text":" "},{"text":"now that the attribute can be applied to certain instance methods.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Updated the ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Functions#Variadic-Parameters"},{"type":"text","text":" section,"},{"text":" ","type":"text"},{"type":"text","text":"now that variadic parameters can be declared in any position"},{"text":" ","type":"text"},{"type":"text","text":"in a function’s parameter list."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Added information","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"to the "},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Initialization#Overriding-a-Failable-Initializer","isActive":true},{"type":"text","text":" section"},{"text":" ","type":"text"},{"type":"text","text":"about how a nonfailable initializer can delegate"},{"type":"text","text":" "},{"type":"text","text":"up to a failable initializer"},{"type":"text","text":" "},{"text":"by force-unwrapping the result of the superclass’s initializer.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Added information about using enumeration cases as functions","type":"text"},{"type":"text","text":" "},{"text":"to the ","type":"text"},{"isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#Enumerations-with-Cases-of-Any-Type","type":"reference"},{"type":"text","text":" section."}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Added information about explicitly referencing an initializer"},{"text":" ","type":"text"},{"type":"text","text":"to the "},{"isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Expressions#Initializer-Expression","type":"reference"},{"text":" section.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Added information about build configuration"},{"type":"text","text":" "},{"type":"text","text":"and line control statements"},{"type":"text","text":" "},{"text":"to the ","type":"text"},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Statements#Compiler-Control-Statements","isActive":true},{"type":"text","text":" section."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Added a note to the ","type":"text"},{"isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Types#Metatype-Type","type":"reference"},{"type":"text","text":" section"},{"type":"text","text":" "},{"text":"about constructing class instances from metatype values.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Added a note to the","type":"text"},{"text":" ","type":"text"},{"isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AutomaticReferenceCounting#Weak-References","type":"reference"},{"type":"text","text":" "},{"text":"section about weak references being unsuitable for caching.","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Updated a note in the "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Properties#Type-Properties","isActive":true,"type":"reference"},{"type":"text","text":" section"},{"text":" ","type":"text"},{"text":"to mention that stored type properties are lazily initialized.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Updated the "},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Closures#Capturing-Values","isActive":true},{"type":"text","text":" section"},{"text":" ","type":"text"},{"type":"text","text":"to clarify how variables and constants are captured in closures."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Updated the ","type":"text"},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Attributes#Declaration-Attributes","isActive":true},{"text":" section","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"to describe when you can apply the "},{"type":"codeVoice","code":"@objc"},{"text":" attribute to classes.","type":"text"}]}]},{"content":[{"inlineContent":[{"text":"Added a note to the ","type":"text"},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/ErrorHandling#Handling-Errors","type":"reference","isActive":true},{"text":" section","type":"text"},{"type":"text","text":" "},{"text":"about the performance of executing a ","type":"text"},{"type":"codeVoice","code":"throw"},{"type":"text","text":" statement."},{"text":" ","type":"text"},{"type":"text","text":"Added similar information about the "},{"code":"do","type":"codeVoice"},{"type":"text","text":" statement"},{"text":" ","type":"text"},{"text":"in the ","type":"text"},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Statements#Do-Statement","isActive":true,"type":"reference"},{"type":"text","text":" section."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Updated the ","type":"text"},{"isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Properties#Type-Properties","type":"reference"},{"text":" section","type":"text"},{"type":"text","text":" "},{"type":"text","text":"with information about stored and computed type properties"},{"text":" ","type":"text"},{"text":"for classes, structures, and enumerations.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Updated the "},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Statements#Break-Statement","isActive":true},{"type":"text","text":" section"},{"text":" ","type":"text"},{"type":"text","text":"with information about labeled break statements."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Updated a note in the ","type":"text"},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Properties#Property-Observers","isActive":true},{"type":"text","text":" section"},{"text":" ","type":"text"},{"type":"text","text":"to clarify the behavior of "},{"type":"codeVoice","code":"willSet"},{"type":"text","text":" and "},{"type":"codeVoice","code":"didSet"},{"text":" observers.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Added a note to the ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AccessControl#Access-Levels"},{"type":"text","text":" section"},{"text":" ","type":"text"},{"type":"text","text":"with information about the scope of "},{"code":"private","type":"codeVoice"},{"type":"text","text":" access."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Added a note to the"},{"type":"text","text":" "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AutomaticReferenceCounting#Weak-References","isActive":true,"type":"reference"},{"text":" ","type":"text"},{"text":"section about the differences in weak references","type":"text"},{"type":"text","text":" "},{"text":"between garbage collected systems and ARC.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Updated the"},{"type":"text","text":" "},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/StringsAndCharacters#Special-Characters-in-String-Literals"},{"type":"text","text":" section"},{"type":"text","text":" "},{"text":"with a more precise definition of Unicode scalars.","type":"text"}]}]}],"type":"unorderedList"},{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"2015-04-08","type":"text"}],"type":"strong"}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"Updated for Swift 1.2."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Swift now has a native "},{"code":"Set","type":"codeVoice"},{"text":" collection type.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"For more information, see "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/CollectionTypes#Sets","type":"reference","isActive":true},{"type":"text","text":"."}]}]},{"content":[{"inlineContent":[{"code":"@autoclosure","type":"codeVoice"},{"type":"text","text":" is now an attribute of the parameter declaration,"},{"type":"text","text":" "},{"type":"text","text":"not its type."},{"text":" ","type":"text"},{"text":"There’s also a new ","type":"text"},{"type":"codeVoice","code":"@noescape"},{"type":"text","text":" parameter declaration attribute."},{"text":" ","type":"text"},{"text":"For more information, see ","type":"text"},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Attributes#Declaration-Attributes","type":"reference","isActive":true},{"type":"text","text":"."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Type methods and properties now use the ","type":"text"},{"type":"codeVoice","code":"static"},{"type":"text","text":" keyword"},{"type":"text","text":" "},{"type":"text","text":"as a declaration modifier."},{"type":"text","text":" "},{"type":"text","text":"For more information see "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#Type-Variable-Properties","isActive":true,"type":"reference"},{"type":"text","text":"."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Swift now includes the "},{"type":"codeVoice","code":"as?"},{"type":"text","text":" and "},{"type":"codeVoice","code":"as!"},{"type":"text","text":" failable downcast operators."},{"text":" ","type":"text"},{"type":"text","text":"For more information,"},{"text":" ","type":"text"},{"text":"see ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Protocols#Checking-for-Protocol-Conformance"},{"text":".","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Added a new guide section about","type":"text"},{"type":"text","text":" "},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/StringsAndCharacters#String-Indices","isActive":true},{"type":"text","text":"."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Removed the overflow division (","type":"text"},{"code":"&\/","type":"codeVoice"},{"text":") and","type":"text"},{"type":"text","text":" "},{"text":"overflow remainder (","type":"text"},{"type":"codeVoice","code":"&%"},{"type":"text","text":") operators"},{"type":"text","text":" "},{"text":"from ","type":"text"},{"isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AdvancedOperators#Overflow-Operators","type":"reference"},{"text":".","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Updated the rules for constant and"},{"type":"text","text":" "},{"text":"constant property declaration and initialization.","type":"text"},{"text":" ","type":"text"},{"text":"For more information, see ","type":"text"},{"isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#Constant-Declaration","type":"reference"},{"text":".","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Updated the definition of Unicode scalars in string literals."},{"type":"text","text":" "},{"type":"text","text":"See "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/StringsAndCharacters#Special-Characters-in-String-Literals","type":"reference","isActive":true},{"text":".","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Updated "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/BasicOperators#Range-Operators","type":"reference","isActive":true},{"text":" to note that","type":"text"},{"type":"text","text":" "},{"text":"a half-open range with the same start and end index will be empty.","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Updated "},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Closures#Closures-Are-Reference-Types","isActive":true},{"type":"text","text":" to clarify"},{"type":"text","text":" "},{"text":"the capturing rules for variables.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Updated "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AdvancedOperators#Value-Overflow","type":"reference","isActive":true},{"type":"text","text":" to clarify"},{"type":"text","text":" "},{"type":"text","text":"the overflow behavior of signed and unsigned integers"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Updated "},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#Protocol-Declaration","isActive":true},{"type":"text","text":" to clarify"},{"text":" ","type":"text"},{"type":"text","text":"protocol declaration scope and members."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Updated "},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AutomaticReferenceCounting#Defining-a-Capture-List"},{"type":"text","text":" "},{"type":"text","text":"to clarify the syntax for"},{"type":"text","text":" "},{"text":"weak and unowned references in closure capture lists.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Updated "},{"isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/LexicalStructure#Operators","type":"reference"},{"text":" to explicitly mention","type":"text"},{"type":"text","text":" "},{"type":"text","text":"examples of supported characters for custom operators,"},{"text":" ","type":"text"},{"type":"text","text":"such as those in the Mathematical Operators, Miscellaneous Symbols,"},{"text":" ","type":"text"},{"text":"and Dingbats Unicode blocks.","type":"text"}]}]},{"content":[{"inlineContent":[{"text":"Constants can now be declared without being initialized","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"in local function scope."},{"type":"text","text":" "},{"type":"text","text":"They must have a set value before first use."},{"type":"text","text":" "},{"type":"text","text":"For more information, see "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#Constant-Declaration","isActive":true,"type":"reference"},{"type":"text","text":"."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"In an initializer, constant properties can now only assign a value once.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"For more information,"},{"text":" ","type":"text"},{"type":"text","text":"see "},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Initialization#Assigning-Constant-Properties-During-Initialization","isActive":true},{"type":"text","text":"."}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Multiple optional bindings can now appear in a single "},{"type":"codeVoice","code":"if"},{"type":"text","text":" statement"},{"type":"text","text":" "},{"text":"as a comma-separated list of assignment expressions.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"For more information, see "},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/TheBasics#Optional-Binding","isActive":true},{"text":".","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"An "},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Expressions#Optional-Chaining-Expression","isActive":true},{"text":" ","type":"text"},{"type":"text","text":"must appear within a postfix expression."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Protocol casts are no longer limited to ","type":"text"},{"code":"@objc","type":"codeVoice"},{"type":"text","text":" protocols."}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Type casts that can fail at runtime"},{"type":"text","text":" "},{"type":"text","text":"now use the "},{"code":"as?","type":"codeVoice"},{"text":" or ","type":"text"},{"type":"codeVoice","code":"as!"},{"type":"text","text":" operator,"},{"type":"text","text":" "},{"type":"text","text":"and type casts that are guaranteed not to fail use the "},{"type":"codeVoice","code":"as"},{"text":" operator.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"For more information, see "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Expressions#Type-Casting-Operators","isActive":true,"type":"reference"},{"text":".","type":"text"}],"type":"paragraph"}]}]},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"2014-10-16"}]}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Updated for Swift 1.1.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Added a full guide to "},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Initialization#Failable-Initializers","isActive":true},{"text":".","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Added a description of "},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Protocols#Failable-Initializer-Requirements","isActive":true},{"text":" ","type":"text"},{"text":"for protocols.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Constants and variables of type "},{"type":"codeVoice","code":"Any"},{"text":" can now contain","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"function instances. Updated the example in "},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/TypeCasting#Type-Casting-for-Any-and-AnyObject"},{"type":"text","text":" "},{"type":"text","text":"to show how to check for and cast to a function type"},{"type":"text","text":" "},{"type":"text","text":"within a "},{"code":"switch","type":"codeVoice"},{"text":" statement.","type":"text"}]}]},{"content":[{"inlineContent":[{"text":"Enumerations with raw values","type":"text"},{"type":"text","text":" "},{"type":"text","text":"now have a "},{"code":"rawValue","type":"codeVoice"},{"type":"text","text":" property rather than a "},{"type":"codeVoice","code":"toRaw()"},{"text":" method","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"and a failable initializer with a "},{"type":"codeVoice","code":"rawValue"},{"type":"text","text":" parameter"},{"text":" ","type":"text"},{"type":"text","text":"rather than a "},{"type":"codeVoice","code":"fromRaw()"},{"text":" method.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"For more information, see "},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Enumerations#Raw-Values"},{"type":"text","text":" "},{"type":"text","text":"and "},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#Enumerations-with-Cases-of-a-Raw-Value-Type"},{"type":"text","text":"."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Added a new reference section about"},{"text":" ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#Failable-Initializers"},{"type":"text","text":","},{"text":" ","type":"text"},{"text":"which can trigger initialization failure.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Custom operators can now contain the ","type":"text"},{"type":"codeVoice","code":"?"},{"type":"text","text":" character."},{"type":"text","text":" "},{"text":"Updated the ","type":"text"},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/LexicalStructure#Operators","type":"reference","isActive":true},{"text":" reference to describe","type":"text"},{"text":" ","type":"text"},{"text":"the revised rules.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Removed a duplicate description of the valid set of operator characters"},{"type":"text","text":" "},{"type":"text","text":"from "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AdvancedOperators#Custom-Operators","isActive":true,"type":"reference"},{"text":".","type":"text"}]}]}]},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"2014-08-18"}]}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"New document that describes Swift 1.0,","type":"text"},{"text":" ","type":"text"},{"text":"Apple’s new programming language for building iOS and OS X apps.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Added a new section about","type":"text"},{"type":"text","text":" "},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Protocols#Initializer-Requirements","isActive":true},{"type":"text","text":" in protocols."}]}]},{"content":[{"inlineContent":[{"text":"Added a new section about ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Protocols#Class-Only-Protocols"},{"text":".","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/TheBasics#Assertions-and-Preconditions","isActive":true,"type":"reference"},{"type":"text","text":" can now use string interpolation."},{"type":"text","text":" "},{"type":"text","text":"Removed a note to the contrary."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Updated the"},{"text":" ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/StringsAndCharacters#Concatenating-Strings-and-Characters"},{"text":" section","type":"text"},{"type":"text","text":" "},{"type":"text","text":"to reflect the fact that "},{"code":"String","type":"codeVoice"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"Character"},{"text":" values","type":"text"},{"text":" ","type":"text"},{"text":"can no longer be combined with the addition operator (","type":"text"},{"code":"+","type":"codeVoice"},{"text":")","type":"text"},{"type":"text","text":" "},{"text":"or addition assignment operator (","type":"text"},{"code":"+=","type":"codeVoice"},{"text":").","type":"text"},{"type":"text","text":" "},{"type":"text","text":"These operators are now used only with "},{"code":"String","type":"codeVoice"},{"text":" values.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Use the "},{"type":"codeVoice","code":"String"},{"text":" type’s ","type":"text"},{"type":"codeVoice","code":"append(_:)"},{"type":"text","text":" method"},{"type":"text","text":" "},{"type":"text","text":"to append a single "},{"code":"Character","type":"codeVoice"},{"type":"text","text":" value onto the end of a string."}]}]},{"content":[{"inlineContent":[{"text":"Added information about the ","type":"text"},{"type":"codeVoice","code":"availability"},{"text":" attribute to","type":"text"},{"type":"text","text":" "},{"text":"the ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Attributes#Declaration-Attributes"},{"type":"text","text":" section."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/TheBasics#Optionals"},{"type":"text","text":" no longer implicitly evaluate to"},{"type":"text","text":" "},{"code":"true","type":"codeVoice"},{"type":"text","text":" when they have a value and "},{"type":"codeVoice","code":"false"},{"type":"text","text":" when they do not,"},{"type":"text","text":" "},{"text":"to avoid confusion when working with optional ","type":"text"},{"type":"codeVoice","code":"Bool"},{"text":" values.","type":"text"},{"type":"text","text":" "},{"text":"Instead, make an explicit check against ","type":"text"},{"type":"codeVoice","code":"nil"},{"text":" ","type":"text"},{"type":"text","text":"with the "},{"type":"codeVoice","code":"=="},{"type":"text","text":" or "},{"type":"codeVoice","code":"!="},{"type":"text","text":" operators"},{"type":"text","text":" "},{"type":"text","text":"to find out if an optional contains a value."}]}]},{"content":[{"inlineContent":[{"text":"Swift now has a ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/BasicOperators#Nil-Coalescing-Operator"},{"text":" ","type":"text"},{"type":"text","text":"("},{"code":"a ?? b","type":"codeVoice"},{"text":"), which unwraps an optional’s value if it exists,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"or returns a default value if the optional is "},{"code":"nil","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Updated and expanded"},{"type":"text","text":" "},{"type":"text","text":"the "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/StringsAndCharacters#Comparing-Strings","type":"reference","isActive":true},{"text":" section","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"to reflect and demonstrate that string and character comparison"},{"text":" ","type":"text"},{"type":"text","text":"and prefix \/ suffix comparison are now based on"},{"text":" ","type":"text"},{"type":"text","text":"Unicode canonical equivalence of extended grapheme clusters."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"You can now try to set a property’s value, assign to a subscript,","type":"text"},{"type":"text","text":" "},{"text":"or call a mutating method or operator through","type":"text"},{"text":" ","type":"text"},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/OptionalChaining","isActive":true,"type":"reference"},{"type":"text","text":"."},{"text":" ","type":"text"},{"type":"text","text":"The information about"},{"text":" ","type":"text"},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/OptionalChaining#Accessing-Properties-Through-Optional-Chaining","type":"reference","isActive":true},{"type":"text","text":" "},{"type":"text","text":"has been updated accordingly,"},{"type":"text","text":" "},{"type":"text","text":"and the examples of checking for method call success in"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/OptionalChaining#Calling-Methods-Through-Optional-Chaining"},{"text":" ","type":"text"},{"text":"have been expanded to show how to check for property setting success.","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Added a new section about"},{"type":"text","text":" "},{"isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/OptionalChaining#Accessing-Subscripts-of-Optional-Type","type":"reference"},{"type":"text","text":" "},{"type":"text","text":"through optional chaining."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Updated the "},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/CollectionTypes#Accessing-and-Modifying-an-Array"},{"type":"text","text":" section"},{"type":"text","text":" "},{"text":"to note that you can no longer append a single item to an array","type":"text"},{"type":"text","text":" "},{"text":"with the ","type":"text"},{"type":"codeVoice","code":"+="},{"type":"text","text":" operator."},{"type":"text","text":" "},{"type":"text","text":"Instead, use the "},{"type":"codeVoice","code":"append(_:)"},{"type":"text","text":" method,"},{"type":"text","text":" "},{"type":"text","text":"or append a single-item array with the "},{"type":"codeVoice","code":"+="},{"type":"text","text":" operator."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Added a note that the start value ","type":"text"},{"type":"codeVoice","code":"a"},{"text":" ","type":"text"},{"text":"for the ","type":"text"},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/BasicOperators#Range-Operators","isActive":true,"type":"reference"},{"type":"text","text":" "},{"code":"a...b","type":"codeVoice"},{"type":"text","text":" and "},{"type":"codeVoice","code":"a..<b"},{"text":" ","type":"text"},{"type":"text","text":"must not be greater than the end value "},{"code":"b","type":"codeVoice"},{"text":".","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Rewrote the "},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Inheritance"},{"text":" chapter","type":"text"},{"type":"text","text":" "},{"text":"to remove its introductory coverage of initializer overrides.","type":"text"},{"text":" ","type":"text"},{"text":"This chapter now focuses more on the addition of","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"new functionality in a subclass,"},{"text":" ","type":"text"},{"text":"and the modification of existing functionality with overrides.","type":"text"},{"text":" ","type":"text"},{"text":"The chapter’s example of","type":"text"},{"type":"text","text":" "},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Inheritance#Overriding-Property-Getters-and-Setters"},{"text":" ","type":"text"},{"type":"text","text":"has been rewritten to show how to override a "},{"code":"description","type":"codeVoice"},{"text":" property.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"(The examples of modifying an inherited property’s default value"},{"type":"text","text":" "},{"type":"text","text":"in a subclass initializer have been moved to"},{"type":"text","text":" "},{"text":"the ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Initialization"},{"type":"text","text":" chapter.)"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Updated the"},{"text":" ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Initialization#Initializer-Inheritance-and-Overriding"},{"type":"text","text":" section"},{"type":"text","text":" "},{"text":"to note that overrides of a designated initializer","type":"text"},{"text":" ","type":"text"},{"text":"must now be marked with the ","type":"text"},{"type":"codeVoice","code":"override"},{"type":"text","text":" modifier."}]}]},{"content":[{"inlineContent":[{"text":"Updated the ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Initialization#Required-Initializers"},{"type":"text","text":" section"},{"text":" ","type":"text"},{"text":"to note that the ","type":"text"},{"code":"required","type":"codeVoice"},{"type":"text","text":" modifier is now written before"},{"type":"text","text":" "},{"type":"text","text":"every subclass implementation of a required initializer,"},{"type":"text","text":" "},{"type":"text","text":"and that the requirements for required initializers"},{"type":"text","text":" "},{"text":"can now be satisfied by automatically inherited initializers.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Infix "},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AdvancedOperators#Operator-Methods"},{"text":" no longer require","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"the "},{"code":"@infix","type":"codeVoice"},{"type":"text","text":" attribute."}]}]},{"content":[{"inlineContent":[{"text":"The ","type":"text"},{"type":"codeVoice","code":"@prefix"},{"type":"text","text":" and "},{"type":"codeVoice","code":"@postfix"},{"type":"text","text":" attributes"},{"type":"text","text":" "},{"type":"text","text":"for "},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AdvancedOperators#Prefix-and-Postfix-Operators"},{"type":"text","text":" "},{"type":"text","text":"have been replaced by "},{"code":"prefix","type":"codeVoice"},{"type":"text","text":" and "},{"code":"postfix","type":"codeVoice"},{"type":"text","text":" declaration modifiers."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Added a note about the order in which","type":"text"},{"type":"text","text":" "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AdvancedOperators#Prefix-and-Postfix-Operators","type":"reference","isActive":true},{"type":"text","text":" are applied"},{"text":" ","type":"text"},{"type":"text","text":"when both a prefix and a postfix operator are applied to"},{"text":" ","type":"text"},{"text":"the same operand.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Operator functions for","type":"text"},{"text":" ","type":"text"},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AdvancedOperators#Compound-Assignment-Operators","isActive":true},{"text":" no longer use","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"the "},{"type":"codeVoice","code":"@assignment"},{"type":"text","text":" attribute when defining the function."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The order in which modifiers are specified when defining"},{"text":" ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AdvancedOperators#Custom-Operators"},{"type":"text","text":" has changed."},{"type":"text","text":" "},{"type":"text","text":"You now write "},{"type":"codeVoice","code":"prefix operator"},{"type":"text","text":" rather than "},{"type":"codeVoice","code":"operator prefix"},{"text":",","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"for example."}]}]},{"content":[{"inlineContent":[{"text":"Added information about the ","type":"text"},{"code":"dynamic","type":"codeVoice"},{"type":"text","text":" declaration modifier"},{"text":" ","type":"text"},{"text":"in ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#Declaration-Modifiers"},{"type":"text","text":"."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Added information about how type inference works"},{"type":"text","text":" "},{"text":"with ","type":"text"},{"isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/LexicalStructure#Literals","type":"reference"},{"text":".","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Added more information about curried functions."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Added a new chapter about "},{"isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AccessControl","type":"reference"},{"text":".","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Updated the "},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/StringsAndCharacters"},{"type":"text","text":" chapter"},{"text":" ","type":"text"},{"type":"text","text":"to reflect the fact that Swift’s "},{"type":"codeVoice","code":"Character"},{"text":" type now represents","type":"text"},{"type":"text","text":" "},{"text":"a single Unicode extended grapheme cluster.","type":"text"},{"type":"text","text":" "},{"text":"Includes a new section on","type":"text"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/StringsAndCharacters#Extended-Grapheme-Clusters"},{"text":" ","type":"text"},{"type":"text","text":"and more information about"},{"type":"text","text":" "},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/StringsAndCharacters#Unicode-Scalar-Values"},{"type":"text","text":" "},{"type":"text","text":"and "},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/StringsAndCharacters#Comparing-Strings"},{"type":"text","text":"."}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Updated the "},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/StringsAndCharacters#String-Literals"},{"text":" section","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"to note that Unicode scalars inside string literals"},{"type":"text","text":" "},{"text":"are now written as ","type":"text"},{"type":"codeVoice","code":"\\u{n}"},{"type":"text","text":","},{"text":" ","type":"text"},{"text":"where ","type":"text"},{"code":"n","type":"codeVoice"},{"type":"text","text":" is a hexadecimal number between 0 and 10FFFF,"},{"text":" ","type":"text"},{"type":"text","text":"the range of Unicode’s codespace."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"NSString"},{"type":"text","text":" "},{"code":"length","type":"codeVoice"},{"type":"text","text":" property is now mapped onto"},{"type":"text","text":" "},{"type":"text","text":"Swift’s native "},{"type":"codeVoice","code":"String"},{"type":"text","text":" type as "},{"type":"codeVoice","code":"utf16Count"},{"type":"text","text":", not "},{"type":"codeVoice","code":"utf16count"},{"text":".","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Swift’s native "},{"code":"String","type":"codeVoice"},{"text":" type no longer has","type":"text"},{"text":" ","type":"text"},{"text":"an ","type":"text"},{"type":"codeVoice","code":"uppercaseString"},{"type":"text","text":" or "},{"type":"codeVoice","code":"lowercaseString"},{"type":"text","text":" property."},{"type":"text","text":" "},{"text":"The corresponding section in","type":"text"},{"type":"text","text":" "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/StringsAndCharacters","isActive":true,"type":"reference"},{"type":"text","text":" "},{"type":"text","text":"has been removed, and various code examples have been updated."}]}]},{"content":[{"inlineContent":[{"text":"Added a new section about","type":"text"},{"text":" ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Initialization#Initializer-Parameters-Without-Argument-Labels"},{"text":".","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Added a new section about"},{"type":"text","text":" "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Initialization#Required-Initializers","isActive":true,"type":"reference"},{"type":"text","text":"."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Added a new section about "},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Functions#Optional-Tuple-Return-Types"},{"type":"text","text":"."}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Updated the "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/TheBasics#Type-Annotations","isActive":true,"type":"reference"},{"type":"text","text":" section to note that"},{"text":" ","type":"text"},{"type":"text","text":"multiple related variables can be defined on a single line"},{"type":"text","text":" "},{"text":"with one type annotation.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"The "},{"code":"@optional","type":"codeVoice"},{"type":"text","text":", "},{"code":"@lazy","type":"codeVoice"},{"type":"text","text":", "},{"code":"@final","type":"codeVoice"},{"type":"text","text":", and "},{"type":"codeVoice","code":"@required"},{"type":"text","text":" attributes"},{"type":"text","text":" "},{"text":"are now the ","type":"text"},{"code":"optional","type":"codeVoice"},{"type":"text","text":", "},{"type":"codeVoice","code":"lazy"},{"text":", ","type":"text"},{"type":"codeVoice","code":"final"},{"type":"text","text":", and "},{"code":"required","type":"codeVoice"},{"type":"text","text":" "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#Declaration-Modifiers","isActive":true,"type":"reference"},{"text":".","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Updated the entire book to refer to "},{"type":"codeVoice","code":"..<"},{"text":" as","type":"text"},{"type":"text","text":" "},{"text":"the ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/BasicOperators#Half-Open-Range-Operator"},{"type":"text","text":" "},{"text":"(rather than the “half-closed range operator”).","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Updated the "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/CollectionTypes#Accessing-and-Modifying-a-Dictionary","isActive":true,"type":"reference"},{"type":"text","text":" "},{"type":"text","text":"section to note that "},{"code":"Dictionary","type":"codeVoice"},{"type":"text","text":" now has"},{"type":"text","text":" "},{"text":"a Boolean ","type":"text"},{"code":"isEmpty","type":"codeVoice"},{"type":"text","text":" property."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Clarified the full list of characters that can be used","type":"text"},{"text":" ","type":"text"},{"text":"when defining ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AdvancedOperators#Custom-Operators"},{"type":"text","text":"."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"nil"},{"text":" and the Booleans ","type":"text"},{"type":"codeVoice","code":"true"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"false"},{"type":"text","text":" are now "},{"isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/LexicalStructure#Literals","type":"reference"},{"type":"text","text":"."}]}]},{"content":[{"inlineContent":[{"text":"Swift’s ","type":"text"},{"type":"codeVoice","code":"Array"},{"type":"text","text":" type now has full value semantics."},{"type":"text","text":" "},{"text":"Updated the information about ","type":"text"},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/CollectionTypes#Mutability-of-Collections","type":"reference","isActive":true},{"type":"text","text":" "},{"type":"text","text":"and "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/CollectionTypes#Arrays","isActive":true,"type":"reference"},{"text":" to reflect the new approach.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Also clarified the assignment and copy behavior for strings arrays and dictionaries."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/CollectionTypes#Array-Type-Shorthand-Syntax","isActive":true},{"text":" is now written as","type":"text"},{"type":"text","text":" "},{"code":"[SomeType]","type":"codeVoice"},{"text":" rather than ","type":"text"},{"type":"codeVoice","code":"SomeType[]"},{"type":"text","text":"."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Added a new section about "},{"isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/CollectionTypes#Dictionary-Type-Shorthand-Syntax","type":"reference"},{"type":"text","text":","},{"text":" ","type":"text"},{"text":"which is written as ","type":"text"},{"code":"[KeyType: ValueType]","type":"codeVoice"},{"type":"text","text":"."}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Added a new section about "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/CollectionTypes#Hash-Values-for-Set-Types","type":"reference","isActive":true},{"text":".","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Examples of ","type":"text"},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Closures#Closure-Expressions","isActive":true,"type":"reference"},{"text":" now use","type":"text"},{"type":"text","text":" "},{"text":"the global ","type":"text"},{"type":"codeVoice","code":"sorted(_:_:)"},{"type":"text","text":" function"},{"text":" ","type":"text"},{"text":"rather than the global ","type":"text"},{"type":"codeVoice","code":"sort(_:_:)"},{"type":"text","text":" function,"},{"text":" ","type":"text"},{"text":"to reflect the new array value semantics.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Updated the information about ","type":"text"},{"isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Initialization#Memberwise-Initializers-for-Structure-Types","type":"reference"},{"type":"text","text":" "},{"type":"text","text":"to clarify that the memberwise structure initializer is made available"},{"type":"text","text":" "},{"text":"even if a structure’s stored properties don’t have default values.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Updated to "},{"code":"..<","type":"codeVoice"},{"text":" rather than ","type":"text"},{"type":"codeVoice","code":".."},{"type":"text","text":" "},{"type":"text","text":"for the "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/BasicOperators#Half-Open-Range-Operator","isActive":true,"type":"reference"},{"type":"text","text":"."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Added an example of ","type":"text"},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Generics#Extending-a-Generic-Type","type":"reference","isActive":true},{"text":".","type":"text"}]}]}],"type":"unorderedList"}]}],"identifier":{"url":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/RevisionHistory","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Review the recent changes to this book."}],"sections":[],"metadata":{"title":"Document Revision History"},"references":{"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/LexicalStructure#Regular-Expression-Literals":{"abstract":[],"title":"Regular Expression Literals","kind":"section","type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/LexicalStructure#Regular-Expression-Literals","url":"\/documentation\/the-swift-programming-language\/lexicalstructure#Regular-Expression-Literals"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/TheBasics":{"abstract":[{"type":"text","text":"Work with common kinds of data and write basic syntax."}],"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/TheBasics","title":"The Basics","url":"\/documentation\/the-swift-programming-language\/thebasics","role":"article","type":"topic","kind":"article"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Declarations#Constant-Declaration":{"abstract":[],"type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#Constant-Declaration","title":"Constant Declaration","url":"\/documentation\/the-swift-programming-language\/declarations#Constant-Declaration","kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/StringsAndCharacters#String-Literals":{"type":"topic","url":"\/documentation\/the-swift-programming-language\/stringsandcharacters#String-Literals","title":"String Literals","abstract":[],"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/StringsAndCharacters#String-Literals","kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Attributes#unchecked":{"abstract":[],"title":"unchecked","kind":"section","type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Attributes#unchecked","url":"\/documentation\/the-swift-programming-language\/attributes#unchecked"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Declarations#Enumerations-with-Cases-of-Any-Type":{"type":"topic","url":"\/documentation\/the-swift-programming-language\/declarations#Enumerations-with-Cases-of-Any-Type","title":"Enumerations with Cases of Any Type","abstract":[],"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#Enumerations-with-Cases-of-Any-Type","kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/AutomaticReferenceCounting#Unowned-Optional-References":{"abstract":[],"title":"Unowned Optional References","kind":"section","type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AutomaticReferenceCounting#Unowned-Optional-References","url":"\/documentation\/the-swift-programming-language\/automaticreferencecounting#Unowned-Optional-References"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Types#Protocol-Composition-Type":{"type":"topic","url":"\/documentation\/the-swift-programming-language\/types#Protocol-Composition-Type","title":"Protocol Composition Type","abstract":[],"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Types#Protocol-Composition-Type","kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Protocols#Conditionally-Conforming-to-a-Protocol":{"abstract":[],"title":"Conditionally Conforming to a Protocol","kind":"section","type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Protocols#Conditionally-Conforming-to-a-Protocol","url":"\/documentation\/the-swift-programming-language\/protocols#Conditionally-Conforming-to-a-Protocol"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Declarations#Protocol-Declaration":{"type":"topic","url":"\/documentation\/the-swift-programming-language\/declarations#Protocol-Declaration","title":"Protocol Declaration","abstract":[],"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#Protocol-Declaration","kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/AdvancedOperators#Compound-Assignment-Operators":{"abstract":[],"title":"Compound Assignment Operators","kind":"section","type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AdvancedOperators#Compound-Assignment-Operators","url":"\/documentation\/the-swift-programming-language\/advancedoperators#Compound-Assignment-Operators"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Statements#While-Statement":{"type":"topic","url":"\/documentation\/the-swift-programming-language\/statements#While-Statement","title":"While Statement","abstract":[],"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Statements#While-Statement","kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/CollectionTypes#Dictionary-Type-Shorthand-Syntax":{"abstract":[],"title":"Dictionary Type Shorthand Syntax","kind":"section","type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/CollectionTypes#Dictionary-Type-Shorthand-Syntax","url":"\/documentation\/the-swift-programming-language\/collectiontypes#Dictionary-Type-Shorthand-Syntax"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/LexicalStructure":{"kind":"article","type":"topic","role":"article","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/LexicalStructure","title":"Lexical Structure","abstract":[{"type":"text","text":"Use the lowest-level components of the syntax."}],"url":"\/documentation\/the-swift-programming-language\/lexicalstructure"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/ControlFlow#Repeat-While":{"type":"topic","url":"\/documentation\/the-swift-programming-language\/controlflow#Repeat-While","title":"Repeat-While","abstract":[],"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/ControlFlow#Repeat-While","kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Enumerations":{"role":"article","abstract":[{"type":"text","text":"Model custom types that define a list of possible values."}],"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Enumerations","title":"Enumerations","url":"\/documentation\/the-swift-programming-language\/enumerations","type":"topic","kind":"article"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/AdvancedOperators#Overflow-Operators":{"title":"Overflow Operators","kind":"section","type":"topic","abstract":[],"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AdvancedOperators#Overflow-Operators","url":"\/documentation\/the-swift-programming-language\/advancedoperators#Overflow-Operators"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/OptionalChaining#Calling-Methods-Through-Optional-Chaining":{"abstract":[],"title":"Calling Methods Through Optional Chaining","kind":"section","type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/OptionalChaining#Calling-Methods-Through-Optional-Chaining","url":"\/documentation\/the-swift-programming-language\/optionalchaining#Calling-Methods-Through-Optional-Chaining"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Statements#Compiler-Control-Statements":{"type":"topic","url":"\/documentation\/the-swift-programming-language\/statements#Compiler-Control-Statements","title":"Compiler Control Statements","abstract":[],"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Statements#Compiler-Control-Statements","kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/AutomaticReferenceCounting#Weak-References":{"abstract":[],"title":"Weak References","kind":"section","type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AutomaticReferenceCounting#Weak-References","url":"\/documentation\/the-swift-programming-language\/automaticreferencecounting#Weak-References"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Statements#Do-Statement":{"type":"topic","url":"\/documentation\/the-swift-programming-language\/statements#Do-Statement","title":"Do Statement","abstract":[],"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Statements#Do-Statement","kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Attributes#attached":{"url":"\/documentation\/the-swift-programming-language\/attributes#attached","type":"topic","kind":"section","abstract":[],"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Attributes#attached","title":"attached"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Statements#Break-Statement":{"url":"\/documentation\/the-swift-programming-language\/statements#Break-Statement","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Statements#Break-Statement","title":"Break Statement","abstract":[],"kind":"section","type":"topic"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/AutomaticReferenceCounting#Defining-a-Capture-List":{"abstract":[],"title":"Defining a Capture List","kind":"section","type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AutomaticReferenceCounting#Defining-a-Capture-List","url":"\/documentation\/the-swift-programming-language\/automaticreferencecounting#Defining-a-Capture-List"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Expressions#Function-Call-Expression":{"type":"topic","url":"\/documentation\/the-swift-programming-language\/expressions#Function-Call-Expression","title":"Function Call Expression","abstract":[],"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Expressions#Function-Call-Expression","kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Types#Function-Type":{"abstract":[],"title":"Function Type","kind":"section","type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Types#Function-Type","url":"\/documentation\/the-swift-programming-language\/types#Function-Type"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/StringsAndCharacters#String-Interpolation":{"abstract":[],"url":"\/documentation\/the-swift-programming-language\/stringsandcharacters#String-Interpolation","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/StringsAndCharacters#String-Interpolation","title":"String Interpolation","type":"topic","kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Initialization#Initializer-Parameters-Without-Argument-Labels":{"type":"topic","url":"\/documentation\/the-swift-programming-language\/initialization#Initializer-Parameters-Without-Argument-Labels","title":"Initializer Parameters Without Argument Labels","abstract":[],"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Initialization#Initializer-Parameters-Without-Argument-Labels","kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Protocols#Class-Only-Protocols":{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Protocols#Class-Only-Protocols","type":"topic","url":"\/documentation\/the-swift-programming-language\/protocols#Class-Only-Protocols","abstract":[],"title":"Class-Only Protocols","kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Generics#Associated-Types":{"abstract":[],"title":"Associated Types","kind":"section","type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Generics#Associated-Types","url":"\/documentation\/the-swift-programming-language\/generics#Associated-Types"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/StringsAndCharacters#String-Indices":{"type":"topic","url":"\/documentation\/the-swift-programming-language\/stringsandcharacters#String-Indices","title":"String Indices","abstract":[],"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/StringsAndCharacters#String-Indices","kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Statements#Switching-Over-Future-Enumeration-Cases":{"abstract":[],"title":"Switching Over Future Enumeration Cases","kind":"section","type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Statements#Switching-Over-Future-Enumeration-Cases","url":"\/documentation\/the-swift-programming-language\/statements#Switching-Over-Future-Enumeration-Cases"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/AdvancedOperators#Result-Builders":{"type":"topic","url":"\/documentation\/the-swift-programming-language\/advancedoperators#Result-Builders","title":"Result Builders","abstract":[],"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AdvancedOperators#Result-Builders","kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Attributes#resultBuilder":{"type":"topic","kind":"section","abstract":[],"url":"\/documentation\/the-swift-programming-language\/attributes#resultBuilder","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Attributes#resultBuilder","title":"resultBuilder"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Properties#Type-Properties":{"abstract":[],"title":"Type Properties","kind":"section","type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Properties#Type-Properties","url":"\/documentation\/the-swift-programming-language\/properties#Type-Properties"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/StringsAndCharacters#Extended-String-Delimiters":{"type":"topic","url":"\/documentation\/the-swift-programming-language\/stringsandcharacters#Extended-String-Delimiters","title":"Extended String Delimiters","abstract":[],"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/StringsAndCharacters#Extended-String-Delimiters","kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Declarations#In-Out-Parameters":{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#In-Out-Parameters","abstract":[],"kind":"section","title":"In-Out Parameters","url":"\/documentation\/the-swift-programming-language\/declarations#In-Out-Parameters","type":"topic"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Declarations#Stored-Variable-Observers-and-Property-Observers":{"abstract":[],"title":"Stored Variable Observers and Property Observers","kind":"section","type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#Stored-Variable-Observers-and-Property-Observers","url":"\/documentation\/the-swift-programming-language\/declarations#Stored-Variable-Observers-and-Property-Observers"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Types#Self-Type":{"type":"topic","url":"\/documentation\/the-swift-programming-language\/types#Self-Type","title":"Self Type","abstract":[],"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Types#Self-Type","kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Functions#Variadic-Parameters":{"type":"topic","url":"\/documentation\/the-swift-programming-language\/functions#Variadic-Parameters","title":"Variadic Parameters","abstract":[],"kind":"section","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Functions#Variadic-Parameters"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/LexicalStructure#String-Literals":{"abstract":[],"title":"String Literals","kind":"section","type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/LexicalStructure#String-Literals","url":"\/documentation\/the-swift-programming-language\/lexicalstructure#String-Literals"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Closures#Trailing-Closures":{"type":"topic","url":"\/documentation\/the-swift-programming-language\/closures#Trailing-Closures","title":"Trailing Closures","abstract":[],"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Closures#Trailing-Closures","kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Generics#Contextual-Where-Clauses":{"abstract":[],"title":"Contextual Where Clauses","kind":"section","type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Generics#Contextual-Where-Clauses","url":"\/documentation\/the-swift-programming-language\/generics#Contextual-Where-Clauses"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Closures#Closures-Are-Reference-Types":{"type":"topic","url":"\/documentation\/the-swift-programming-language\/closures#Closures-Are-Reference-Types","title":"Closures Are Reference Types","abstract":[],"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Closures#Closures-Are-Reference-Types","kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/AdvancedOperators#Prefix-and-Postfix-Operators":{"abstract":[],"title":"Prefix and Postfix Operators","kind":"section","type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AdvancedOperators#Prefix-and-Postfix-Operators","url":"\/documentation\/the-swift-programming-language\/advancedoperators#Prefix-and-Postfix-Operators"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Functions#Default-Parameter-Values":{"abstract":[],"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Functions#Default-Parameter-Values","title":"Default Parameter Values","url":"\/documentation\/the-swift-programming-language\/functions#Default-Parameter-Values","type":"topic","kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/TheBasics#Declaring-Constants-and-Variables":{"type":"topic","url":"\/documentation\/the-swift-programming-language\/thebasics#Declaring-Constants-and-Variables","title":"Declaring Constants and Variables","abstract":[],"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/TheBasics#Declaring-Constants-and-Variables","kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/BasicOperators#Nil-Coalescing-Operator":{"abstract":[],"url":"\/documentation\/the-swift-programming-language\/basicoperators#Nil-Coalescing-Operator","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/BasicOperators#Nil-Coalescing-Operator","title":"Nil-Coalescing Operator","type":"topic","kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Closures#Escaping-Closures":{"title":"Escaping Closures","abstract":[],"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Closures#Escaping-Closures","url":"\/documentation\/the-swift-programming-language\/closures#Escaping-Closures","type":"topic","kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/AdvancedOperators#Equivalence-Operators":{"title":"Equivalence Operators","url":"\/documentation\/the-swift-programming-language\/advancedoperators#Equivalence-Operators","kind":"section","abstract":[],"type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AdvancedOperators#Equivalence-Operators"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Declarations#Function-Declaration":{"abstract":[],"title":"Function Declaration","kind":"section","type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#Function-Declaration","url":"\/documentation\/the-swift-programming-language\/declarations#Function-Declaration"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/LexicalStructure#Operators":{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/LexicalStructure#Operators","kind":"section","title":"Operators","url":"\/documentation\/the-swift-programming-language\/lexicalstructure#Operators","abstract":[],"type":"topic"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/OptionalChaining":{"role":"article","abstract":[{"type":"text","text":"Access members of an optional value without unwrapping."}],"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/OptionalChaining","title":"Optional Chaining","type":"topic","url":"\/documentation\/the-swift-programming-language\/optionalchaining","kind":"article"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Properties#Property-Observers":{"abstract":[],"type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Properties#Property-Observers","title":"Property Observers","url":"\/documentation\/the-swift-programming-language\/properties#Property-Observers","kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Statements#Defer-Statement":{"type":"topic","url":"\/documentation\/the-swift-programming-language\/statements#Defer-Statement","title":"Defer Statement","abstract":[],"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Statements#Defer-Statement","kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Declarations#Protocol-Associated-Type-Declaration":{"abstract":[],"title":"Protocol Associated Type Declaration","kind":"section","type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#Protocol-Associated-Type-Declaration","url":"\/documentation\/the-swift-programming-language\/declarations#Protocol-Associated-Type-Declaration"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/AdvancedOperators#Precedence-for-Custom-Infix-Operators":{"type":"topic","url":"\/documentation\/the-swift-programming-language\/advancedoperators#Precedence-for-Custom-Infix-Operators","title":"Precedence for Custom Infix Operators","abstract":[],"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AdvancedOperators#Precedence-for-Custom-Infix-Operators","kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Initialization#Failable-Initializers":{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Initialization#Failable-Initializers","type":"topic","url":"\/documentation\/the-swift-programming-language\/initialization#Failable-Initializers","abstract":[],"title":"Failable Initializers","kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/TheBasics#Implicitly-Unwrapped-Optionals":{"abstract":[],"kind":"section","title":"Implicitly Unwrapped Optionals","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/TheBasics#Implicitly-Unwrapped-Optionals","type":"topic","url":"\/documentation\/the-swift-programming-language\/thebasics#Implicitly-Unwrapped-Optionals"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/ControlFlow#For-In-Loops":{"kind":"section","title":"For-In Loops","url":"\/documentation\/the-swift-programming-language\/controlflow#For-In-Loops","type":"topic","abstract":[],"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/ControlFlow#For-In-Loops"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/LexicalStructure#Literals":{"abstract":[],"title":"Literals","kind":"section","type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/LexicalStructure#Literals","url":"\/documentation\/the-swift-programming-language\/lexicalstructure#Literals"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Inheritance":{"kind":"article","type":"topic","role":"article","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Inheritance","title":"Inheritance","abstract":[{"type":"text","text":"Subclass to add or override functionality."}],"url":"\/documentation\/the-swift-programming-language\/inheritance"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/TheBasics#Printing-Constants-and-Variables":{"type":"topic","url":"\/documentation\/the-swift-programming-language\/thebasics#Printing-Constants-and-Variables","title":"Printing Constants and Variables","abstract":[],"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/TheBasics#Printing-Constants-and-Variables","kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Declarations#Functions-that-Never-Return":{"url":"\/documentation\/the-swift-programming-language\/declarations#Functions-that-Never-Return","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#Functions-that-Never-Return","title":"Functions that Never Return","abstract":[],"kind":"section","type":"topic"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/AdvancedOperators":{"abstract":[{"type":"text","text":"Define custom operators, perform bitwise operations, and use builder syntax."}],"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AdvancedOperators","title":"Advanced Operators","url":"\/documentation\/the-swift-programming-language\/advancedoperators","role":"article","type":"topic","kind":"article"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Statements#Guard-Statement":{"abstract":[],"title":"Guard Statement","kind":"section","type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Statements#Guard-Statement","url":"\/documentation\/the-swift-programming-language\/statements#Guard-Statement"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Attributes#dynamicMemberLookup":{"type":"topic","url":"\/documentation\/the-swift-programming-language\/attributes#dynamicMemberLookup","title":"dynamicMemberLookup","abstract":[],"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Attributes#dynamicMemberLookup","kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Generics#Using-a-Protocol-in-Its-Associated-Types-Constraints":{"abstract":[],"title":"Using a Protocol in Its Associated Type’s Constraints","kind":"section","type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Generics#Using-a-Protocol-in-Its-Associated-Types-Constraints","url":"\/documentation\/the-swift-programming-language\/generics#Using-a-Protocol-in-Its-Associated-Types-Constraints"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Properties#Shorthand-Getter-Declaration":{"kind":"section","url":"\/documentation\/the-swift-programming-language\/properties#Shorthand-Getter-Declaration","type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Properties#Shorthand-Getter-Declaration","abstract":[],"title":"Shorthand Getter Declaration"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/TheBasics#Optionals":{"abstract":[],"url":"\/documentation\/the-swift-programming-language\/thebasics#Optionals","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/TheBasics#Optionals","title":"Optionals","type":"topic","kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language":{"url":"\/documentation\/the-swift-programming-language","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language","kind":"article","role":"collection","abstract":[],"type":"topic","title":"The Swift Programming Language (5.9.2)"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Statements#Conditional-Compilation-Block":{"type":"topic","url":"\/documentation\/the-swift-programming-language\/statements#Conditional-Compilation-Block","title":"Conditional Compilation Block","abstract":[],"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Statements#Conditional-Compilation-Block","kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Expressions#Await-Operator":{"abstract":[],"title":"Await Operator","kind":"section","type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Expressions#Await-Operator","url":"\/documentation\/the-swift-programming-language\/expressions#Await-Operator"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/OpaqueTypes":{"abstract":[{"type":"text","text":"Hide implementation details about a value’s type."}],"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/OpaqueTypes","title":"Opaque and Boxed Types","url":"\/documentation\/the-swift-programming-language\/opaquetypes","role":"article","type":"topic","kind":"article"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Attributes#frozen":{"url":"\/documentation\/the-swift-programming-language\/attributes#frozen","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Attributes#frozen","type":"topic","title":"frozen","abstract":[],"kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/StringsAndCharacters#Comparing-Strings":{"type":"topic","url":"\/documentation\/the-swift-programming-language\/stringsandcharacters#Comparing-Strings","title":"Comparing Strings","abstract":[],"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/StringsAndCharacters#Comparing-Strings","kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Macros":{"abstract":[{"type":"text","text":"Use macros to generate code at compile time."}],"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Macros","title":"Macros","url":"\/documentation\/the-swift-programming-language\/macros","role":"article","type":"topic","kind":"article"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Initialization":{"abstract":[{"type":"text","text":"Set the initial values for a type’s stored properties and perform one-time setup."}],"type":"topic","title":"Initialization","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Initialization","kind":"article","url":"\/documentation\/the-swift-programming-language\/initialization","role":"article"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Declarations#Extension-Declaration":{"url":"\/documentation\/the-swift-programming-language\/declarations#Extension-Declaration","abstract":[],"kind":"section","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#Extension-Declaration","title":"Extension Declaration","type":"topic"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Initialization#Overriding-a-Failable-Initializer":{"abstract":[],"title":"Overriding a Failable Initializer","kind":"section","type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Initialization#Overriding-a-Failable-Initializer","url":"\/documentation\/the-swift-programming-language\/initialization#Overriding-a-Failable-Initializer"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Expressions#Implicit-Member-Expression":{"type":"topic","url":"\/documentation\/the-swift-programming-language\/expressions#Implicit-Member-Expression","title":"Implicit Member Expression","abstract":[],"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Expressions#Implicit-Member-Expression","kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/StringsAndCharacters#Extended-Grapheme-Clusters":{"abstract":[],"title":"Extended Grapheme Clusters","kind":"section","type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/StringsAndCharacters#Extended-Grapheme-Clusters","url":"\/documentation\/the-swift-programming-language\/stringsandcharacters#Extended-Grapheme-Clusters"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Protocols#Failable-Initializer-Requirements":{"type":"topic","url":"\/documentation\/the-swift-programming-language\/protocols#Failable-Initializer-Requirements","title":"Failable Initializer Requirements","abstract":[],"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Protocols#Failable-Initializer-Requirements","kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/StringsAndCharacters#Concatenating-Strings-and-Characters":{"abstract":[],"title":"Concatenating Strings and Characters","kind":"section","type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/StringsAndCharacters#Concatenating-Strings-and-Characters","url":"\/documentation\/the-swift-programming-language\/stringsandcharacters#Concatenating-Strings-and-Characters"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Concurrency#Sendable-Types":{"type":"topic","url":"\/documentation\/the-swift-programming-language\/concurrency#Sendable-Types","title":"Sendable Types","abstract":[],"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Concurrency#Sendable-Types","kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Statements#Line-Control-Statement":{"abstract":[],"title":"Line Control Statement","kind":"section","type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Statements#Line-Control-Statement","url":"\/documentation\/the-swift-programming-language\/statements#Line-Control-Statement"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/AutomaticReferenceCounting":{"abstract":[{"type":"text","text":"Model the lifetime of objects and their relationships."}],"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AutomaticReferenceCounting","title":"Automatic Reference Counting","url":"\/documentation\/the-swift-programming-language\/automaticreferencecounting","role":"article","type":"topic","kind":"article"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Closures#Closure-Expressions":{"type":"topic","url":"\/documentation\/the-swift-programming-language\/closures#Closure-Expressions","title":"Closure Expressions","abstract":[],"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Closures#Closure-Expressions","kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Attributes#dynamicCallable":{"abstract":[],"title":"dynamicCallable","kind":"section","type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Attributes#dynamicCallable","url":"\/documentation\/the-swift-programming-language\/attributes#dynamicCallable"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Expressions#Explicit-Member-Expression":{"url":"\/documentation\/the-swift-programming-language\/expressions#Explicit-Member-Expression","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Expressions#Explicit-Member-Expression","type":"topic","title":"Explicit Member Expression","abstract":[],"kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Declarations":{"kind":"article","type":"topic","role":"article","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations","title":"Declarations","abstract":[{"type":"text","text":"Introduce types, operators, variables, and other names and constructs."}],"url":"\/documentation\/the-swift-programming-language\/declarations"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/AdvancedOperators#Custom-Operators":{"title":"Custom Operators","kind":"section","type":"topic","abstract":[],"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AdvancedOperators#Custom-Operators","url":"\/documentation\/the-swift-programming-language\/advancedoperators#Custom-Operators"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Statements":{"abstract":[{"type":"text","text":"Group expressions and control the flow of execution."}],"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Statements","title":"Statements","url":"\/documentation\/the-swift-programming-language\/statements","role":"article","type":"topic","kind":"article"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/AccessControl":{"role":"article","abstract":[{"type":"text","text":"Manage the visibility of code by declaration, file, and module."}],"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AccessControl","title":"Access Control","url":"\/documentation\/the-swift-programming-language\/accesscontrol","type":"topic","kind":"article"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Functions#Functions-With-an-Implicit-Return":{"type":"topic","url":"\/documentation\/the-swift-programming-language\/functions#Functions-With-an-Implicit-Return","title":"Functions With an Implicit Return","abstract":[],"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Functions#Functions-With-an-Implicit-Return","kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Declarations#Precedence-Group-Declaration":{"abstract":[],"title":"Precedence Group Declaration","kind":"section","type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#Precedence-Group-Declaration","url":"\/documentation\/the-swift-programming-language\/declarations#Precedence-Group-Declaration"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/TheBasics#Assertions-and-Preconditions":{"abstract":[],"type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/TheBasics#Assertions-and-Preconditions","title":"Assertions and Preconditions","url":"\/documentation\/the-swift-programming-language\/thebasics#Assertions-and-Preconditions","kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Attributes#Type-Attributes":{"type":"topic","url":"\/documentation\/the-swift-programming-language\/attributes#Type-Attributes","title":"Type Attributes","abstract":[],"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Attributes#Type-Attributes","kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Expressions#Initializer-Expression":{"abstract":[],"title":"Initializer Expression","kind":"section","type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Expressions#Initializer-Expression","url":"\/documentation\/the-swift-programming-language\/expressions#Initializer-Expression"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Inheritance#Overriding-Property-Getters-and-Setters":{"type":"topic","url":"\/documentation\/the-swift-programming-language\/inheritance#Overriding-Property-Getters-and-Setters","title":"Overriding Property Getters and Setters","abstract":[],"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Inheritance#Overriding-Property-Getters-and-Setters","kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Attributes#available":{"abstract":[],"title":"available","kind":"section","type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Attributes#available","url":"\/documentation\/the-swift-programming-language\/attributes#available"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Expressions#Try-Operator":{"type":"topic","url":"\/documentation\/the-swift-programming-language\/expressions#Try-Operator","title":"Try Operator","abstract":[],"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Expressions#Try-Operator","kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/ErrorHandling#Converting-Errors-to-Optional-Values":{"abstract":[],"title":"Converting Errors to Optional Values","kind":"section","type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/ErrorHandling#Converting-Errors-to-Optional-Values","url":"\/documentation\/the-swift-programming-language\/errorhandling#Converting-Errors-to-Optional-Values"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/OptionalChaining#Accessing-Properties-Through-Optional-Chaining":{"url":"\/documentation\/the-swift-programming-language\/optionalchaining#Accessing-Properties-Through-Optional-Chaining","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/OptionalChaining#Accessing-Properties-Through-Optional-Chaining","title":"Accessing Properties Through Optional Chaining","abstract":[],"kind":"section","type":"topic"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Enumerations#Raw-Values":{"abstract":[],"type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Enumerations#Raw-Values","title":"Raw Values","url":"\/documentation\/the-swift-programming-language\/enumerations#Raw-Values","kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Statements#Throw-Statement":{"type":"topic","url":"\/documentation\/the-swift-programming-language\/statements#Throw-Statement","title":"Throw Statement","abstract":[],"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Statements#Throw-Statement","kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Declarations#Asynchronous-Functions-and-Methods":{"url":"\/documentation\/the-swift-programming-language\/declarations#Asynchronous-Functions-and-Methods","abstract":[],"kind":"section","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#Asynchronous-Functions-and-Methods","title":"Asynchronous Functions and Methods","type":"topic"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Generics#Associated-Types-with-a-Generic-Where-Clause":{"title":"Associated Types with a Generic Where Clause","url":"\/documentation\/the-swift-programming-language\/generics#Associated-Types-with-a-Generic-Where-Clause","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Generics#Associated-Types-with-a-Generic-Where-Clause","abstract":[],"kind":"section","type":"topic"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Attributes":{"role":"article","url":"\/documentation\/the-swift-programming-language\/attributes","kind":"article","abstract":[{"type":"text","text":"Add information to declarations and types."}],"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Attributes","type":"topic","title":"Attributes"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Expressions#Type-Casting-Operators":{"abstract":[],"title":"Type-Casting Operators","kind":"section","type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Expressions#Type-Casting-Operators","url":"\/documentation\/the-swift-programming-language\/expressions#Type-Casting-Operators"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/ControlFlow#Early-Exit":{"abstract":[],"type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/ControlFlow#Early-Exit","title":"Early Exit","url":"\/documentation\/the-swift-programming-language\/controlflow#Early-Exit","kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/TypeCasting#Type-Casting-for-Any-and-AnyObject":{"title":"Type Casting for Any and AnyObject","kind":"section","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/TypeCasting#Type-Casting-for-Any-and-AnyObject","abstract":[],"type":"topic","url":"\/documentation\/the-swift-programming-language\/typecasting#Type-Casting-for-Any-and-AnyObject"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Patterns":{"role":"article","url":"\/documentation\/the-swift-programming-language\/patterns","abstract":[{"type":"text","text":"Match and destructure values."}],"kind":"article","type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Patterns","title":"Patterns"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/CollectionTypes#Accessing-and-Modifying-a-Dictionary":{"abstract":[],"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/CollectionTypes#Accessing-and-Modifying-a-Dictionary","title":"Accessing and Modifying a Dictionary","url":"\/documentation\/the-swift-programming-language\/collectiontypes#Accessing-and-Modifying-a-Dictionary","type":"topic","kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/CollectionTypes#Hash-Values-for-Set-Types":{"type":"topic","url":"\/documentation\/the-swift-programming-language\/collectiontypes#Hash-Values-for-Set-Types","title":"Hash Values for Set Types","abstract":[],"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/CollectionTypes#Hash-Values-for-Set-Types","kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Patterns#Enumeration-Case-Pattern":{"abstract":[],"title":"Enumeration Case Pattern","kind":"section","type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Patterns#Enumeration-Case-Pattern","url":"\/documentation\/the-swift-programming-language\/patterns#Enumeration-Case-Pattern"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Types#Metatype-Type":{"type":"topic","url":"\/documentation\/the-swift-programming-language\/types#Metatype-Type","title":"Metatype Type","abstract":[],"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Types#Metatype-Type","kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Declarations#Methods-with-Special-Names":{"abstract":[],"title":"Methods with Special Names","kind":"section","type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#Methods-with-Special-Names","url":"\/documentation\/the-swift-programming-language\/declarations#Methods-with-Special-Names"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/CollectionTypes#Mutability-of-Collections":{"type":"topic","url":"\/documentation\/the-swift-programming-language\/collectiontypes#Mutability-of-Collections","title":"Mutability of Collections","abstract":[],"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/CollectionTypes#Mutability-of-Collections","kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Expressions#Conditional-Expression":{"abstract":[],"title":"Conditional Expression","kind":"section","type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Expressions#Conditional-Expression","url":"\/documentation\/the-swift-programming-language\/expressions#Conditional-Expression"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Expressions":{"abstract":[{"type":"text","text":"Access, modify, and assign values."}],"title":"Expressions","kind":"article","type":"topic","url":"\/documentation\/the-swift-programming-language\/expressions","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Expressions","role":"article"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/GenericParametersAndArguments":{"abstract":[{"type":"text","text":"Generalize declarations to abstract away concrete types."}],"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/GenericParametersAndArguments","title":"Generic Parameters and Arguments","url":"\/documentation\/the-swift-programming-language\/genericparametersandarguments","role":"article","type":"topic","kind":"article"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/ErrorHandling#Handling-Errors":{"abstract":[],"url":"\/documentation\/the-swift-programming-language\/errorhandling#Handling-Errors","type":"topic","title":"Handling Errors","kind":"section","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/ErrorHandling#Handling-Errors"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Attributes#main":{"type":"topic","url":"\/documentation\/the-swift-programming-language\/attributes#main","title":"main","abstract":[],"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Attributes#main","kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/BasicOperators#Range-Operators":{"url":"\/documentation\/the-swift-programming-language\/basicoperators#Range-Operators","kind":"section","title":"Range Operators","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/BasicOperators#Range-Operators","type":"topic","abstract":[]},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/ErrorHandling#Handling-Errors-Using-Do-Catch":{"abstract":[],"title":"Handling Errors Using Do-Catch","kind":"section","type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/ErrorHandling#Handling-Errors-Using-Do-Catch","url":"\/documentation\/the-swift-programming-language\/errorhandling#Handling-Errors-Using-Do-Catch"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Protocols#Checking-for-Protocol-Conformance":{"abstract":[],"kind":"section","title":"Checking for Protocol Conformance","url":"\/documentation\/the-swift-programming-language\/protocols#Checking-for-Protocol-Conformance","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Protocols#Checking-for-Protocol-Conformance","type":"topic"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Expressions#Implicit-Conversion-to-a-Pointer-Type":{"type":"topic","url":"\/documentation\/the-swift-programming-language\/expressions#Implicit-Conversion-to-a-Pointer-Type","title":"Implicit Conversion to a Pointer Type","abstract":[],"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Expressions#Implicit-Conversion-to-a-Pointer-Type","kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Declarations#Rethrowing-Functions-and-Methods":{"url":"\/documentation\/the-swift-programming-language\/declarations#Rethrowing-Functions-and-Methods","abstract":[],"kind":"section","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#Rethrowing-Functions-and-Methods","title":"Rethrowing Functions and Methods","type":"topic"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Declarations#Failable-Initializers":{"kind":"section","title":"Failable Initializers","url":"\/documentation\/the-swift-programming-language\/declarations#Failable-Initializers","abstract":[],"type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#Failable-Initializers"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Expressions#Literal-Expression":{"url":"\/documentation\/the-swift-programming-language\/expressions#Literal-Expression","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Expressions#Literal-Expression","title":"Literal Expression","abstract":[],"kind":"section","type":"topic"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/StringsAndCharacters#Special-Characters-in-String-Literals":{"abstract":[],"title":"Special Characters in String Literals","kind":"section","type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/StringsAndCharacters#Special-Characters-in-String-Literals","url":"\/documentation\/the-swift-programming-language\/stringsandcharacters#Special-Characters-in-String-Literals"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Declarations#Enumerations-with-Cases-of-a-Raw-Value-Type":{"type":"topic","url":"\/documentation\/the-swift-programming-language\/declarations#Enumerations-with-Cases-of-a-Raw-Value-Type","title":"Enumerations with Cases of a Raw-Value Type","abstract":[],"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#Enumerations-with-Cases-of-a-Raw-Value-Type","kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Expressions#Capture-Lists":{"abstract":[],"kind":"section","title":"Capture Lists","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Expressions#Capture-Lists","type":"topic","url":"\/documentation\/the-swift-programming-language\/expressions#Capture-Lists"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/OptionalChaining#Accessing-Subscripts-of-Optional-Type":{"abstract":[],"title":"Accessing Subscripts of Optional Type","kind":"section","type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/OptionalChaining#Accessing-Subscripts-of-Optional-Type","url":"\/documentation\/the-swift-programming-language\/optionalchaining#Accessing-Subscripts-of-Optional-Type"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Statements#Switch-Statement":{"type":"topic","url":"\/documentation\/the-swift-programming-language\/statements#Switch-Statement","title":"Switch Statement","abstract":[],"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Statements#Switch-Statement","kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Enumerations#Iterating-over-Enumeration-Cases":{"abstract":[],"title":"Iterating over Enumeration Cases","kind":"section","type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Enumerations#Iterating-over-Enumeration-Cases","url":"\/documentation\/the-swift-programming-language\/enumerations#Iterating-over-Enumeration-Cases"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Attributes#Result-Transformations":{"type":"topic","url":"\/documentation\/the-swift-programming-language\/attributes#Result-Transformations","title":"Result Transformations","abstract":[],"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Attributes#Result-Transformations","kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/ControlFlow#Deferred-Actions":{"title":"Deferred Actions","url":"\/documentation\/the-swift-programming-language\/controlflow#Deferred-Actions","abstract":[],"type":"topic","kind":"section","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/ControlFlow#Deferred-Actions"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Generics#Generic-Where-Clauses":{"url":"\/documentation\/the-swift-programming-language\/generics#Generic-Where-Clauses","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Generics#Generic-Where-Clauses","title":"Generic Where Clauses","abstract":[],"kind":"section","type":"topic"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/CollectionTypes#Array-Type-Shorthand-Syntax":{"abstract":[],"title":"Array Type Shorthand Syntax","kind":"section","type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/CollectionTypes#Array-Type-Shorthand-Syntax","url":"\/documentation\/the-swift-programming-language\/collectiontypes#Array-Type-Shorthand-Syntax"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/ControlFlow":{"kind":"article","type":"topic","title":"Control Flow","url":"\/documentation\/the-swift-programming-language\/controlflow","abstract":[{"type":"text","text":"Structure code with branches, loops, and early exits."}],"role":"article","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/ControlFlow"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Statements#Compile-Time-Diagnostic-Statement":{"type":"topic","url":"\/documentation\/the-swift-programming-language\/statements#Compile-Time-Diagnostic-Statement","title":"Compile-Time Diagnostic Statement","abstract":[],"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Statements#Compile-Time-Diagnostic-Statement","kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Expressions#Optional-Chaining-Expression":{"abstract":[],"title":"Optional-Chaining Expression","kind":"section","type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Expressions#Optional-Chaining-Expression","url":"\/documentation\/the-swift-programming-language\/expressions#Optional-Chaining-Expression"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/CollectionTypes#Arrays":{"title":"Arrays","kind":"section","type":"topic","abstract":[],"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/CollectionTypes#Arrays","url":"\/documentation\/the-swift-programming-language\/collectiontypes#Arrays"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Declarations#Type-Variable-Properties":{"type":"topic","url":"\/documentation\/the-swift-programming-language\/declarations#Type-Variable-Properties","title":"Type Variable Properties","abstract":[],"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#Type-Variable-Properties","kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Generics":{"kind":"article","type":"topic","role":"article","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Generics","title":"Generics","abstract":[{"type":"text","text":"Write code that works for multiple types and specify requirements for those types."}],"url":"\/documentation\/the-swift-programming-language\/generics"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Types":{"abstract":[{"type":"text","text":"Use built-in named and compound types."}],"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Types","title":"Types","url":"\/documentation\/the-swift-programming-language\/types","role":"article","type":"topic","kind":"article"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Attributes#backDeployed":{"abstract":[],"title":"backDeployed","kind":"section","type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Attributes#backDeployed","url":"\/documentation\/the-swift-programming-language\/attributes#backDeployed"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/MemorySafety":{"role":"article","abstract":[{"type":"text","text":"Structure your code to avoid conflicts when accessing memory."}],"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/MemorySafety","title":"Memory Safety","url":"\/documentation\/the-swift-programming-language\/memorysafety","type":"topic","kind":"article"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/CollectionTypes#Sets":{"type":"topic","url":"\/documentation\/the-swift-programming-language\/collectiontypes#Sets","title":"Sets","abstract":[],"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/CollectionTypes#Sets","kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/AccessControl#Access-Levels-for-Unit-Test-Targets":{"abstract":[],"title":"Access Levels for Unit Test Targets","kind":"section","type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AccessControl#Access-Levels-for-Unit-Test-Targets","url":"\/documentation\/the-swift-programming-language\/accesscontrol#Access-Levels-for-Unit-Test-Targets"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Attributes#Declaration-Attributes":{"abstract":[],"url":"\/documentation\/the-swift-programming-language\/attributes#Declaration-Attributes","type":"topic","title":"Declaration Attributes","kind":"section","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Attributes#Declaration-Attributes"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Patterns#Optional-Pattern":{"type":"topic","url":"\/documentation\/the-swift-programming-language\/patterns#Optional-Pattern","title":"Optional Pattern","abstract":[],"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Patterns#Optional-Pattern","kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Initialization#Initializer-Inheritance-and-Overriding":{"abstract":[],"title":"Initializer Inheritance and Overriding","kind":"section","type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Initialization#Initializer-Inheritance-and-Overriding","url":"\/documentation\/the-swift-programming-language\/initialization#Initializer-Inheritance-and-Overriding"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/TheBasics#Type-Annotations":{"url":"\/documentation\/the-swift-programming-language\/thebasics#Type-Annotations","kind":"section","title":"Type Annotations","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/TheBasics#Type-Annotations","type":"topic","abstract":[]},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/GuidedTour":{"role":"article","abstract":[{"type":"text","text":"Explore the features and syntax of Swift."}],"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/GuidedTour","title":"A Swift Tour","type":"topic","url":"\/documentation\/the-swift-programming-language\/guidedtour","kind":"article"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Types#Any-Type":{"type":"topic","url":"\/documentation\/the-swift-programming-language\/types#Any-Type","title":"Any Type","abstract":[],"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Types#Any-Type","kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Statements#Availability-Condition":{"abstract":[],"title":"Availability Condition","kind":"section","type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Statements#Availability-Condition","url":"\/documentation\/the-swift-programming-language\/statements#Availability-Condition"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/TheBasics#Optional-Binding":{"url":"\/documentation\/the-swift-programming-language\/thebasics#Optional-Binding","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/TheBasics#Optional-Binding","title":"Optional Binding","abstract":[],"kind":"section","type":"topic"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/ControlFlow#Switch":{"url":"\/documentation\/the-swift-programming-language\/controlflow#Switch","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/ControlFlow#Switch","type":"topic","title":"Switch","abstract":[],"kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/BasicOperators#Comparison-Operators":{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/BasicOperators#Comparison-Operators","abstract":[],"url":"\/documentation\/the-swift-programming-language\/basicoperators#Comparison-Operators","type":"topic","kind":"section","title":"Comparison Operators"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Protocols#Protocol-Composition":{"title":"Protocol Composition","kind":"section","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Protocols#Protocol-Composition","abstract":[],"type":"topic","url":"\/documentation\/the-swift-programming-language\/protocols#Protocol-Composition"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Subscripts#Subscript-Options":{"type":"topic","url":"\/documentation\/the-swift-programming-language\/subscripts#Subscript-Options","title":"Subscript Options","abstract":[],"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Subscripts#Subscript-Options","kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Functions#Optional-Tuple-Return-Types":{"abstract":[],"title":"Optional Tuple Return Types","kind":"section","type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Functions#Optional-Tuple-Return-Types","url":"\/documentation\/the-swift-programming-language\/functions#Optional-Tuple-Return-Types"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/AdvancedOperators#Value-Overflow":{"type":"topic","url":"\/documentation\/the-swift-programming-language\/advancedoperators#Value-Overflow","title":"Value Overflow","abstract":[],"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AdvancedOperators#Value-Overflow","kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Attributes#Sendable":{"abstract":[],"title":"Sendable","kind":"section","type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Attributes#Sendable","url":"\/documentation\/the-swift-programming-language\/attributes#Sendable"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Concurrency":{"abstract":[{"type":"text","text":"Perform asynchronous operations."}],"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Concurrency","title":"Concurrency","url":"\/documentation\/the-swift-programming-language\/concurrency","role":"article","type":"topic","kind":"article"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Protocols#Initializer-Requirements":{"type":"topic","url":"\/documentation\/the-swift-programming-language\/protocols#Initializer-Requirements","title":"Initializer Requirements","abstract":[],"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Protocols#Initializer-Requirements","kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Functions":{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Functions","url":"\/documentation\/the-swift-programming-language\/functions","type":"topic","title":"Functions","abstract":[{"text":"Define and call functions, label their arguments, and use their return values.","type":"text"}],"role":"article","kind":"article"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Declarations#Type-Alias-Declaration":{"kind":"section","url":"\/documentation\/the-swift-programming-language\/declarations#Type-Alias-Declaration","abstract":[],"type":"topic","title":"Type Alias Declaration","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#Type-Alias-Declaration"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Closures#Capturing-Values":{"abstract":[],"kind":"section","title":"Capturing Values","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Closures#Capturing-Values","type":"topic","url":"\/documentation\/the-swift-programming-language\/closures#Capturing-Values"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Attributes#unknown":{"abstract":[],"title":"unknown","kind":"section","type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Attributes#unknown","url":"\/documentation\/the-swift-programming-language\/attributes#unknown"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/ErrorHandling":{"role":"article","title":"Error Handling","url":"\/documentation\/the-swift-programming-language\/errorhandling","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/ErrorHandling","kind":"article","type":"topic","abstract":[{"text":"Respond to and recover from errors.","type":"text"}]},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/AccessControl#Access-Levels":{"type":"topic","url":"\/documentation\/the-swift-programming-language\/accesscontrol#Access-Levels","title":"Access Levels","abstract":[],"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AccessControl#Access-Levels","kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Declarations#Declaration-Modifiers":{"abstract":[],"title":"Declaration Modifiers","kind":"section","type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#Declaration-Modifiers","url":"\/documentation\/the-swift-programming-language\/declarations#Declaration-Modifiers"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Initialization#Memberwise-Initializers-for-Structure-Types":{"title":"Memberwise Initializers for Structure Types","url":"\/documentation\/the-swift-programming-language\/initialization#Memberwise-Initializers-for-Structure-Types","type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Initialization#Memberwise-Initializers-for-Structure-Types","abstract":[],"kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Declarations#Parameter-Modifiers":{"type":"topic","url":"\/documentation\/the-swift-programming-language\/declarations#Parameter-Modifiers","title":"Parameter Modifiers","abstract":[],"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#Parameter-Modifiers","kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Initialization#Assigning-Constant-Properties-During-Initialization":{"abstract":[],"title":"Assigning Constant Properties During Initialization","kind":"section","type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Initialization#Assigning-Constant-Properties-During-Initialization","url":"\/documentation\/the-swift-programming-language\/initialization#Assigning-Constant-Properties-During-Initialization"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/StringsAndCharacters#Unicode-Scalar-Values":{"type":"topic","url":"\/documentation\/the-swift-programming-language\/stringsandcharacters#Unicode-Scalar-Values","title":"Unicode Scalar Values","abstract":[],"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/StringsAndCharacters#Unicode-Scalar-Values","kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Generics#Extensions-with-a-Generic-Where-Clause":{"title":"Extensions with a Generic Where Clause","url":"\/documentation\/the-swift-programming-language\/generics#Extensions-with-a-Generic-Where-Clause","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Generics#Extensions-with-a-Generic-Where-Clause","abstract":[],"kind":"section","type":"topic"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/ControlFlow#Checking-API-Availability":{"abstract":[],"title":"Checking API Availability","kind":"section","type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/ControlFlow#Checking-API-Availability","url":"\/documentation\/the-swift-programming-language\/controlflow#Checking-API-Availability"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Subscripts#Type-Subscripts":{"type":"topic","url":"\/documentation\/the-swift-programming-language\/subscripts#Type-Subscripts","title":"Type Subscripts","abstract":[],"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Subscripts#Type-Subscripts","kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/TheBasics#Debugging-with-Assertions":{"abstract":[],"title":"Debugging with Assertions","kind":"section","type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/TheBasics#Debugging-with-Assertions","url":"\/documentation\/the-swift-programming-language\/thebasics#Debugging-with-Assertions"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/StringsAndCharacters":{"abstract":[{"type":"text","text":"Store and manipulate text."}],"type":"topic","title":"Strings and Characters","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/StringsAndCharacters","kind":"article","url":"\/documentation\/the-swift-programming-language\/stringsandcharacters","role":"article"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/CollectionTypes#Accessing-and-Modifying-an-Array":{"type":"topic","url":"\/documentation\/the-swift-programming-language\/collectiontypes#Accessing-and-Modifying-an-Array","title":"Accessing and Modifying an Array","abstract":[],"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/CollectionTypes#Accessing-and-Modifying-an-Array","kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/LexicalStructure#Identifiers":{"title":"Identifiers","kind":"section","type":"topic","abstract":[],"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/LexicalStructure#Identifiers","url":"\/documentation\/the-swift-programming-language\/lexicalstructure#Identifiers"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Generics#Generic-Subscripts":{"abstract":[],"title":"Generic Subscripts","kind":"section","type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Generics#Generic-Subscripts","url":"\/documentation\/the-swift-programming-language\/generics#Generic-Subscripts"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Protocols":{"abstract":[{"type":"text","text":"Define requirements that conforming types must implement."}],"type":"topic","title":"Protocols","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Protocols","kind":"article","url":"\/documentation\/the-swift-programming-language\/protocols","role":"article"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Properties#Property-Wrappers":{"type":"topic","url":"\/documentation\/the-swift-programming-language\/properties#Property-Wrappers","title":"Property Wrappers","abstract":[],"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Properties#Property-Wrappers","kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Enumerations#Implicitly-Assigned-Raw-Values":{"abstract":[],"title":"Implicitly Assigned Raw Values","kind":"section","type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Enumerations#Implicitly-Assigned-Raw-Values","url":"\/documentation\/the-swift-programming-language\/enumerations#Implicitly-Assigned-Raw-Values"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Enumerations#Recursive-Enumerations":{"type":"topic","url":"\/documentation\/the-swift-programming-language\/enumerations#Recursive-Enumerations","title":"Recursive Enumerations","abstract":[],"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Enumerations#Recursive-Enumerations","kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Closures#Autoclosures":{"url":"\/documentation\/the-swift-programming-language\/closures#Autoclosures","abstract":[],"kind":"section","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Closures#Autoclosures","title":"Autoclosures","type":"topic"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/AdvancedOperators#Operator-Methods":{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AdvancedOperators#Operator-Methods","kind":"section","title":"Operator Methods","url":"\/documentation\/the-swift-programming-language\/advancedoperators#Operator-Methods","abstract":[],"type":"topic"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/ErrorHandling#Representing-and-Throwing-Errors":{"abstract":[],"title":"Representing and Throwing Errors","kind":"section","type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/ErrorHandling#Representing-and-Throwing-Errors","url":"\/documentation\/the-swift-programming-language\/errorhandling#Representing-and-Throwing-Errors"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Protocols#Adopting-a-Protocol-Using-a-Synthesized-Implementation":{"abstract":[],"title":"Adopting a Protocol Using a Synthesized Implementation","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Protocols#Adopting-a-Protocol-Using-a-Synthesized-Implementation","type":"topic","kind":"section","url":"\/documentation\/the-swift-programming-language\/protocols#Adopting-a-Protocol-Using-a-Synthesized-Implementation"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Protocols#Optional-Protocol-Requirements":{"kind":"section","url":"\/documentation\/the-swift-programming-language\/protocols#Optional-Protocol-Requirements","abstract":[],"type":"topic","title":"Optional Protocol Requirements","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Protocols#Optional-Protocol-Requirements"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Expressions#Selector-Expression":{"type":"topic","url":"\/documentation\/the-swift-programming-language\/expressions#Selector-Expression","title":"Selector Expression","abstract":[],"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Expressions#Selector-Expression","kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/LexicalStructure#Keywords-and-Punctuation":{"abstract":[],"title":"Keywords and Punctuation","kind":"section","type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/LexicalStructure#Keywords-and-Punctuation","url":"\/documentation\/the-swift-programming-language\/lexicalstructure#Keywords-and-Punctuation"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Generics#Extending-a-Generic-Type":{"title":"Extending a Generic Type","url":"\/documentation\/the-swift-programming-language\/generics#Extending-a-Generic-Type","abstract":[],"type":"topic","kind":"section","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Generics#Extending-a-Generic-Type"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Protocols#Protocol-Extensions":{"abstract":[],"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Protocols#Protocol-Extensions","url":"\/documentation\/the-swift-programming-language\/protocols#Protocol-Extensions","type":"topic","title":"Protocol Extensions","kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/BasicOperators#Half-Open-Range-Operator":{"type":"topic","url":"\/documentation\/the-swift-programming-language\/basicoperators#Half-Open-Range-Operator","title":"Half-Open Range Operator","abstract":[],"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/BasicOperators#Half-Open-Range-Operator","kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Declarations#Actor-Declaration":{"abstract":[],"title":"Actor Declaration","kind":"section","type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#Actor-Declaration","url":"\/documentation\/the-swift-programming-language\/declarations#Actor-Declaration"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Expressions#Key-Path-Expression":{"type":"topic","url":"\/documentation\/the-swift-programming-language\/expressions#Key-Path-Expression","title":"Key-Path Expression","abstract":[],"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Expressions#Key-Path-Expression","kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Initialization#Required-Initializers":{"kind":"section","title":"Required Initializers","url":"\/documentation\/the-swift-programming-language\/initialization#Required-Initializers","abstract":[],"type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Initialization#Required-Initializers"}}}